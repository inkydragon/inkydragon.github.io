<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>pyplot 原点相交的坐标轴与箭头</title>
      <link href="/pyplot-%E5%8E%9F%E7%82%B9%E7%9B%B8%E4%BA%A4%E7%9A%84%E5%9D%90%E6%A0%87%E8%BD%B4%E4%B8%8E%E7%AE%AD%E5%A4%B4/"/>
      <url>/pyplot-%E5%8E%9F%E7%82%B9%E7%9B%B8%E4%BA%A4%E7%9A%84%E5%9D%90%E6%A0%87%E8%BD%B4%E4%B8%8E%E7%AE%AD%E5%A4%B4/</url>
      
        <content type="html"><![CDATA[<p>我就想画个简单的 SVG 图，懒得开 Ai 了(<del>虽然下面这个图还是用 Ai 画的</del>)，希望用 pyplot 直接画。</p><img src="/pyplot-原点相交的坐标轴与箭头/ReLU.svg" title="ReLU 的图像"><p><code>pyplot</code> 自带的坐标轴在左下角相交，并且没有箭头。</p><p>用自带的 <code>ax.spines[&#39;bottom&#39;].set_position((&#39;data&#39;,0))</code> 可以做到原点相交，但貌似加不了箭头。<br>ref: <a href="https://www.labri.fr/perso/nrougier/teaching/matplotlib/#moving-spines" target="_blank" rel="noopener">Moving spines - Matplotlib tutorial</a></p><p>用 <code>mpl_toolkits.axisartist.axislines</code> 包里的 <code>SubplotZero</code> 可以画出原点相交的坐标轴，<br>可以加箭头。但没办法加上大箭头(默认的 <code>size=1</code> 太小，更大的画/显示不出来)。<br>ref: <a href="https://matplotlib.org/gallery/axisartist/demo_axisline_style.html" target="_blank" rel="noopener">Axis line styles</a></p><p>最后看到 sf 上强行直接画箭头的就简单粗暴很符合要求。<br>ref: <a href="https://stackoverflow.com/a/23855021/10250520" target="_blank" rel="noopener">python - How to make ‘fuller’ axis arrows with matplotlib - Stack Overflow</a></p><a id="more"></a><p>以下为各种尝试，按尝试的时间为序：</p><h2 id="改现有轴的位置"><a href="#改现有轴的位置" class="headerlink" title="改现有轴的位置"></a>改现有轴的位置</h2><p>ref: <a href="https://www.labri.fr/perso/nrougier/teaching/matplotlib/#moving-spines" target="_blank" rel="noopener">Matplotlib tutorial</a></p><p>稍微改了下，去除了冗余的语句。</p><figure class="highlight python"><figcaption><span>move axis to base point</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">-8</span>, <span class="number">8</span>, <span class="number">17</span>)</span><br><span class="line">f1 = <span class="keyword">lambda</span> x: max(<span class="number">0</span>,x) <span class="comment"># ReLU</span></span><br><span class="line">y1 = list(map(f1, x))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原点正交的坐标系</span></span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(x, y1)</span><br><span class="line"></span><br><span class="line">ax = plt.gca()</span><br><span class="line">ax.spines[<span class="string">'right'</span>].set_visible(<span class="keyword">False</span>)</span><br><span class="line">ax.spines[<span class="string">'top'</span>].set_visible(<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#ax.xaxis.set_ticks_position('bottom')</span></span><br><span class="line"><span class="comment">#ax.yaxis.set_ticks_position('left')</span></span><br><span class="line">ax.spines[<span class="string">'bottom'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line">ax.spines[<span class="string">'left'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">plt.savefig(<span class="string">'base_point-1.svg'</span>, dpi = <span class="number">300</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><strong>【效果】</strong><br><img src="/pyplot-原点相交的坐标轴与箭头/base_point-1.svg" title="移动坐标轴的效果图"></p><p>试完这个没有找到怎么给它加箭头，所以又换了一种方法。</p><h2 id="原点新加轴且加箭头"><a href="#原点新加轴且加箭头" class="headerlink" title="原点新加轴且加箭头"></a>原点新加轴且加箭头</h2><p>ref: <a href="https://matplotlib.org/gallery/axisartist/demo_axisline_style.html" target="_blank" rel="noopener">Axis line styles — Matplotlib 3.0.2 documentation</a></p><figure class="highlight python"><figcaption><span>Add new ZeroAxis with arrows</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> mpl_toolkits.axisartist <span class="keyword">as</span> axisartist</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">-8</span>, <span class="number">8</span>, <span class="number">17</span>)</span><br><span class="line">f1 = <span class="keyword">lambda</span> x: max(<span class="number">0</span>,x) <span class="comment"># ReLU</span></span><br><span class="line">y1 = list(map(f1, x))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原点正交 + 带箭头</span></span><br><span class="line">fig = plt.figure(<span class="number">1</span>)</span><br><span class="line">ax = axisartist.SubplotZero(fig, <span class="number">111</span>)</span><br><span class="line">fig.add_subplot(ax)</span><br><span class="line"></span><br><span class="line">ax.axis[:].set_visible(<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> direction <span class="keyword">in</span> [<span class="string">"xzero"</span>, <span class="string">"yzero"</span>]:</span><br><span class="line">    ax.axis[direction].set_axisline_style(<span class="string">"-&gt;"</span>)</span><br><span class="line">    ax.axis[direction].set_visible(<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">ax.axis[<span class="string">"yzero"</span>].set_axis_direction(<span class="string">"left"</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y1)</span><br><span class="line">plt.savefig(<span class="string">'base_point_arrow.svg'</span>, dpi = <span class="number">300</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><strong>【效果】</strong><br><img src="/pyplot-原点相交的坐标轴与箭头/base_point_arrow.svg" title="新建在原点的轴并加上箭头的效果图"></p><p>这种箭头是加上了，但大小调不了，<code>size</code>调得过大就显示不出来，跑到图外面去了。</p><h2 id="直接画箭头"><a href="#直接画箭头" class="headerlink" title="直接画箭头"></a>直接画箭头</h2><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/17646247/how-to-make-fuller-axis-arrows-with-matplotlib/23855021#23855021" target="_blank" rel="noopener">python - How to make ‘fuller’ axis arrows with matplotlib - Stack Overflow</a></li></ul><p>原答案是直接画的箭头，你要是给 y 轴加上数字刻度就会出现在左侧：</p><img src="/pyplot-原点相交的坐标轴与箭头/arrow_axis-1.svg" title="给 y 轴加上刻度的效果图"><p>用前面学到的一句，调整一下 y 轴的位置：<br><code>ax.spines[&#39;left&#39;].set_position((&#39;data&#39;,0))</code></p><p>完整的绘图代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pylab <span class="keyword">as</span> pl</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> exp</span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">-8</span>, <span class="number">8</span>, <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line">f1 = <span class="keyword">lambda</span> x: max(<span class="number">0</span>,x) <span class="comment"># ReLU</span></span><br><span class="line">y1 = list(map(f1, x))    </span><br><span class="line">y2 = <span class="number">1</span>/(<span class="number">1</span>+exp(-x))      <span class="comment"># Sigmod</span></span><br><span class="line">y3 = (<span class="number">1</span>-exp(<span class="number">-2</span>*x))/(<span class="number">1</span>+exp(<span class="number">-2</span>*x))    <span class="comment"># tanh</span></span><br><span class="line"></span><br><span class="line">fig = pl.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">ax.plot(</span><br><span class="line">        x, y1,</span><br><span class="line">        color=<span class="string">"red"</span>, </span><br><span class="line">        linewidth=<span class="number">2.0</span>, </span><br><span class="line">        linestyle=<span class="string">"-"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">xmin, xmax = ax.get_xlim()</span><br><span class="line">ymin, ymax = ax.get_ylim()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除四周原有的边框</span></span><br><span class="line"><span class="keyword">for</span> side <span class="keyword">in</span> [<span class="string">'bottom'</span>,<span class="string">'right'</span>,<span class="string">'top'</span>,<span class="string">'left'</span>]:</span><br><span class="line">    ax.spines[side].set_visible(<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调整现有 y 轴位置</span></span><br><span class="line">ax.spines[<span class="string">'left'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># removing the axis ticks</span></span><br><span class="line">pl.xticks([<span class="number">-5</span>,<span class="number">0</span>,<span class="number">5</span>]) <span class="comment"># labels</span></span><br><span class="line">pl.yticks([<span class="number">5</span>])</span><br><span class="line">ax.xaxis.set_ticks_position(<span class="string">'none'</span>)</span><br><span class="line"><span class="comment">#ax.yaxis.set_ticks_position('left')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wider figure for demonstration</span></span><br><span class="line">fig.set_size_inches(<span class="number">4</span>,<span class="number">2.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get width and height of axes object to compute</span></span><br><span class="line"><span class="comment"># matching arrowhead length and width</span></span><br><span class="line">dps = fig.dpi_scale_trans.inverted()</span><br><span class="line">bbox = ax.get_window_extent().transformed(dps)</span><br><span class="line">width, height = bbox.width, bbox.height</span><br><span class="line"></span><br><span class="line"><span class="comment"># manual arrowhead width and length</span></span><br><span class="line">hw = <span class="number">1.</span>/<span class="number">20.</span>*(ymax-ymin)</span><br><span class="line">hl = <span class="number">1.</span>/<span class="number">20.</span>*(xmax-xmin)</span><br><span class="line">lw = <span class="number">1.</span> <span class="comment"># axis line width</span></span><br><span class="line">ohg = <span class="number">0.3</span> <span class="comment"># arrow overhang</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># compute matching arrowhead length and width</span></span><br><span class="line">yhw = hw/(ymax-ymin)*(xmax-xmin)* height/width</span><br><span class="line">yhl = hl/(xmax-xmin)*(ymax-ymin)* width/height</span><br><span class="line"></span><br><span class="line"><span class="comment"># draw x and y axis</span></span><br><span class="line">ax.arrow(xmin, <span class="number">0</span>, xmax-xmin, <span class="number">0.</span>, fc=<span class="string">'k'</span>, ec=<span class="string">'k'</span>, lw = lw,</span><br><span class="line">         head_width=hw, head_length=hl, overhang = ohg,</span><br><span class="line">         length_includes_head= <span class="keyword">True</span>, clip_on = <span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">ax.arrow(<span class="number">0</span>, ymin, <span class="number">0.</span>, ymax-ymin, fc=<span class="string">'k'</span>, ec=<span class="string">'k'</span>, lw = lw,</span><br><span class="line">         head_width=yhw, head_length=yhl, overhang = ohg,</span><br><span class="line">         length_includes_head= <span class="keyword">True</span>, clip_on = <span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># clip_on = False if only positive x or y values.</span></span><br><span class="line"></span><br><span class="line">pl.savefig(<span class="string">'arrow_axis-2.svg'</span>, dpi = <span class="number">300</span>)</span><br><span class="line">pl.show()</span><br></pre></td></tr></table></figure><p><strong>【最终效果】</strong><br><img src="/pyplot-原点相交的坐标轴与箭头/arrow_axis-2.svg" title="最终效果图"></p><h2 id="三种激活函数的图像"><a href="#三种激活函数的图像" class="headerlink" title="三种激活函数的图像"></a>三种激活函数的图像</h2><h3 id="ReLU"><a href="#ReLU" class="headerlink" title="ReLU"></a>ReLU</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$</span></span><br><span class="line"><span class="formula"><span class="tag">\<span class="name">begin</span><span class="string">&#123;aligned&#125;</span></span></span></span><br><span class="line"><span class="formula">f<span class="tag">\<span class="name">left</span></span>( x <span class="tag">\<span class="name">right</span></span>) </span></span><br><span class="line"><span class="formula">&amp;=<span class="tag">\<span class="name">max</span></span> <span class="tag">\<span class="name">left</span></span>( x,0 <span class="tag">\<span class="name">right</span></span>) <span class="tag">\<span class="name">\</span></span></span></span><br><span class="line"><span class="formula">&amp;=</span></span><br><span class="line"><span class="formula"><span class="tag">\<span class="name">begin</span><span class="string">&#123;cases&#125;</span></span></span></span><br><span class="line"><span class="formula"><span class="tag">\<span class="name">text</span><span class="string">&#123;0,&#125;</span></span>&amp;  x<span class="tag">\<span class="name">le</span></span> 0 <span class="tag">\<span class="name">\</span></span></span></span><br><span class="line"><span class="formula">x,&amp;         x<span class="tag">\<span class="name">ge</span></span> 0 <span class="tag">\<span class="name">\</span></span></span></span><br><span class="line"><span class="formula"><span class="tag">\<span class="name">end</span><span class="string">&#123;cases&#125;</span></span></span></span><br><span class="line"><span class="formula"><span class="tag">\<span class="name">end</span><span class="string">&#123;aligned&#125;</span></span></span></span><br><span class="line"><span class="formula">$$</span></span><br></pre></td></tr></table></figure><img src="/pyplot-原点相交的坐标轴与箭头/eq-ReLU.svg" title="ReLU 数学定义"><img src="/pyplot-原点相交的坐标轴与箭头/ReLU-final.svg" title="ReLU 图像"><h3 id="Sigmod"><a href="#Sigmod" class="headerlink" title="Sigmod"></a>Sigmod</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$</span></span><br><span class="line"><span class="formula">f<span class="tag">\<span class="name">left</span></span>( x <span class="tag">\<span class="name">right</span></span>) =<span class="tag">\<span class="name">frac</span><span class="string">&#123;1&#125;</span><span class="string">&#123;1+e^x&#125;</span></span></span></span><br><span class="line"><span class="formula">$$</span></span><br></pre></td></tr></table></figure><img src="/pyplot-原点相交的坐标轴与箭头/eq-sigmod.svg" title="sigmod 数学定义"><img src="/pyplot-原点相交的坐标轴与箭头/sigmod.svg" title="sigmod 图像"><h3 id="tanh"><a href="#tanh" class="headerlink" title="tanh"></a>tanh</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$</span></span><br><span class="line"><span class="formula">f<span class="tag">\<span class="name">left</span></span>( x <span class="tag">\<span class="name">right</span></span>) =<span class="tag">\<span class="name">frac</span><span class="string">&#123;1-e^&#123;-2x&#125;</span></span>&#125;&#123;1+e^&#123;-2x&#125;&#125;</span></span><br><span class="line"><span class="formula">$$</span></span><br></pre></td></tr></table></figure><img src="/pyplot-原点相交的坐标轴与箭头/eq-tanh.svg" title="tanh"><img src="/pyplot-原点相交的坐标轴与箭头/tanh.svg" title="tanh_图像">]]></content>
      
      
      
        <tags>
            
            <tag> matplotlib </tag>
            
            <tag> pyplot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>排版技术入门</title>
      <link href="/%E6%8E%92%E7%89%88%E6%8A%80%E6%9C%AF%E5%85%A5%E9%97%A8/"/>
      <url>/%E6%8E%92%E7%89%88%E6%8A%80%E6%9C%AF%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>知乎李阿玲dalao的答案资源扩充</p><a id="more"></a><ul><li><a href="https://www.zhihu.com/question/288651176" target="_blank" rel="noopener">如何入门排版及其相关技术的学习？ - 知乎</a></li></ul><p>参考书</p><ol><li>The Craft of Text Editing<ul><li>【官网】<a href="https://www.finseth.com/craft/" target="_blank" rel="noopener">The Craft of Text Editing</a></li><li>【Backup-HTML】<a href="http://web.mit.edu/~yandros/doc/craft-text-editing/" target="_blank" rel="noopener">The Craft of Text Editing by Craig A. Finseth</a></li></ul></li><li>Fonts &amp; Encodings</li><li>Computers &amp; Typesettings，五卷本</li><li>TeX in  Practice，四卷本</li><li>The Advanced TeXbook</li><li>Digital Typefaces, Description and Formats</li><li>Font Technology, Description and Tools</li><li>PostScript Language Reference Manual</li><li>PDF Reference</li><li>随便什么基础的图形学的书</li><li>如果想要输出Word或者渲染的话，就得把微软相关的文档看几遍</li><li>还有一些编译原理及字符串处理的书，这类书不多，看编译原理的书的时候看参考目录就行了</li></ol><p>参考文档：</p><ol><li>JIS X 4051 日本語文書の組版方法</li><li><a href="https://en.wikipedia.org/wiki/PostScript_fonts" target="_blank" rel="noopener">PostScript fonts</a> 中所列的PDF文档，这些基本上要常读</li></ol><p>一些在线的文档或者项目：</p><ul><li><a href="https://docs.microsoft.com/en-us/typography/" target="_blank" rel="noopener">Microsoft Typography - Typography | Microsoft Docs</a></li><li>The FreeType Project</li><li>TrueType Reference Manual</li></ul><p>一些开源项目：</p><ul><li><a href="https://www.freetype.org/" target="_blank" rel="noopener">The FreeType Project</a></li><li><a href="https://developer.apple.com/fonts/TrueType-Reference-Manual/" target="_blank" rel="noopener">TrueType Reference Manual - Fonts - Apple Developer</a></li><li><a href="https://www.cairographics.org/" target="_blank" rel="noopener">cairographics.org</a></li><li><a href="https://skia.org/" target="_blank" rel="noopener">Skia Graphics Library</a></li><li><a href="https://www.freedesktop.org/wiki/Software/HarfBuzz/" target="_blank" rel="noopener">HarfBuzz</a></li><li><a href="https://github.com/clerkma/ptex-ng" target="_blank" rel="noopener">clerkma/ptex-ng: Asiatic pTeX</a></li></ul><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Tsinghua-MOOC-DSA in C++</title>
      <link href="/Tsinghua-MOOC-DSA-in-CPP/"/>
      <url>/Tsinghua-MOOC-DSA-in-CPP/</url>
      
        <content type="html"><![CDATA[<p>Tsinghua MOOC DSA in C++ 示例代码</p><a id="more"></a><h1 id="VS-更改版本"><a href="#VS-更改版本" class="headerlink" title="VS 更改版本"></a>VS 更改版本</h1><p>由VS打开后自动升级版本，打开一个项目生成，报错400+</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">错误(活动)E1696无法打开 源 文件 &quot;stdio.h&quot;vector</span><br></pre></td></tr></table></figure><p>找不到基本的库，需要改一下配置：</p><ul><li>批量修改：项目&gt;配置属性&gt;常规&gt;Windows SDK 版本 到合适的版本。我的是<code>10.0.17134.0</code><img src="/Tsinghua-MOOC-DSA-in-CPP/setting1.png"></li></ul><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Seven Languages In Seven Weeks - Scala</title>
      <link href="/Seven-Languages-In-Seven-Weeks-Scala/"/>
      <url>/Seven-Languages-In-Seven-Weeks-Scala/</url>
      
        <content type="html"><![CDATA[<p>scala</p><a id="more"></a><h1 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h1><p><em><code>Scala</code> 与 <code>java</code> 的不同之处</em></p><ul><li>类型推断</li><li>函数式编程理念</li><li>不(可)变量</li><li>高级程序构造</li></ul><h1 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h1><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; println(<span class="string">"Hello, surreal world"</span>)</span><br><span class="line">Hello, surreal world</span><br><span class="line"></span><br><span class="line">scala&gt; println(<span class="string">'Hello, world'</span>)</span><br><span class="line">&lt;console&gt;:<span class="number">1</span>: error: unclosed character literal</span><br><span class="line">       println(<span class="string">'Hello, world'</span>)</span><br><span class="line">                            ^</span><br><span class="line"></span><br><span class="line">scala&gt; println(<span class="string">'!'</span>)</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">1</span> + <span class="number">1</span></span><br><span class="line">res2: Int = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">scala&gt; (<span class="number">1</span>) .+ (<span class="number">1</span>)</span><br><span class="line">res3: Int = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">5</span> + <span class="number">4</span> * <span class="number">3</span></span><br><span class="line">res4: Int = <span class="number">17</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">5</span> .+ (<span class="number">4</span> .* (<span class="number">3</span>))</span><br><span class="line">res5: Int = <span class="number">17</span></span><br><span class="line"></span><br><span class="line">scala&gt; (<span class="number">5</span>) .+ ((<span class="number">4</span>) .* (<span class="number">3</span>))</span><br><span class="line">res6: Int = <span class="number">17</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="string">"abc"</span>.size</span><br><span class="line">res7: Int = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="string">"abc"</span> + <span class="number">4</span></span><br><span class="line">res8: String = abc4</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">4</span> + <span class="string">"abc"</span></span><br><span class="line">res9: String = <span class="number">4</span>abc</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">4</span> + <span class="string">"1.0"</span></span><br><span class="line">res10: String = <span class="number">41.0</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">4</span> * <span class="string">"abc"</span></span><br><span class="line">&lt;console&gt;:<span class="number">12</span>: error: overloaded method value * with alternatives:</span><br><span class="line">  (x: Double)Double &lt;and&gt;</span><br><span class="line">  (x: Float)Float &lt;and&gt;</span><br><span class="line">  (x: Long)Long &lt;and&gt;</span><br><span class="line">  (x: Int)Int &lt;and&gt;</span><br><span class="line">  (x: Char)Int &lt;and&gt;</span><br><span class="line">  (x: Short)Int &lt;and&gt;</span><br><span class="line">  (x: Byte)Int</span><br><span class="line"> <span class="function">cannot be applied <span class="title">to</span> <span class="params">(String)</span></span></span><br><span class="line"><span class="function">       4 * "abc"</span></span><br><span class="line"><span class="function">         ^</span></span><br></pre></td></tr></table></figure><h3 id="表达式与条件"><a href="#表达式与条件" class="headerlink" title="表达式与条件"></a>表达式与条件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="number">5</span> &lt; <span class="number">6</span></span><br><span class="line">res0: Boolean = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">5</span> &lt;= <span class="number">6</span></span><br><span class="line">res1: Boolean = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">5</span> &gt;= <span class="number">2</span></span><br><span class="line">res2: Boolean = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">5</span> == <span class="number">2</span></span><br><span class="line">res3: Boolean = <span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">5</span> != <span class="number">2</span></span><br><span class="line">res4: Boolean = <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p><em>自动类型推断</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val a = <span class="number">1</span></span><br><span class="line">a: Int = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">scala&gt; val b = <span class="number">2</span></span><br><span class="line">b: Int = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">if</span> (b &lt; a) &#123;</span><br><span class="line">     | println(<span class="string">"true"</span>)</span><br><span class="line">     | &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     | println(<span class="string">"false"</span>)</span><br><span class="line">     | &#125;</span><br><span class="line"><span class="keyword">false</span></span><br></pre></td></tr></table></figure></p><p>Note:</p><ul><li>Scala 可以自动推断类型</li><li><code>var</code> 变量</li><li><code>val</code> 声明不变量</li></ul><p><em><code>0`</code>nil<code>与</code>false`</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scala&gt; Nil</span><br><span class="line">res6: scala.collection.immutable.Nil.type = List()</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">if</span> (<span class="keyword">false</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">if</span> (<span class="number">0</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">&lt;console&gt;:<span class="number">12</span>: error: type mismatch;</span><br><span class="line"> found   : Int(<span class="number">0</span>)</span><br><span class="line"> required: Boolean</span><br><span class="line">       <span class="keyword">if</span> (<span class="number">0</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">           ^</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">if</span> (Nil) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">&lt;console&gt;:<span class="number">12</span>: error: type mismatch;</span><br><span class="line"> found   : scala.collection.immutable.Nil.type</span><br><span class="line"> required: Boolean</span><br><span class="line">       <span class="keyword">if</span> (Nil) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">           ^</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">if</span> (<span class="string">''</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">&lt;console&gt;:<span class="number">1</span>: error: empty character literal</span><br><span class="line">       <span class="keyword">if</span> (<span class="string">''</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">           ^</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">if</span> (<span class="string">""</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">&lt;console&gt;:<span class="number">12</span>: error: type mismatch;</span><br><span class="line"> found   : String(<span class="string">""</span>)</span><br><span class="line"> required: Boolean</span><br><span class="line">       <span class="keyword">if</span> (<span class="string">""</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">           ^</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">if</span> (<span class="keyword">true</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line"><span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">if</span> (<span class="number">1</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">&lt;console&gt;:<span class="number">12</span>: error: type mismatch;</span><br><span class="line"> found   : Int(<span class="number">1</span>)</span><br><span class="line"> required: Boolean</span><br><span class="line">       <span class="keyword">if</span> (<span class="number">1</span>) &#123;println(<span class="string">"true"</span>)&#125;</span><br><span class="line">           ^</span><br></pre></td></tr></table></figure></p><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><h3 id="Range-与-元组"><a href="#Range-与-元组" class="headerlink" title="Range 与 元组"></a>Range 与 元组</h3><p><strong>Range</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val rang = <span class="number">0</span> until <span class="number">10</span></span><br><span class="line">rang: scala.collection.immutable.Range = Range <span class="number">0</span> until <span class="number">10</span></span><br><span class="line"></span><br><span class="line">scala&gt; val range = <span class="number">0</span> until <span class="number">10</span></span><br><span class="line">range: scala.collection.immutable.Range = Range <span class="number">0</span> until <span class="number">10</span></span><br><span class="line"></span><br><span class="line">scala&gt; range.start</span><br><span class="line">res1: Int = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">scala&gt; range.end</span><br><span class="line">res2: Int = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">scala&gt; range.step</span><br><span class="line">res3: Int = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">scala&gt; (<span class="number">0</span> to <span class="number">10</span>) by <span class="number">5</span></span><br><span class="line">res4: scala.collection.immutable.Range = Range <span class="number">0</span> to <span class="number">10</span> by <span class="number">5</span></span><br><span class="line"></span><br><span class="line">scala&gt; (<span class="number">0</span> to <span class="number">10</span>) by <span class="number">6</span></span><br><span class="line">res5: scala.collection.immutable.Range = inexact Range <span class="number">0</span> to <span class="number">10</span> by <span class="number">6</span></span><br><span class="line"></span><br><span class="line">scala&gt; (<span class="number">0</span> until <span class="number">10</span> by <span class="number">5</span>)</span><br><span class="line">res6: scala.collection.immutable.Range = Range <span class="number">0</span> until <span class="number">10</span> by <span class="number">5</span></span><br><span class="line"></span><br><span class="line">scala&gt; val range = (<span class="number">10</span> until <span class="number">0</span>) by -<span class="number">1</span></span><br><span class="line">range: scala.collection.immutable.Range = Range <span class="number">10</span> until <span class="number">0</span> by -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">scala&gt; val range = (<span class="number">10</span> until <span class="number">0</span>)</span><br><span class="line">range: scala.collection.immutable.Range = empty Range <span class="number">10</span> until <span class="number">0</span></span><br><span class="line"></span><br><span class="line">scala&gt; val range = (<span class="number">0</span> to <span class="number">10</span>)</span><br><span class="line">range: scala.collection.immutable.Range.Inclusive = Range <span class="number">0</span> to <span class="number">10</span></span><br><span class="line"></span><br><span class="line">scala&gt; val range = <span class="string">'a'</span> to <span class="string">'e'</span></span><br><span class="line">range: scala.collection.immutable.NumericRange.Inclusive[Char] = NumericRange a to e</span><br></pre></td></tr></table></figure></p><p><strong>元组</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val person = (<span class="string">"Elvis"</span>, <span class="string">"Presley"</span>)</span><br><span class="line">person: (String, String) = (Elvis,Presley)</span><br><span class="line"></span><br><span class="line">scala&gt; person._1</span><br><span class="line">res7: String = Elvis</span><br><span class="line"></span><br><span class="line">scala&gt; person._2</span><br><span class="line">res8: String = Presley</span><br><span class="line"></span><br><span class="line">scala&gt; person._3</span><br><span class="line">&lt;console&gt;:<span class="number">13</span>: error: <span class="function">value _3 is not a member <span class="title">of</span> <span class="params">(String, String)</span></span></span><br><span class="line"><span class="function">       person._3</span></span><br><span class="line"><span class="function">              ^</span></span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">scala&gt; val (x, y) = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">x: Int = <span class="number">1</span></span><br><span class="line">y: Int = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">scala&gt; val (x, y) = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">&lt;console&gt;:<span class="number">13</span>: error: constructor cannot be instantiated to expected type;</span><br><span class="line"> found   : (T1, T2)</span><br><span class="line"> required: (Int, Int, Int)</span><br><span class="line">       val (x, y) = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">           ^</span><br><span class="line"></span><br><span class="line">scala&gt; val (x, y, z) = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">x: Int = <span class="number">1</span></span><br><span class="line">y: Int = <span class="number">2</span></span><br><span class="line">z: Int = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">scala&gt; val (x, y, z) = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">&lt;console&gt;:<span class="number">14</span>: error: constructor cannot be instantiated to expected type;</span><br><span class="line"> found   : (T1, T2, T3)</span><br><span class="line"> required: (Int, Int)</span><br><span class="line">       val (x, y, z) = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">           ^</span><br></pre></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>定义类<br><code>class Person(firstName: String, lastName: String)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; class Person(firstName: String, lastName: String)</span><br><span class="line">defined <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">scala</span>&gt; <span class="title">val</span> <span class="title">gump</span> </span>= <span class="keyword">new</span> Person(<span class="string">"Forrest"</span>, <span class="string">"Gump"</span>)</span><br><span class="line">gump: Person = Person@<span class="number">5e9257</span>b3</span><br></pre></td></tr></table></figure><h3 id="扩展类"><a href="#扩展类" class="headerlink" title="扩展类"></a>扩展类</h3><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="function">def <span class="title">double</span><span class="params">(x:Int)</span>:Int </span>= x * <span class="number">2</span></span><br><span class="line"><span class="keyword">double</span>: (x: Int)Int</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">double</span>(<span class="number">4</span>)</span><br><span class="line">res0: Int = <span class="number">8</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="function">def <span class="title">double</span><span class="params">(x:Int)</span>:Int </span>= &#123;</span><br><span class="line">     |   x * <span class="number">2</span></span><br><span class="line">     | &#125;</span><br><span class="line"><span class="keyword">double</span>: (x: Int)Int</span><br><span class="line"></span><br><span class="line">scala&gt; <span class="keyword">double</span>(<span class="number">2</span>)</span><br><span class="line">res1: Int = <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="var-and-val"><a href="#var-and-val" class="headerlink" title="var and val"></a>var and val</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">var</span> mutable = <span class="string">"I am mutable"</span></span><br><span class="line">mutable: String = I am mutable</span><br><span class="line"></span><br><span class="line">scala&gt; mutable = <span class="string">"Touch me, change me..."</span></span><br><span class="line">mutable: String = Touch me, change me...</span><br><span class="line"></span><br><span class="line">scala&gt; val immutable = <span class="string">"I am not mutable"</span></span><br><span class="line">immutable: String = I am not mutable</span><br><span class="line"></span><br><span class="line">scala&gt; immutable = <span class="string">"Can't tounch this"</span></span><br><span class="line">&lt;console&gt;:<span class="number">12</span>: error: reassignment to val</span><br><span class="line">       immutable = <span class="string">"Can't tounch this"</span></span><br><span class="line">                 ^</span><br></pre></td></tr></table></figure><ul><li><code>var</code> 可变</li><li><code>val</code> 不可变</li><li>可变状态限制并发</li></ul><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><p><strong>List - 列表</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; List(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">res2: List[Int] = List(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">scala&gt; List(<span class="string">"one"</span>, <span class="string">"two"</span>, <span class="string">"three"</span>)</span><br><span class="line">res3: List[String] = List(one, two, three)</span><br><span class="line"></span><br><span class="line">scala&gt; List(<span class="number">1</span>, <span class="number">2</span>, <span class="string">"three"</span>)</span><br><span class="line">res4: List[Any] = List(<span class="number">1</span>, <span class="number">2</span>, three)</span><br><span class="line"></span><br><span class="line">scala&gt; List(<span class="number">1</span>, <span class="number">2</span>, <span class="string">"three"</span>)(<span class="number">2</span>)</span><br><span class="line">res5: Any = three</span><br><span class="line"></span><br><span class="line">scala&gt; List(<span class="number">1</span>, <span class="number">2</span>, <span class="string">"three"</span>)(<span class="number">3</span>)</span><br><span class="line">java.lang.IndexOutOfBoundsException: <span class="number">3</span></span><br><span class="line">  at scala.collection.LinearSeqOptimized.apply(LinearSeqOptimized.scala:<span class="number">63</span>)</span><br><span class="line">  at scala.collection.LinearSeqOptimized.apply$(LinearSeqOptimized.scala:<span class="number">61</span>)</span><br><span class="line">  at scala.collection.immutable.List.apply(List.scala:<span class="number">86</span>)</span><br><span class="line">  ... <span class="number">28</span> elided</span><br><span class="line"></span><br><span class="line">scala&gt; List(<span class="number">1</span>, <span class="number">2</span>, <span class="string">"three"</span>)(-<span class="number">1</span>)</span><br><span class="line">java.lang.IndexOutOfBoundsException: -<span class="number">1</span></span><br><span class="line">  at scala.collection.LinearSeqOptimized.apply(LinearSeqOptimized.scala:<span class="number">63</span>)</span><br><span class="line">  at scala.collection.LinearSeqOptimized.apply$(LinearSeqOptimized.scala:<span class="number">61</span>)</span><br><span class="line">  at scala.collection.immutable.List.apply(List.scala:<span class="number">86</span>)</span><br><span class="line">  ... <span class="number">28</span> elided</span><br><span class="line"></span><br><span class="line">scala&gt; Nil</span><br><span class="line">res8: scala.collection.immutable.Nil.type = List()</span><br><span class="line"></span><br><span class="line">scala&gt; List()</span><br><span class="line">res9: List[Nothing] = List()</span><br></pre></td></tr></table></figure><p><strong>set - 集合</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val animals = Set(<span class="string">"lions"</span>, <span class="string">"tigers"</span>, <span class="string">"bears"</span>)</span><br><span class="line">animals: scala.collection.immutable.Set[String] = Set(lions, tigers, bears)</span><br><span class="line"></span><br><span class="line">scala&gt; animals + <span class="string">"armadillos"</span></span><br><span class="line">res10: scala.collection.immutable.Set[String] = Set(lions, tigers, bears, armadillos)</span><br><span class="line"></span><br><span class="line">scala&gt; animals - <span class="string">"tigers"</span></span><br><span class="line">res11: scala.collection.immutable.Set[String] = Set(lions, bears)</span><br><span class="line"></span><br><span class="line">scala&gt; animals + Set(<span class="string">"raccoons"</span>)</span><br><span class="line">&lt;console&gt;:<span class="number">13</span>: error: type mismatch;</span><br><span class="line"> found   : scala.collection.immutable.Set[String]</span><br><span class="line"> required: String</span><br><span class="line">       animals + Set(<span class="string">"raccoons"</span>)</span><br><span class="line">                    ^</span><br><span class="line"></span><br><span class="line">scala&gt; animals ++ Set(<span class="string">"raccoons"</span>)</span><br><span class="line">res13: scala.collection.immutable.Set[String] = Set(lions, tigers, bears, raccoons)</span><br><span class="line"></span><br><span class="line">scala&gt; animals -- Set(<span class="string">"lions"</span>, <span class="string">"bears"</span>)</span><br><span class="line">res14: scala.collection.immutable.Set[String] = Set(tigers)</span><br><span class="line"></span><br><span class="line">scala&gt; animals &amp; Set(<span class="string">"lions"</span>, <span class="string">"bears"</span>)</span><br><span class="line">res15: scala.collection.immutable.Set[String] = Set(lions, bears)</span><br><span class="line"></span><br><span class="line">scala&gt; Set(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) == Set(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">res16: Boolean = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">scala&gt; List(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) == List(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">res17: Boolean = <span class="keyword">false</span></span><br></pre></td></tr></table></figure><p><strong>map - 映射</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">import</span> scala.collection.mutable.HashMap</span><br><span class="line"><span class="keyword">import</span> scala.collection.mutable.HashMap</span><br><span class="line"></span><br><span class="line">scala&gt; val map = <span class="keyword">new</span> HashMap[Int, String]</span><br><span class="line">map: scala.collection.mutable.HashMap[Int,String] = Map()</span><br><span class="line"></span><br><span class="line">scala&gt; map += <span class="number">4</span> -&gt; <span class="string">"four"</span></span><br><span class="line">res19: map.type = Map(<span class="number">4</span> -&gt; four)</span><br><span class="line"></span><br><span class="line">scala&gt; map += <span class="number">8</span> -&gt; <span class="string">"eight"</span></span><br><span class="line">res20: map.type = Map(<span class="number">8</span> -&gt; eight, <span class="number">4</span> -&gt; four)</span><br><span class="line"></span><br><span class="line">scala&gt; map</span><br><span class="line">res21: scala.collection.mutable.HashMap[Int,String] = Map(<span class="number">8</span> -&gt; eight, <span class="number">4</span> -&gt; four)</span><br><span class="line"></span><br><span class="line">scala&gt; map += <span class="string">"zero"</span> -&gt; <span class="number">0</span></span><br><span class="line">&lt;console&gt;:<span class="number">14</span>: error: type mismatch;</span><br><span class="line"> found   : (String, Int)</span><br><span class="line"> required: (Int, String)</span><br><span class="line">       map += <span class="string">"zero"</span> -&gt; <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Any-and-Nothing"><a href="#Any-and-Nothing" class="headerlink" title="Any and Nothing"></a><code>Any</code> and <code>Nothing</code></h3>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Memo List @Dec</title>
      <link href="/Memo-List-Dec/"/>
      <url>/Memo-List-Dec/</url>
      
        <content type="html"><![CDATA[<p>Dec. Memo</p><a id="more"></a><p>[2017-12-26 13:35:26]</p><h1 id="SICP"><a href="#SICP" class="headerlink" title="SICP"></a>SICP</h1><h3 id="1-1-1-Expression"><a href="#1-1-1-Expression" class="headerlink" title="1.1.1 Expression"></a>1.1.1 Expression</h3><p><em>numbers</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 486</span><br><span class="line">486</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; (+ 137 349)</span><br><span class="line">486</span><br><span class="line">&gt; (- 1000 334)</span><br><span class="line">666</span><br><span class="line">&gt; (* 5 99)</span><br><span class="line">495</span><br><span class="line">&gt; (/ 10 5)</span><br><span class="line">2</span><br><span class="line">&gt; (+ 2.7 10)</span><br><span class="line">12.7</span><br></pre></td></tr></table></figure><p>Note:</p><ul><li><code>combinations: (operands arguments)</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; (+ 21 35 12 7)</span><br><span class="line">75</span><br><span class="line">&gt; (* 25 4 12)</span><br><span class="line">1200</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; (+ (* 3 5) (- 10 6))</span><br><span class="line">19</span><br><span class="line">&gt; (+ (* 3 (+ (* 2 4) (+ 3 5))) (+ (- 10 7) 6))</span><br><span class="line">57</span><br><span class="line">&gt; (+ (* 3</span><br><span class="line">        (+ (* 2 4)</span><br><span class="line">           (+ 3 5)))</span><br><span class="line">     (+ (- 10 7)</span><br><span class="line">        6))</span><br><span class="line">57</span><br></pre></td></tr></table></figure><h3 id="1-1-2-Naming-and-the-Environment"><a href="#1-1-2-Naming-and-the-Environment" class="headerlink" title="1.1.2 Naming and the Environment"></a>1.1.2 Naming and the Environment</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(define pi 3.14159)</span><br><span class="line">(define radius 10)</span><br><span class="line">(* pi (* radius radius))</span><br></pre></td></tr></table></figure><p>[2017-12-23 11:43:56]</p><h1 id="重装系统计划"><a href="#重装系统计划" class="headerlink" title="重装系统计划"></a>重装系统计划</h1><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Win 10<ul><li><code>C:</code> SSD &gt; 100G</li></ul></li></ul><h2 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h2><h3 id="环境-env"><a href="#环境-env" class="headerlink" title="环境 - env"></a>环境 - env</h3><ol><li>NodeJS —— for Hexo<br>2.</li></ol><ul><li>JDK+JRE</li><li>Python</li><li>Ruby</li><li><p>HaskellPaltform</p></li><li><p>WSL</p></li></ul><h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><ul><li><p>Basic util</p><ul><li>7-zip</li><li>WinRAR</li><li>SogouInput</li><li>Bingdesktop</li></ul></li><li><p>Chrome</p></li><li><p>Editor</p><ul><li>Notepad ++</li><li>VSCode</li><li>Atom</li><li>Typora</li></ul></li><li><p>Other Tools</p><ul><li>Mubu</li><li>Lingoes</li><li>WinHTTrack</li><li>Wireshark</li><li>Anki</li></ul></li></ul><h3 id="Work"><a href="#Work" class="headerlink" title="Work"></a>Work</h3><ul><li><p>Office</p><ul><li>Word</li><li>Excel</li><li>PowerPoint</li></ul></li><li><p>AspenTech</p><ul><li>AspenPlus</li></ul></li><li><p>Autodesk</p><ul><li>AutoCAD</li><li>AutoCADPlant3D (P&amp;ID)</li></ul></li><li><p>Adobe</p><ul><li>Acrobat</li><li>Photoshop</li></ul></li><li><p>Tex/LaTeX</p><ul><li>TeX Live 2017</li><li>Pandoc</li><li>TeXStiduo</li></ul></li><li><p>Ax</p><ul><li>AxMath</li><li>AxGlyph</li></ul></li><li><p>FOR PAPER</p><ul><li>CAJViewer(Cloud)</li><li>OriginLab</li><li>? MathType</li><li>? Zotero</li></ul></li><li><p>Math</p><ul><li>Matlab</li><li>Mathematica</li><li>Sage</li></ul></li><li><p>Coding</p><ul><li>GitHub4Win</li><li>VS 2017</li></ul></li><li><p>VM Ware</p></li><li><p>VitrulBox</p></li><li><p>Xftp</p></li><li>Xshell</li></ul><h3 id="Social"><a href="#Social" class="headerlink" title="Social"></a>Social</h3><ul><li>WeChat</li><li>Tim</li></ul><h3 id="fun"><a href="#fun" class="headerlink" title="fun"></a>fun</h3><ul><li><p>网易云音乐</p></li><li><p><a href="https://reverseengineering.stackexchange.com/questions/4762/how-to-match-disassembled-instructions-back-to-c-c-source" target="_blank" rel="noopener">decompilation - How to match disassembled instructions back to C/C++ source? - Reverse Engineering Stack Exchange</a></p></li><li><a href="https://arxiv.org/abs/1711.00830" target="_blank" rel="noopener">[1711.00830] BinPro: A Tool for Binary Source Code Provenance</a></li><li><a href="https://link.springer.com/chapter/10.1007/978-3-642-37119-6_14" target="_blank" rel="noopener">RESource: A Framework for Online Matching of Assembly with Open Source Code | SpringerLink</a></li><li><a href="https://www.forensicmag.com/article/2013/02/detecting-source-code-re-use-through-binary-analysis-hybrid-approach" target="_blank" rel="noopener">Detecting Source Code Re-Use through a Binary Analysis Hybrid Approach</a></li></ul><p>[2017-12-20 19:30:04]</p><ul><li><a href="https://www.zhihu.com/question/50735753/answer/278510105" target="_blank" rel="noopener">阿里巴巴公司根据截图查到泄露信息的具体员工的技术是什么？ - 知乎</a></li></ul><p>[2017-12-17 11:18:27]</p><ul><li><a href="http://tieba.baidu.com/p/2415224308" target="_blank" rel="noopener">运行兼容 Linux Standard Base (LSB)程序的通用解决办法【linux吧】_百度贴吧</a></li><li><a href="https://www.ibm.com/developerworks/cn/linux/l-lsb-intr/index.html" target="_blank" rel="noopener">LSB 简介</a></li></ul><ul><li><a href="http://blog.csdn.net/lpwstr/article/details/78409727" target="_blank" rel="noopener">IDA Pro 7.0皮肤插件的安装与深色主题（包含背景色、前景色、指令颜色）的设置 - CSDN博客</a><blockquote><p>如果主窗口是白色的参见</p><ul><li><a href="https://github.com/zyantific/IDASkins/issues/1" target="_blank" rel="noopener">disassembly subview does not change. · Issue #1 · zyantific/IDASkins</a><br>主要原因是没导入相应的插件</li></ul></blockquote></li></ul><p>[2017-12-09 21:50:47]</p><ul><li><a href="http://www.iw168.cn/cad/12PID-yangshidedingzhi-AutoCAD-Plant-3D-2011-jianming-tech/" target="_blank" rel="noopener">12.PID样式的定制－AutoCAD Plant 3D 2011简明教程</a></li><li><a href="https://wenku.baidu.com/view/7c9167f8bceb19e8b8f6bac3.html" target="_blank" rel="noopener">AutoCAD P&amp;ID工作平台的搭建_百度文库</a></li><li><a href="http://help.autodesk.com/view/PLNT3D/2018/CHS/?guid=GUID-99ABE9A4-E8D5-49E9-8ADB-DE14FFEA17EE" target="_blank" rel="noopener">AutoCAD Plant 3D 帮助: 创建具有附着点的元件的步骤</a></li></ul><p>[2017-12-02 23:14:01]<br><a href="https://www.zhihu.com/question/263481640/answer/269642660" target="_blank" rel="noopener">https://www.zhihu.com/question/263481640/answer/269642660</a></p><ul><li><a href="https://drakon-editor.com/docs/drakon" target="_blank" rel="noopener">DRAKON Editor Web – DRAKON visual language</a></li><li><a href="http://forum.drakon.su/viewtopic.php?t=1252" target="_blank" rel="noopener">DRAKON.SU • Просмотр темы - ДРАКОН: страницы истории</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @Nov</title>
      <link href="/Memo-List-Nov/"/>
      <url>/Memo-List-Nov/</url>
      
        <content type="html"><![CDATA[<p>Nov. Memo</p><a id="more"></a><p>[2017-11-25 11:03:12]</p><ul><li><a href="https://jroweboy.github.io/c/asm/2015/01/26/when-is-main-not-a-function.html" target="_blank" rel="noopener">Main is usually a function. So then when is it not?</a></li></ul><ul><li><a href="http://bbs.mahoupao.net/thread-173016-1-1.html" target="_blank" rel="noopener">【新提醒】全国大学生化工设计竞赛软件情况汇总〖全国大学生化工设计竞赛〗马后炮化工-让天下没有难学的化工技术 - Powered by Mahoupao Technology</a></li></ul><p>工艺流程稳态模拟    Aspen Plus、PRO II、HYSYS<br>工艺流程动态模拟    Aspen Dynamics<br>换热网络设计    Aspen Energy Analyzer<br>变压吸附模拟    Aspen Adsorption<br>经济分析    Aspen Process Economic Analyzer<br>数学模型模拟与分析    Matlab<br>流场模拟分析    CFD、ANSYS<br>反应器设计    COMSOL Multiphysics、Ploymath<br>塔器设计    CUP-Tower、KG-Tower、Sulpak、Sulcol<br>换热器设计    Aspen Exchanger Design and Rating、HTRI<br>设备强度校核    SW6<br>危险物质泄露扩散模拟    ALOHA<br>环境风险评估    Risk System<br>噪声评估    EIAN、CadnaA、Noise System<br>危险与可操作性分析    HAZOPkit<br>水集成    Water Design<br>水质评价    EIAW<br>废水处理    Aspen Epselon<br>大气污染估算    Screen3Mod<br>事故树分析    Fault Tree、FreeFta<br>厂区三维布置    Sketch Up（草图大师）、3ds Max、Twinmotion、Rhino<br>车间布置与配管设计    PDMS、Pdmax、Pdsoft、CADWorx、SmartPlant3D、AutoCADPlant3D、Solidworks<br>渲染与漫游    Lumion、Navisworks、Vray For 3dsmax<br>漫游视频处理    Adobe After Effects<br>工程图纸绘制    AutoCAD<br>文档编辑    Microsoft Word<br>数据处理    Microsoft Excel、Origin<br>项目展示    Microsoft PowerPoint<br>选泵软件    智能选泵<br>压缩机选型软件    比泽尔压缩机选型软件</p><ul><li><a href="https://www.zhihu.com/question/20705260/answer/260736836" target="_blank" rel="noopener">圣经上很多预言都实现了，是真的么？ - 知乎</a></li></ul><p>[蛤乎]</p><p>你借着我，日子必增多，年岁也必加添。 (箴言 9:11 和合本)</p><p>人有恶眼想要急速发财，却不知穷乏必临到他身。 (箴言 28:22 和合本)</p><p>年老的有智慧；寿高的有知识。 (约伯记 12:12 和合本)</p><p>在耶和华眼中这还算为小事，他也必将摩押人交在你们手中。 (列王纪下 3:18 和合本)</p><p>耶和华必如狮子吼叫，子民必跟随他。他一吼叫，他们就从西方急速而来。 (何西阿书 11:10 和合本)</p><p>洪水泛滥之时，耶和华坐着为王；耶和华坐着为王，直到永远。 (诗篇 29:10 和合本)</p><p>他发命在地；他的话颁行最快。 (诗篇 147:15 和合本)</p><p>这从以东的波斯拉来，穿红衣服，装扮华美，能力广大，大步行走的是谁呢？就是我，是凭公义说话，以大能施行拯救。 (以赛亚书 63:1 和合本)</p><p>他们必来把他的公义传给将要生的 民，言明这事是他所行的！ (诗篇 22:31 和合本)</p><p>你要加添王的寿数；<br>他的年岁必存到世世。<br>(诗篇 61:6 和合本)</p><p>耶和华要从远方、地极带一国的民，如鹰飞来攻击你。这 民的言语，你唔识得。 (申命记 28:49 和合本)</p><p>你们哪一个能用思虑使寿数多加一刻呢？ (路加福音 12:25 和合本)</p><p>他斥责海，使海干了，使一切江河干涸。巴珊和迦密的树林衰残；黎巴嫩的花草也衰残了。(那鸿书 1:4 和合本)</p><p>我今日呼天唤地向你作见证；我将生死祸福陈明在你面前，所以你要拣选生命，使你和你的后裔都得存活； (申命记 30:19 和合本)</p><p>在白发的人面前，你要站起来；也要尊敬老人，又要敬畏你的　神。我是耶和华。(利未记 19:32 和合本)</p><p>他要按公义审判世界，按正直判断万民。(诗篇 9:8 和合本)</p><p>耶和华说：“腰带怎样紧贴人腰，照样，我也使以色列全家和犹大全家紧贴我，好叫他们属我为子民，使我得名声，得颂赞，得荣耀；他们却不肯听。”(耶利米书 13:11 和合本)</p><p>你若不肯容他们去，我必使青蛙糟蹋你的四境。 (出埃及记 8:2 和合本)</p><p>因为耶和华如此说：你们虽不见风，不见雨，这谷必满了水，使你们和牲畜有水喝。’ (列王纪下 3:17 和合本)</p><p>你当追想上古之日，思念历代之年；问你的父亲，他必指示你；问你的长者，他必告诉你。(申命记 32:7 和合本)</p><p>你的民若得罪你，你向他们发怒。 (列王纪上 8:46 和合本)</p><p>神啊，我心坚定，我心坚定；我要唱诗，我要歌颂！(诗篇 57:7 和合本)</p><p>[2017-11-15 14:06:37]</p><ul><li><a href="https://www.zhihu.com/question/20613891/answer/253608487" target="_blank" rel="noopener">如何委婉地拒绝男生的表白？ - 知乎</a></li><li><a href="https://www.zhihu.com/question/53494184" target="_blank" rel="noopener">相比于耳熟能详的微积分发展史，为什么我们较少听说过线性代数的发展史？线性代数是如何发展的？ - 知乎</a></li></ul><h1 id="Level-1"><a href="#Level-1" class="headerlink" title="Level - 1"></a>Level - 1</h1><h2 id="easy-sign-in"><a href="#easy-sign-in" class="headerlink" title="easy_sign_in"></a>easy_sign_in</h2><p>报HTTPS的错误<br>看一眼证书<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OU = flag in:</span><br><span class="line">O = 123.206.81.217</span><br></pre></td></tr></table></figure></p><p>访问得到flag</p><blockquote><p>hctf{s00000_e4sy_sign_in}</p></blockquote><hr><h1 id="Level-2"><a href="#Level-2" class="headerlink" title="Level - 2"></a>Level - 2</h1><h2 id="babycrack"><a href="#babycrack" class="headerlink" title="babycrack"></a>babycrack</h2><p>just babycrack<br>1.flag.substr(-5,3)==”333”  =&gt; <code>&quot;hctf{!@#$%^&amp;*(){}:&gt;?333+}&quot;</code><br>2.flag.substr(-8,1)==”3”    =&gt; <code>&quot;hctf{!@#$%^&amp;*(){}3&gt;?333+}&quot;</code><br>3.Every word makes sence.<br>4.sha256(flag)==”d3f154b641251e319855a73b010309a168a12927f3873c97d2e5163ea5cbb443”</p><p>URL <a href="http://babycrack.2017.hctf.io" target="_blank" rel="noopener">http://babycrack.2017.hctf.io</a></p><p>[2017-11-10 23:33:02]</p><hr><p>Bandit0<br>pwd: boJ9jbbUNNfktd78OOpsqOltutMc3MY1</p><p>[2017-11-04 14:21:26]</p><p>Hacking: Art of Exploitation</p><ul><li><a href="https://zhuanlan.zhihu.com/p/30548907" target="_blank" rel="noopener">Z3一把梭：用约束求解搞定一类CTF题</a></li><li><a href="https://zhuanlan.zhihu.com/p/25816426" target="_blank" rel="noopener">手把手教你栈溢出从入门到放弃（上）</a></li><li><a href="http://pwnable.kr/play.php" target="_blank" rel="noopener">pwnable.kr/play.php</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @Oct</title>
      <link href="/Memo-List-Oct/"/>
      <url>/Memo-List-Oct/</url>
      
        <content type="html"><![CDATA[<p>Oct. Memo </p><a id="more"></a><p>[2017-10-25 16:56:05]</p><ul><li><a href="https://zhuanlan.zhihu.com/p/30319968" target="_blank" rel="noopener">【从零开始学习CTF】1、什么是CTF</a></li></ul><p>[2017-10-22 19:08:04]</p><ul><li><a href="https://zhuanlan.zhihu.com/p/30219197" target="_blank" rel="noopener">剧毒之岛：前苏联制造的真实版生化危机 - 知乎专栏</a></li></ul><p>[2017-10-21 11:23:46]</p><ul><li><a href="http://www.diantansuo.com/what-is-different-dns-record-types" target="_blank" rel="noopener">DNS A CNAME MX PTR 等记录有什么区别</a></li></ul><ul><li><a href="https://zhuanlan.zhihu.com/p/29835678" target="_blank" rel="noopener">一个滑块游戏的计算复杂性分析初步 - 知乎专栏</a></li><li><a href="http://courses.csail.mit.edu/6.890/fall14/" target="_blank" rel="noopener">6.890 Algorithmic Lower Bounds: Fun with Hardness Proofs (Fall ‘14)</a></li></ul><p>[2017-10-05 20:39:03]</p><blockquote><p>三传一反、化工应用数学</p></blockquote><h1 id="连续性方程的柱坐标表出"><a href="#连续性方程的柱坐标表出" class="headerlink" title="连续性方程的柱坐标表出"></a>连续性方程的柱坐标表出</h1><ul><li><a href="http://pleasemakeanote.blogspot.hk/2009/02/8-derivation-of-continuity-equation-in.html" target="_blank" rel="noopener">Please Make A Note: 8. Derivation of the Continuity Equation in Cylindrical Coordinates</a></li></ul><p>[2017-10-03 11:44:59]</p><h1 id="Aspen-Plus中文件格式的比较"><a href="#Aspen-Plus中文件格式的比较" class="headerlink" title="Aspen Plus中文件格式的比较"></a>Aspen Plus中文件格式的比较</h1><table><thead><tr><th style="text-align:left">文件类型</th><th style="text-align:left">扩展名</th><th style="text-align:left">格式</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">文档文件</td><td style="text-align:left">*.apw</td><td style="text-align:left">Binary</td><td style="text-align:left">包含模拟输入、结果以及中间收敛信息</td></tr><tr><td style="text-align:left">综合文件</td><td style="text-align:left">*.apwz</td><td style="text-align:left">Binary</td><td style="text-align:left">包含模拟所需的所有文件</td></tr><tr><td style="text-align:left">备份文件</td><td style="text-align:left">*.bkp</td><td style="text-align:left">ASCII</td><td style="text-align:left">含有模拟输入以及结果信息</td></tr><tr><td style="text-align:left">模板文件</td><td style="text-align:left">*.apt</td><td style="text-align:left">ASCII</td><td style="text-align:left">含有缺省输入值的模板</td></tr><tr><td style="text-align:left">输入文件</td><td style="text-align:left">*.inp</td><td style="text-align:left">Text</td><td style="text-align:left">模拟的输入信息</td></tr><tr><td style="text-align:left">运行信息文件</td><td style="text-align:left">*.cpm</td><td style="text-align:left">Text</td><td style="text-align:left">显示在控制面板上的计算历史记录</td></tr><tr><td style="text-align:left">历史文件</td><td style="text-align:left">*.his</td><td style="text-align:left">Text</td><td style="text-align:left">详细的计算历史记录以及诊断信息</td></tr><tr><td style="text-align:left">汇总文件</td><td style="text-align:left">*.sum</td><td style="text-align:left">ASCII</td><td style="text-align:left">模拟的结果信息</td></tr><tr><td style="text-align:left">问题定义文件</td><td style="text-align:left">*.appdf</td><td style="text-align:left">Binary</td><td style="text-align:left">含有模拟计算中所有数组以及中间收敛信息</td></tr><tr><td style="text-align:left">报告文件</td><td style="text-align:left">*.rep</td><td style="text-align:left">Text</td><td style="text-align:left">模拟的输出报告</td></tr><tr><td style="text-align:left">模型库</td><td style="text-align:left">*.apm</td><td style="text-align:left">Binary</td><td style="text-align:left">用户创建的模型库</td></tr><tr><td style="text-align:left">嵌入式备份文件</td><td style="text-align:left">*.apmbd</td><td style="text-align:left">Binary</td><td style="text-align:left">嵌入在Aspen Plus中的电子表格和图片等对象的信息</td></tr><tr><td style="text-align:left">DFMS文件</td><td style="text-align:left">*.dfm</td><td style="text-align:left">Text</td><td style="text-align:left">包含模拟中的物性参数信息，或作为为用户数据库的输入信息</td></tr><tr><td style="text-align:left">工程数据文件</td><td style="text-align:left">*.apprj</td><td style="text-align:left">Text</td><td style="text-align:left">包含模拟中的物性参数信息，以物性数据输入形式存在</td></tr><tr><td style="text-align:left">变量文件</td><td style="text-align:left">*.var</td><td style="text-align:left">ASCII</td><td style="text-align:left">面向方程变量的值，可通过初始化按钮或指令语言加载</td></tr><tr><td style="text-align:left">矢量文件</td><td style="text-align:left">*.x</td><td style="text-align:left">Binary</td><td style="text-align:left">面向方程变量的值，可通过初始化按钮或指令语言加载</td></tr></tbody></table><p>[2017-10-02 14:59:15]</p><ul><li><a href="https://www.zhihu.com/question/22052277/answer/21597506" target="_blank" rel="noopener">全国化工设计大赛应该注意什么？有没有参加过的说一下自己的经验。 - 知乎</a></li></ul><h1 id="行业标准"><a href="#行业标准" class="headerlink" title="行业标准"></a>行业标准</h1><p>GB 50160-2008 石油化工企业设计防火规范<br><em>SH 3008-2000 石油化工厂区绿化设计规范</em> 更新<br>SH/T 3008-2017 石油化工厂区绿化设计规范<br><em>SH/T 3013-2000 石油化工厂区竖向布置设计规范</em> 废止<br><em>SH/T 3023-2005 石油化工厂内道路设计规范</em> 更新<br>SH/T 3023-2017 石油化工厂内道路设计规范<br>5)石油化工企业环境保护设计规范 SHJ3024-1995<br>6)石油化工企业总体布置设计规范SH/T3032-2002<br>7)石油化工企业厂区总平面布置设计规范SH/T 3053-2002<br>8)石油化工厂区管线综合设计规范 SH/T3054-2005<br>9)石油化工企业汽车运输设施设计规范SH/T3033-1991<br>10)石油化工企业卫生防护距离 SH3093-1999<br>11)石油化工企业职业安全卫生设计规范SH3047-1993<br>12)总图制图标准 GB/T50103-2001<br>13)石油化工总图运输设计图例 SH3084-1997<br>14)石油化工排雨水明沟设计规范SH3094-1999<br>15)工业企业总平面设计规范GB50187-93<br>16)建筑设计防火规范 GB50016-2006<br>17)公路水泥混凝土路面设计规范 JTGD40-2002<br>18)化工企业总图运输设计规范HGT20649-1998<br>19)化工配管用无缝及焊接钢管尺寸选用系列HGT20553-2011<br>20)管道及仪表流程图中设备、机器图例HG20519.31-92</p><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @Sep</title>
      <link href="/Memo-List-Sep/"/>
      <url>/Memo-List-Sep/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Memo List @Aug</title>
      <link href="/Memo-List-Aug/"/>
      <url>/Memo-List-Aug/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>[2017-08-28 12:17:54]</p><ul><li><a href="https://zhuanlan.zhihu.com/p/28683644" target="_blank" rel="noopener">美国文化大革命样板戏之四 《沙里亚浜》 - 知乎专栏</a></li></ul><ul><li><a href="https://www.zhihu.com/question/20241087/answer/130160119" target="_blank" rel="noopener">中国真的能在未来抗衡美国么？ - 知乎</a></li></ul><p>超零界</p><p>【存疑？】</p><blockquote><p>脉冲星就是高速自转的中子星，具有极其稳定的周期性，其稳定度比目前最稳定的氢原子钟还要高1万倍以上，被誉为自然界中最稳定的天文时钟，使之成为人类在宇宙中航行的灯塔。</p></blockquote><h1 id="QQ协议分析"><a href="#QQ协议分析" class="headerlink" title="QQ协议分析"></a>QQ协议分析</h1><p>[Achieved]</p><ul><li><a href="https://github.com/ScienJus/qqbot" target="_blank" rel="noopener">ScienJus/qqbot: 基于SmartQQ（WebQQ）的QQ机器人 / a qq robot based on smartqq(webqq) api</a></li><li><a href="https://github.com/ScienJus/smartqq" target="_blank" rel="noopener">ScienJus/smartqq: SmartQQ（WebQQ）的Api ，你可以用它实现自己的QQ 机器人 a qq robot based on smartqq (webqq) api</a></li></ul><ul><li><a href="http://www.scienjus.com/webqq-analysis-1/" target="_blank" rel="noopener">Web QQ协议分析（一）：前言 | ScienJus’s Blog</a></li><li><a href="http://www.scienjus.com/webqq-analysis-2/" target="_blank" rel="noopener">Web QQ协议分析（二）：登录 | ScienJus’s Blog</a></li><li><a href="http://www.scienjus.com/webqq-analysis-3/" target="_blank" rel="noopener">Web QQ协议分析（三）：收发消息 | ScienJus’s Blog</a></li><li><a href="http://www.scienjus.com/webqq-analysis-4/" target="_blank" rel="noopener">Web QQ协议分析（四）：好友相关 | ScienJus’s Blog</a></li><li><a href="http://www.scienjus.com/webqq-analysis-5/" target="_blank" rel="noopener">Web QQ协议分析（五）：群和讨论组相关 | ScienJus’s Blog</a></li><li><a href="http://www.scienjus.com/webqq-analysis-6/" target="_blank" rel="noopener">Web QQ协议分析（六）：其他 | ScienJus’s Blog</a></li></ul><p>[2017-08-23 18:11:43]</p><h1 id="如何正确的看待国际形势"><a href="#如何正确的看待国际形势" class="headerlink" title="如何正确的看待国际形势"></a>如何正确的看待国际形势</h1><ul><li><a href="https://www.bilibili.com/video/av5601953/" target="_blank" rel="noopener">【局座时评24】8.1 八一特别节目|中国军队：过去的你很不容易，今后等你到世界最强_星海_科技<em>bilibili</em>哔哩哔哩</a></li></ul><p>[2017-08-21 00:37:36]</p><p>monad</p><ul><li><a href="http://dev.stephendiehl.com/hask/#monads" target="_blank" rel="noopener">What I Wish I Knew When Learning Haskell 2.3 ( Stephen Diehl )</a></li></ul><ul><li><a href="http://mp.weixin.qq.com/s/4iDA68HS4RbTNjK6s8rdMA" target="_blank" rel="noopener">你会创造还是破坏？记一场成了社会学实验的大型在线游戏</a></li></ul><p>[2017-08-20 12:21:17]</p><ul><li><a href="https://www.zhihu.com/question/22976221" target="_blank" rel="noopener">化学工程专业毕业后直接工作赚钱，还是攻读研究生后再工作赚钱？ - 知乎</a></li></ul><h1 id="杂文-历史"><a href="#杂文-历史" class="headerlink" title="杂文 历史"></a>杂文 历史</h1><ul><li><a href="https://www.zhihu.com/question/35266109/answer/194982719" target="_blank" rel="noopener">有哪些影响力被严重低估的历史事件？ - 知乎</a></li></ul><h1 id="Heroes-in-my-heart"><a href="#Heroes-in-my-heart" class="headerlink" title="Heroes in my heart"></a>Heroes in my heart</h1><ul><li>【HTML】<a href="http://www.brunel.ac.uk/~csstzzw/story.html" target="_blank" rel="noopener">Heros in My Heart</a></li><li><a href="https://zhuanlan.zhihu.com/scienceandscientists" target="_blank" rel="noopener">Heroes in My Heart - 知乎专栏</a></li></ul><p>[2017-08-17 13:53:06]</p><h1 id="radare2"><a href="#radare2" class="headerlink" title="radare2"></a>radare2</h1><ul><li><a href="https://github.com/radare/radare2" target="_blank" rel="noopener">radare/radare2: unix-like reverse engineering framework and commandline tools</a></li></ul><h2 id="Qus"><a href="#Qus" class="headerlink" title="Qus"></a>Qus</h2><ul><li><a href="https://monosource.gitbooks.io/radare2-explorations/content/tut2/tut2_-_mem_manip.html" target="_blank" rel="noopener">Memory Manipulation · Radare2 Explorations</a></li></ul><h2 id="tutorial"><a href="#tutorial" class="headerlink" title="tutorial"></a>tutorial</h2><ul><li><a href="https://radare.gitbooks.io/radare2book/content/introduction/intro.html" target="_blank" rel="noopener">Introduction · Radare2 Book</a></li><li><a href="https://samsymons.com/blog/reverse-engineering-with-radare2-part-1/" target="_blank" rel="noopener">Reverse Engineering With Radare2, Part 1 | Sam Symons</a></li><li><a href="https://blog.techorganic.com/2016/03/08/radare-2-in-0x1e-minutes/" target="_blank" rel="noopener">Radare 2 in 0x1E minutes – Techorganic – Musings from the brainpan</a></li><li><p><a href="https://www.megabeets.net/a-journey-into-radare-2-part-1/" target="_blank" rel="noopener">A journey into Radare 2 – Part 1: Simple crackme – Megabeets</a></p></li><li><p><a href="http://sushant94.me/2015/05/31/Introduction_to_radare2/" target="_blank" rel="noopener">An Introduction to radare2 – sushant94</a></p></li></ul><h1 id="Functional-square-root"><a href="#Functional-square-root" class="headerlink" title="Functional square root"></a>Functional square root</h1><ul><li><p><a href="https://www.zhihu.com/question/63745657" target="_blank" rel="noopener">(1 条消息)已知f(f(x))，在怎样的条件下，可求f(x)？ - 知乎</a></p></li><li><p><a href="https://en.wikipedia.org/wiki/Functional_square_root" target="_blank" rel="noopener">Functional square root - Wikipedia</a></p></li><li><a href="https://en.wikipedia.org/wiki/Iterated_function" target="_blank" rel="noopener">Iterated function - Wikipedia</a></li></ul><ul><li><a href="https://www.zhihu.com/question/40489312/answer/215702643" target="_blank" rel="noopener">磁悬浮盆栽一定要电力驱动吗，为什么做不到一块磁石稳定悬浮在另一块或一组磁石上空？ - 知乎</a></li></ul><h1 id="FCC"><a href="#FCC" class="headerlink" title="FCC"></a>FCC</h1><p><strong>Override Styles in Subsequent CSS</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  .pink-text &#123;</span></span><br><span class="line"><span class="undefined">    color: pink;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">  .blue-text &#123;</span></span><br><span class="line"><span class="undefined">    color: blue;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"pink-text blue-text"</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过用空格分隔多个 <code>class</code> 属性，可对 <code>HTML</code> 元素应用多个 <code>class</code> 属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class=&quot;class1 class2&quot;</span><br></pre></td></tr></table></figure><p>注意：在 <code>HTML</code> 中这些 <code>class</code> 如何排序是无所谓的。</p><p>然而，在 <code>&lt;style&gt;</code> 部分中 <code>class</code> 声明的顺序却非常重要，第二个声明总是比第一个具有优先权。因为 <code>.blue-text</code> 是第二个声明，它覆盖了 <code>.pink-text</code> 属性。</p><p><strong>Override Class Declarations by Styling ID Attributes</strong></p><p>我们刚刚证明了浏览器读取 CSS 的顺序是从上到下，这意味着，在发生冲突时，浏览器会使用最后的 CSS 声明。</p><p>但是并非只有这些，还有其他覆盖 CSS 的方法。你还记得 id 属性吗？</p><p>让我们来覆盖你的 pink-text 和 blue-text 两个 class，通过为 h1 元素添加 id 并设置 id 的样式，使你的 h1 元素变成 orange（橙色）。</p><p>给你的 h1 元素添加名为 orange-text 的 id 属性。记住，id 样式看起来是这样的：</p><h1 id="orange-text"><p>在你的 h1 元素中保留 blue-text 和 pink-text 两个 class。</p><p>在你的 style 元素中为你的 orange-text id 创建一个 CSS 声明，就像下面例子中的样子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#brown-text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: brown;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：你声明的这个 CSS 在 pink-text类选择器的上面还是下面是无所谓的，因为 id 属性总是具有更高的优先级。</p><ul><li><a href="https://zhuanlan.zhihu.com/p/28569786" target="_blank" rel="noopener">教你如何使用分组密码对shellcode中的windows api字符串进行加密 - 知乎专栏</a></li></ul><h1 id="生化-代谢途径"><a href="#生化-代谢途径" class="headerlink" title="生化-代谢途径"></a>生化-代谢途径</h1><ul><li><a href="http://biochemical-pathways.com/#/map/1" target="_blank" rel="noopener">biochemical-pathways.com/#/map/1</a></li><li><a href="https://upload.wikimedia.org/wikipedia/commons/a/a8/Human_Metabolism_-_Pathways.jpg" target="_blank" rel="noopener">Human_Metabolism_-_Pathways.jpg (2054×1792)</a></li><li><a href="http://www.sigmaaldrich.com/content/dam/sigma-aldrich/docs/Sigma/General_Information/metabolic_pathways_poster.pdf" target="_blank" rel="noopener">Metabolic Pathways Poster</a></li></ul><hr><p>[2017-08-14 22:27:57]</p><p><strong>板绘</strong></p><p>自从有了板子之后就更想画画了</p><p>于是收集一些教程</p><ul><li><p><a href="https://www.quora.com/How-do-I-start-out-drawing-digital-art-with-no-drawing-expierence" target="_blank" rel="noopener">How to start out drawing digital art with no drawing expierence - Quora</a></p></li><li><p><a href="https://www.ctrlpaint.com/dp101-1/" target="_blank" rel="noopener">Digital Painting 101 (1 of 5) intro — Ctrl+Paint - Digital Painting Simplified</a></p></li><li><a href="http://www.thedrawingwebsite.com/beginners-drawing/#" target="_blank" rel="noopener">Are You a Drawing Beginner? Start Here. | The Drawing Website</a></li><li><a href="https://design.tutsplus.com/tutorials/digital-drawing-for-beginners-before-you-start-drawing--cms-27284" target="_blank" rel="noopener">Digital Drawing for Beginners: Before You Start Drawing</a></li><li><a href="https://www.bilibili.com/video/av4710062/" target="_blank" rel="noopener">【二次元向】零基础绘画入门引导_绘画_生活<em>bilibili</em>哔哩哔哩</a></li></ul><p>[2017-08-08 16:58:52]</p><h2 id="Atom-Haskell-lint-err"><a href="#Atom-Haskell-lint-err" class="headerlink" title="Atom Haskell lint err"></a>Atom Haskell lint err</h2><p>在ghci中可以import的模块,写在文件里就报err</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">I:\Desktop\Programming\Haskell\Write-Yourself-a-Scheme-in-48h\Setup.hs: 2, 1</span><br><span class="line">Failed to load interface for ‘Text.Parsec’</span><br><span class="line">Use -v to see a list of the files searched for.</span><br><span class="line">I:\Desktop\Programming\Haskell\Write-Yourself-a-Scheme-in-48h\Setup.hs: 3, 1</span><br><span class="line">Failed to load interface for ‘Text.ParserCombinators.Parsec’</span><br><span class="line">Perhaps you meant</span><br><span class="line">  Text.ParserCombinators.ReadPrec (from base-4.9.1.0)</span><br><span class="line">  Text.ParserCombinators.ReadP (from base-4.9.1.0)</span><br><span class="line">Use -v to see a list of the files searched for.</span><br></pre></td></tr></table></figure><p>找了半天</p><p>ref：</p><ul><li><a href="https://github.com/simonmichael/haskell-atom-setup#more-on-atoms-haskell-support" target="_blank" rel="noopener">simonmichael/haskell-atom-setup: How to set up and use the Atom IDE for Haskell development</a></li></ul><h2 id="Check-1"><a href="#Check-1" class="headerlink" title="Check 1"></a>Check 1</h2><ul><li><a href="https://github.com/DanielG/ghc-mod/wiki#most-common-stack-related-issue" target="_blank" rel="noopener">Home · DanielG/ghc-mod Wiki</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PS I:\Desktop\Programming\Haskell\WYaSi48&gt; ghc-mod --version</span><br><span class="line">ghc-mod version 5.7.0.0 compiled by GHC 8.0.2</span><br><span class="line"></span><br><span class="line">PS I:\Desktop\Programming\Haskell\WYaSi48&gt; stack ghc -- --version</span><br><span class="line">The Glorious Glasgow Haskell Compilation System, version 8.0.2</span><br></pre></td></tr></table></figure><p>pass</p><p>Open atom use: <code>stack exec -- atom ./</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">I:\Desktop\Programming\Haskell\WYaSi48\hello.hs: 5, 1</span><br><span class="line">Failed to load interface for ‘Text.ParserCombinators.Parsec’</span><br><span class="line">Perhaps you meant</span><br><span class="line">  Text.ParserCombinators.ReadPrec (from base-4.9.1.0)</span><br><span class="line">  Text.ParserCombinators.ReadP (from base-4.9.1.0)</span><br><span class="line">Use -v to see a list of the files searched for.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PS I:\Desktop\Programming\Haskell\WYaSi48&gt; ghc-mod debug</span><br><span class="line">Version:              ghc-mod-5.7.0.0</span><br><span class="line">Library GHC Version:  8.0.2</span><br><span class="line">System GHC Version:   8.0.2</span><br><span class="line">Root directory:       I:\Desktop\Programming\Haskell\WYaSi48</span><br><span class="line">Current directory:    I:\Desktop\Programming\Haskell\WYaSi48</span><br><span class="line">GHC Package flags:</span><br><span class="line">    -iI:\Desktop\Programming\Haskell\WYaSi48</span><br><span class="line">    -iI:\Desktop\Programming\Haskell\WYaSi48 -global-package-db</span><br><span class="line">    -user-package-db -Wall</span><br><span class="line">GHC System libraries: C:\Users\inkyd\AppData\Local\Programs\stack\x86_64-windows\ghc-8.0.2\lib</span><br></pre></td></tr></table></figure><p>顺手开了 <code>C:\Users\inkyd\AppData\Local\Programs\stack\x86_64-windows\ghc-8.0.2\lib</code>看了下</p><p>[2017-08-07 16:38:12]</p><h1 id="Atom-haskell-开发环境配置"><a href="#Atom-haskell-开发环境配置" class="headerlink" title="Atom haskell 开发环境配置"></a>Atom haskell 开发环境配置</h1><ul><li><a href="http://www.jianshu.com/p/605042ea7c16" target="_blank" rel="noopener">打造令人愉悦的 Haskell 开发环境 - 简书</a></li></ul><p>安装二进制插件时使用 <code>stack</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stack install ghc-mod</span><br><span class="line">stack install hasktags</span><br></pre></td></tr></table></figure><img src="/Memo-List-Aug/haskell-atom-stack.png"><p><strong>FIN</strong></p><p>新开一个 stack项目，然后在yaml中添加<code>extra-deps: [parsec-3.1.11]</code><br><code>.cabal</code>中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">build-depends:       base &gt;= 4.7 &amp;&amp; &lt; 5</span><br><span class="line">                   , parsec</span><br></pre></td></tr></table></figure></p><p>报错消失</p><p>另： 清除了atom ghc-mod的配置(不做配置，路径留空)</p><p>[2017-08-04 08:52:56]</p><ul><li><a href="http://www.tinylab.org/learn-x86-language-courses-on-the-ubuntu-qemu-cs630/" target="_blank" rel="noopener">泰晓科技 - Linux 下通过 Qemu 学习 X86 AT T 汇编语言</a></li><li><a href="http://www.tinylab.org/take-5-minutes-to-build-linux-0-11-experiment-envrionment/" target="_blank" rel="noopener">泰晓科技 - 五分钟内搭建 Linux 0.11 的实验环境</a></li></ul><h2 id="KVM"><a href="#KVM" class="headerlink" title="KVM"></a>KVM</h2><ul><li><a href="http://people.cs.nctu.edu.tw/~chenwj/dokuwiki/doku.php?id=kvm" target="_blank" rel="noopener">kvm - 韋任的維基百科</a></li><li><a href="http://smilejay.com/kvm_theory_practice/" target="_blank" rel="noopener">KVM虚拟化原理与实践（连载） – 笑遍世界</a></li></ul><h2 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h2><ul><li><a href="https://www.zhihu.com/question/37288009/answer/172132665" target="_blank" rel="noopener">Kotlin 作为 Android 开发语言相比传统 Java 有什么优势？ - 知乎</a></li></ul><h2 id="BIOS-终端向量表"><a href="#BIOS-终端向量表" class="headerlink" title="BIOS 终端向量表"></a>BIOS 终端向量表</h2><ul><li><a href="http://staff.ustc.edu.cn/~hufy/ComputerSystem/%B8%BD%C2%BC/BIOS_DOS%D6%D0%B6%CF%B9%A6%C4%DC%B5%F7%D3%C3%B4%F3%C8%AB.pdf" target="_blank" rel="noopener">BIOS 和DOS 中断大全</a></li><li><a href="ftp://ftp.embeddedarm.com/old/saved-downloads-manuals/EBIOS-UM.PDF" target="_blank" rel="noopener">Embedded BIOS User’s Manual</a></li><li><a href="http://www.mouseos.com/arch/interrupt.html" target="_blank" rel="noopener">深入理解 x86/x64 的中断体系</a></li><li><a href="http://www.ctyme.com/rbrown.htm" target="_blank" rel="noopener">Ralf Brown’s Interrupt List - HTML Version</a></li><li><a href="http://www.cypress.com/file/43311/download" target="_blank" rel="noopener">BIOS_UserManual.book</a></li><li><a href="http://www.ousob.com/ng/asm/index.php" target="_blank" rel="noopener">ClipX - Assembly Language - Norton Guide</a></li><li><a href="http://stanislavs.org/helppc/int_table.html" target="_blank" rel="noopener">int table</a></li></ul><ul><li><a href="http://philipstorr.id.au/pcbook/index.htm" target="_blank" rel="noopener">Phil Storrs PC Hardware book–Opening menu page</a></li></ul><p>[2017-08-02 20:58:02]</p><h1 id="Arch-x64-的安装"><a href="#Arch-x64-的安装" class="headerlink" title="Arch x64 的安装"></a>Arch x64 的安装</h1><p>某up打包的Arch有点问题，遂重装一遍</p><p>ref：</p><ul><li><a href="http://www.viseator.com/2017/05/17/arch_install/" target="_blank" rel="noopener">以官方Wiki的方式安装ArchLinux | viseator’s blog</a><br>虚拟机中按照教程来，非常流畅，没有任何问题</li><li><a href="http://www.viseator.com/2017/05/19/arch_setup/" target="_blank" rel="noopener">ArchLinux安装后的必须配置与图形界面安装教程 | viseator’s blog</a></li><li><a href="http://www.viseator.com/2017/07/02/arch_more/" target="_blank" rel="noopener">ArchLinux你可能需要知道的操作与软件包推荐「持续更新」 | viseator’s blog</a><br><code>noto-fonts-cjk</code>安装时建议用无图形的tty</li></ul><p><strong>acpi</strong></p><p><code>acpid</code></p><p>使用的是 oh-my-zsh 的 gnzh 主题， 加了一些插件(git zsh-syntax-highlighting)，并修改了一下 ~/.oh-my-zsh/themes/gnzh.zsh-theme 文件内 PR_PROMPT 的内容（加了颜文字，然后使用的是 tmux + tmux-powerline</p><ul><li><a href="http://harttle.com/2015/11/06/tmux-startup.html" target="_blank" rel="noopener">优雅地使用命令行：Tmux 终端复用 | Harttle Land</a></li></ul><p>输入法装 <code>ibus</code> + googlepinyin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yaourt -S ibus</span><br><span class="line">yaourt -S ibus-qt</span><br><span class="line">yaourt -S ibus-googlepinyin</span><br><span class="line">ibus-setup</span><br></pre></td></tr></table></figure><p>GCC 套装 <code>gcc binutils gdb make patch</code></p><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>配置前先<code>ifconfig</code>看看网卡是否启用，若启用<br>则用<code>ip link set &lt;ethx/enp0sx&gt; down</code>关闭</p><p>然后编辑配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/netctl/examples/ethernet-static /etc/netctl</span><br><span class="line">vim /etc/netctl</span><br></pre></td></tr></table></figure></p><p>编辑好后，改名<code>&lt;eth-static-enp0sx&gt;</code><br>然后启用配置文件<code>netctl start &lt;eth-static-enp0sx&gt;</code></p><p>无输出则配置成功，可<code>ifconfig</code>查看效果，<br><code>netctl enable &lt;eth-static-enp0sx&gt;</code>重启再次确认配置生效</p><h2 id="Vim-配置"><a href="#Vim-配置" class="headerlink" title="Vim 配置"></a>Vim 配置</h2><ul><li><a href="https://github.com/yangyangwithgnu/use_vim_as_ide" target="_blank" rel="noopener">yangyangwithgnu/use_vim_as_ide: use vim as IDE</a></li></ul><p>vim 皮肤</p><ul><li><a href="http://bytefluent.com/vivify/" target="_blank" rel="noopener">Bytefluent | Vivify</a></li><li><a href="http://vimcolors.com/" target="_blank" rel="noopener">Newest - Vim Colors</a></li></ul><h3 id="ssh-vim-皮肤-err"><a href="#ssh-vim-皮肤-err" class="headerlink" title="ssh vim 皮肤 err"></a>ssh vim 皮肤 err</h3><p>ides#capture_highlight 时发生错误:<br>第 2 行:<br>E411: 找不到 highlight group: Normal</p></h1>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Try Git!</title>
      <link href="/Try-Git/"/>
      <url>/Try-Git/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="初始化git"><a href="#初始化git" class="headerlink" title="初始化git"></a>初始化git</h1><p><code>git init</code> To initialize a Git repository here</p><p><code>/.git/</code> is a hidden directory where Git operates.</p><p><code>git status</code></p><p><strong>Staging Area:</strong><br>A place where we can group files together before we “commit” them to Git.</p><ul><li><strong>staged:</strong><br>Files are ready to be committed.</li><li><strong>unstaged:</strong><br>Files with changes that have not been prepared to be committed.</li><li><strong>untracked:</strong><br>Files aren’t tracked by Git yet. This usually indicates a newly created file.</li><li><strong>deleted:</strong><br>File has been deleted and is waiting to be removed from Git.</li></ul><p><code>git add [new file]</code> To tell Git to start tracking changes made to new file</p><p><code>git add -A</code>. where the dot stands for the current directory, so everything in and beneath it is added.</p><p>You can use <code>git reset &lt;filename&gt;</code> to remove a file or files from the staging area.</p><p><code>git commit -m &quot;Add cute octocat story&quot;</code><br>A “commit” is a snapshot of our repository.</p><p><code>git add &#39;*.txt&#39;</code><br>we can add all the new files</p><p><code>git add *.txt</code> [没有单引号，shell只会搜索当前路径下的文件]<br>Without quotes our shell will only execute the wildcard search within the current directory. Git will receive the list of files the shell found instead of the wildcard and it will not be able to add the files inside of the octofamily directory.</p><p>Use <code>git log --summary</code> to see more information for each commit</p><p><code>git remote add origin https://github.com/try-git/try_git.git</code><br>To push our local repo to the GitHub server we’ll need to add a remote repository.</p><p>Git doesn’t care what you name your remotes, but it’s typical to name your main one origin.</p><p><code>git push -u origin master</code><br>The push command tells Git where to put our commits when we’re ready.<br>The <code>-u</code>tells Git to <em>remember the parameters</em>, so that next time we can simply run <code>git push</code> .</p><p><strong>Cool Stuff:</strong><br>When you start to get the hang of git you can do some really cool things with <code>hooks</code> when you push.</p><ul><li><a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks" target="_blank" rel="noopener">Git - Git Hooks</a></li></ul><p><code>git stash</code> to stash your changes, and <code>git stash apply</code> to re-apply your changes after your pull.<br>ref:</p><ul><li><a href="https://git-scm.com/book/zh/v1/Git-%E5%B7%A5%E5%85%B7-%E5%82%A8%E8%97%8F%EF%BC%88Stashing%EF%BC%89" target="_blank" rel="noopener">Git - 储藏（Stashing）</a></li></ul><p><code>git diff</code> with the <code>--staged</code> option to see the changes you just staged</p><p><code>git checkout -- &lt;target&gt;</code>. Go ahead and get rid of all the changes since the last commit for octocat.txt</p><p>  It’s simply promising the command line that there are no more options after the <code>--</code>. This way if you happen to have a branch named <code>octocat.txt</code>, it will still revert the file, instead of switching to the branch of the same name.</p><p>You can switch branches using the <code>git checkout &lt;branch&gt;</code> command.</p><h1 id="git-删除"><a href="#git-删除" class="headerlink" title="git 删除"></a>git 删除</h1><p><code>git rm -r folder_of_cats</code><br>This will recursively remove all <em>folders</em> and files from the given directory.</p><p>If you happen to delete a file without using <code>git rm</code> you’ll find that you still have to <code>git rm</code> the deleted files from the working tree.<br>You can save this step by using the <code>-a</code> option on <code>git commit</code>, which auto removes deleted files with the commit.<br><code>git commit -am &quot;Delete stuff&quot;</code></p><p><code>git merge clean_up</code><br>tell Git to merge the clean_up branch into it.<br>when you have to merge your changes from the <code>clean_up</code> branch into the <code>master</code> branch</p><p>Merge Conflicts can occur when changes are made to a file at the same time.  if you’re interested in reading more, take a look the section of the Pro<br><a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">Git - Book</a><br> on<br><a href="https://git-scm.com/docs/git-merge#_how_conflicts_are_presented" target="_blank" rel="noopener">Git - git-merge Documentation</a></p><p>use <code>git branch -d &lt;branch name&gt;</code> to delete a branch</p><p>Somtimes, You’ll notice that <code>git branch -d bad_feature</code> doesn’t work.<br>This is because <code>-d</code> won’t let you delete something that <em>hasn’t been merged.</em><br>You can either add the <code>--force (-f)</code> option or use <code>-D</code> which combines -d -f together into one command.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack Fuel 9.0 单机部署小记</title>
      <link href="/OpenStack-Fuel-9-0-%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2%E5%B0%8F%E8%AE%B0/"/>
      <url>/OpenStack-Fuel-9-0-%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<img src="/OpenStack-Fuel-9-0-单机部署小记/fuel.png"><p>OpenStack Fuel 是Mirantis为OpenStack定制的自动部署软件(套装)，使用fuel配置OpenStack只需要配置master/主节点，并在主节点安装完成后在fuel dashboard/控制面板配置好整个OpenStack系统，即可通过fuel自动给个node/子节点部署系统(默认为Ubuntu)并安装、配置openstack。</p><a id="more"></a><h1 id="Ref-Links"><a href="#Ref-Links" class="headerlink" title="Ref Links"></a>Ref Links</h1><p><strong>推荐阅读</strong></p><ol start="0"><li><a href="https://pom.nops.cloud/deployment_tool/fuel.html" target="_blank" rel="noopener">Fuel | 深入理解OpenStack自动化部署</a></li><li><a href="http://blog.sina.com.cn/s/blog_936291410102wi29.html" target="_blank" rel="noopener">漫漫求索Openstack之路—Fuel 9.0 详细安装步骤（排坑版）<em>Alove</em>新浪博客</a></li><li>【Fuel 9.2】<a href="https://docs.mirantis.com/openstack/fuel/fuel-9.2/quickstart-guide/qs-intro.html" target="_blank" rel="noopener">Mirantis Documentation: Introduction</a></li><li>【Fuel 11.0】<a href="https://docs.openstack.org/fuel-docs/latest/userdocs/fuel-install-guide.html" target="_blank" rel="noopener">OpenStack Docs: Fuel Installation Guide</a></li></ol><p><strong>网络规划/配置参考</strong></p><ol start="4"><li><a href="http://blog.csdn.net/hchuchuan/article/details/52225660" target="_blank" rel="noopener">Mirantis OpenStack 9.0 在 VirtualBox上的部署安装 - hchuchuan - CSDN博客</a></li><li><a href="http://www.cnblogs.com/yudar/p/4630758.html" target="_blank" rel="noopener">Fuel 30 分钟快速安装OpenStack - Yudar - 博客园</a></li><li><a href="https://zhuanlan.zhihu.com/p/21864362" target="_blank" rel="noopener">OPNFV在双网卡物理机群上的部署（FUEL） - 知乎专栏</a></li><li>【Ubuntu 镜像源修改】<a href="http://blog.csdn.net/Titan0427/article/details/51982609" target="_blank" rel="noopener">部署安装Mirantis OpenStack Fuel 9.0 - Titan0427的专栏 - CSDN博客</a></li><li>【MOS本地源配置】<a href="http://lib.csdn.net/article/openstack/54517" target="_blank" rel="noopener">Mirantis OpenStack Fuel—MOS本地源/bootstrap制作 - OpenStack知识库</a></li></ol><p><strong>Horizon 使用</strong></p><ul><li><a href="http://tianhunyongheng.blog.51cto.com/1446947/1607676" target="_blank" rel="noopener">使用Fuel安装OpenStack juno之三使用OpenStack创建云主机和Volume - 天魂永恒 - 51CTO技术博客</a></li><li><a href="http://blog.vsharing.com/wpskl/A1738986.html" target="_blank" rel="noopener">[原创]Mirantis OpenStack fuel web 安装 使用 - Architect - 畅享博客</a></li></ul><p><strong>错误处理</strong></p><ul><li><a href="http://blog.csdn.net/lwyeluo/article/details/53102508?locationNum=12&amp;fps=1" target="_blank" rel="noopener">ESXi服务器上利用Fuel部署Openstack错误解决 - lwyeluo的专栏 - CSDN博客</a></li></ul><h1 id="Fuel-配置概述"><a href="#Fuel-配置概述" class="headerlink" title="Fuel 配置概述"></a>Fuel 配置概述</h1><p>[翻译自ref-3]</p><h2 id="虚拟机硬件配置"><a href="#虚拟机硬件配置" class="headerlink" title="虚拟机硬件配置"></a>虚拟机硬件配置</h2><blockquote><p><strong>NOTE</strong>: 这里只谈一般的配置，具体针对虚拟机的配置见后</p></blockquote><p><strong>Master Node/主节点</strong>:<br>安装fuel的节点，用于初始化设置，分发配置，PXE启动从节点并给从节点提供IP</p><p>主节点配置要求：<a href="https://docs.openstack.org/fuel-docs/latest/userdocs/fuel-install-guide/sysreq/sysreq_fuel_master_node_hw_requirements.html" target="_blank" rel="noopener">OpenStack Docs: Fuel Master node hardware requirements</a></p><p>这里只看测试环境的：</p><ul><li>双核 CPU</li><li>2G RAM</li><li>1000M 网卡 x1</li><li>50GB 硬盘</li></ul><p><strong>Slave node/从节点</strong>:<br>从节点是依赖于主节点的：控制节点、计算节点、储存节点等</p><p>有四种从节点：</p><ul><li>Controller nodes/控制节点</li><li>Compute nodes/计算节点</li><li>Storage nodes/储存节点</li><li>Telemetry - MongoDB nodes/遥测节点</li></ul><p>对于测试环境只需要前两个节点(各1个)即可</p><p>参考配置：</p><ul><li>双核 CPU</li><li>2G 内存 (可以加到4G)</li><li>1000M 网卡 x3</li><li>>120G 硬盘 (or 64G x3)</li></ul><h2 id="Network-requirements"><a href="#Network-requirements" class="headerlink" title="Network requirements"></a><a href="https://docs.openstack.org/fuel-docs/latest/userdocs/fuel-install-guide/sysreq/sysreq_network_requirements.html" target="_blank" rel="noopener">Network requirements</a></h2><blockquote><p><strong>NOTE</strong> 以下配置均在Dashboard中进行</p></blockquote><p><strong>带VLAN分隔的Neutron</strong></p><p>至少三张网卡：</p><table><thead><tr><th style="text-align:left">NIC</th><th style="text-align:left">for …</th></tr></thead><tbody><tr><td style="text-align:left">eth0</td><td style="text-align:left">未标记的管理网络(PXE…)</td></tr><tr><td style="text-align:left">eth1</td><td style="text-align:left">&gt; Public/Floating</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">&gt; Management</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">&gt; Storage</td></tr><tr><td style="text-align:left">eth2</td><td style="text-align:left">Private network</td></tr></tbody></table><p><strong>带隧道分隔的Neutron</strong></p><p>omitted</p><p><strong>对Public network/公有网络的要求</strong></p><ul><li>Floating IP/<code>浮动IP</code>地址范围必须和Public IP/<code>公有IP</code>一同配置</li><li>每个Controller node/<code>控制节点</code>都需要一个<code>公有IP</code><ul><li>如果选中了 <em><code>Assign public network to all nodes</code></em> 选项<br>则需要为每一个从节点分配一个<code>公有IP</code></li></ul></li><li>还需要预留3个IP给：<ul><li>Virtual IP/<code>VIP</code> x2</li><li>default gateway/<code>默认网关</code> x1</li></ul></li><li>如果打开了 Neutron DVR 选项，则每个计算节点还需要额外的一个IP</li><li>注意插件可能需要额外的IP</li></ul><p><strong>对Storage and Management networks/储存、管理网络的要求</strong></p><ul><li>这个网络为内网，因此需要内网IP段</li></ul><p><strong>Neutron L2 和 L3</strong></p><ul><li>每个project/项目所用的网络，需要独一无二的 <code>VLAN ID</code> (分隔ID)</li><li>处于安全原因，Admin project network/<code>管理网络</code> <em>孤立于</em> 其余网络(公有/私有网络)</li><li>包括Admin project/<code>管理项目</code>在内的每一个项目都需要一个<code>浮动IP</code></li><li>虚拟机直连到外部网络需要一个<code>浮动IP</code></li><li><code>浮动IP</code>地址不应与<code>公有网络</code>地址重合</li><li>如果不使用默认DNS服务器，则应指定guest OS DNS servers</li></ul><h2 id="主节点网络配置"><a href="#主节点网络配置" class="headerlink" title="主节点网络配置"></a>主节点网络配置</h2><ul><li>主节点应该能正常联网，一边下载、制作PXE启动镜像。</li><li>也可以在不联网的条件下，通过本地镜像制作PXE启动镜像。</li></ul><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><p>安装可大致分为几类：</p><ul><li>物理机安装<br>比照虚拟机的安装，相应配置增加</li><li>虚拟机安装<ul><li>VirtualBox<ul><li>手工安装 【见下】</li><li>【官方推荐】Fuel 9.0 + VBox + 自动安装脚本<br> <a href="https://docs.mirantis.com/openstack/fuel/fuel-9.2/quickstart-guide/qs-install-scripts.html" target="_blank" rel="noopener">Mirantis Documentation: Install Mirantis OpenStack using the Mirantis VirtualBox scripts</a></li></ul></li><li><a href="https://docs.openstack.org/fuel-docs/latest/userdocs/fuel-install-guide/vsphere_intro.html#vsphere-intro" target="_blank" rel="noopener">OpenStack Docs: Install Fuel on VMware vSphere</a></li><li>Hyper-V (教程较少)<ul><li><a href="https://www.mirantis.com/blog/hyper-v-integration-openstack-platform/" target="_blank" rel="noopener">Hyper-V integration in OpenStack platform | Mirantis</a></li></ul></li></ul></li></ul><blockquote><p>【安装过程概述】<br>详细的过程建议参考ref部分-推荐阅读的教程</p></blockquote><h2 id="Part-0-安装镜像的下载"><a href="#Part-0-安装镜像的下载" class="headerlink" title="Part 0 安装镜像的下载"></a>Part 0 安装镜像的下载</h2><ul><li>【Fuel 9.0 ~ 9.2 有VBox自动安装脚本】<a href="https://www.mirantis.com/software/openstack/download/" target="_blank" rel="noopener">Download OpenStack Solutions</a></li><li>【Fuel 11.0 &amp; 12.0】<a href="https://www.fuel-infra.org/#fuelget" target="_blank" rel="noopener">Fuel Community project - Deployment and Management Automation for OpenStack</a></li></ul><p>选用第一种 Fuel 9.0 + VBox 并通过脚本安装时。<br>可能会遇到 <code>Failed to create the host-only adapter</code> 以及类似的的错误，<br>这个错误是一个已知的VBox Bug，在最新版中仍未修复，目前无直接解决办法，可以考虑绕过网络配置，详见【常见错误】的相关错误</p><h2 id="【Part-I】master-主节点的配置"><a href="#【Part-I】master-主节点的配置" class="headerlink" title="【Part I】master/主节点的配置"></a>【Part I】master/主节点的配置</h2><h3 id="1-1-网络的规划与配置"><a href="#1-1-网络的规划与配置" class="headerlink" title="1.1 网络的规划与配置"></a>1.1 网络的规划与配置</h3><h3 id="1-2-master-虚拟机的设置"><a href="#1-2-master-虚拟机的设置" class="headerlink" title="1.2 master 虚拟机的设置"></a>1.2 master 虚拟机的设置</h3><h3 id="1-3-master-的安装"><a href="#1-3-master-的安装" class="headerlink" title="1.3 master 的安装"></a>1.3 master 的安装</h3><h3 id="1-4-bootstrap-镜像的制作"><a href="#1-4-bootstrap-镜像的制作" class="headerlink" title="1.4 bootstrap 镜像的制作"></a>1.4 bootstrap 镜像的制作</h3><h2 id="【Part-II】node-子节点的建立"><a href="#【Part-II】node-子节点的建立" class="headerlink" title="【Part II】node/子节点的建立"></a>【Part II】node/子节点的建立</h2><h3 id="2-1-node-虚拟机的配置"><a href="#2-1-node-虚拟机的配置" class="headerlink" title="2.1 node 虚拟机的配置"></a>2.1 node 虚拟机的配置</h3><h3 id="2-2-fuel-dashboard-的配置"><a href="#2-2-fuel-dashboard-的配置" class="headerlink" title="2.2 fuel dashboard 的配置"></a>2.2 fuel dashboard 的配置</h3><h3 id="2-3-配置分发-deploy"><a href="#2-3-配置分发-deploy" class="headerlink" title="2.3 配置分发/deploy"></a>2.3 配置分发/deploy</h3><h2 id="【Part-III】horizon-平台的使用"><a href="#【Part-III】horizon-平台的使用" class="headerlink" title="【Part III】horizon 平台的使用"></a>【Part III】horizon 平台的使用</h2><h3 id="3-1-openstack-健康检查"><a href="#3-1-openstack-健康检查" class="headerlink" title="3.1 openstack 健康检查"></a>3.1 openstack 健康检查</h3><h3 id="3-2-云主机实例的建立"><a href="#3-2-云主机实例的建立" class="headerlink" title="3.2 云主机实例的建立"></a>3.2 云主机实例的建立</h3><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><blockquote><p><strong>NOTE</strong>: 针对易出错的地方单独列出checklist，以便于检查</p></blockquote><ul><li><p>[ ] 虚拟机的选择<br>注意虚拟机之间的冲突 Hyper-V 打开时，VirtualBox、VMware均不能正常工作，<br>有时还会导致蓝屏(参见【常见错误】蓝屏 <code>0x0000003B</code>)<br>Fuel 官方推荐用 VBox，并提供了相应的自动安装、配置脚本。</p></li><li><p>[ ] 虚拟网络(网卡/交换机)的配置<br>各虚拟机网络配置方式不同，参数也有变化。<br>例如：</p><ul><li>VBox 设置网卡时，会将IP设置为形如 <code>10.20.0.1</code>的样子</li><li>VMware 则会设置为 <code>10.20.0.0</code><br><strong>注意配置统一</strong><br>建议配置之前画出网络拓扑图，并标注出功能/用途，再配置</li></ul></li><li><p>[ ] master 的配置<br>硬盘大小>64G<br>不然安装时会提示硬盘不够大</p></li><li><p>[ ] master 的安装<br>一定要等待安装完成，否则会出现不可预料的错误.<br><strong>完成的标志</strong>: <code>tty1</code>出现</p><img src="/OpenStack-Fuel-9-0-单机部署小记/master-finish.png"></li><li><p>[ ] node 的配置<br>硬盘>120G</p></li><li><p>[ ] 网卡状态<br>检查各虚拟机网卡状态，down掉的网卡手动up<br>在虚拟机重启/安装完系统/应用完配置后均要检查网卡状态。<br>查看down掉的网卡：<code>ifconfig -a</code> 显示，而<code>ifconfig</code>不显示的<br>如果有<code>ifconfig &lt;enp0sx&gt; up</code>起来(<code>&lt;enp0sx&gt;</code>为网卡名)</p></li><li><p>[ ] 镜像的准备<br>注意activate(<code>fuel-bootstrap activate</code>)相关的bootstrap<br>参考：ref-5</p></li><li><p>[ ] 检查网络配置【之后不可更改】<br>NTP服务器设为master(推荐)<br>注意ip段无冲突(默认的是无冲突的，更改时注意，务必同时参考网络配置的要求)</p></li></ul><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><ul><li><p><code>error: Failed to create the host-only adapter</code></p><blockquote><p>VBox version 5.1.24 &amp; 5.1.26</p></blockquote><p>使用官方自动安装、配置脚本时可能会遇到如下错误：</p><img src="/OpenStack-Fuel-9-0-单机部署小记/VBox-HostOnly.png" title="VBox-HostOnly"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Deleting old interfaces if exists...</span><br><span class="line">...eting host-only interface: VirtualBox Host-Only Ethernet Adapter</span><br><span class="line">VBoxManage.exe: error: The host network interface named &apos;VirtualBox Host-Only Et&apos; could not be found</span><br><span class="line">VBoxManage.exe: error: Details: code E_INVALIDARG (0x80070057), component HostWrap, interface IHost, callee IUnknown</span><br><span class="line">VBoxManage.exe: error: Context: &quot;FindHostNetworkInterfaceByName(Bstr(pszName).raw(), hif.asOutParam())&quot; at line 139 of file VBoxManageHostonly.cpp</span><br><span class="line">&quot; was not removed. Aborting...x Host-Only Ethernet Adapter</span><br></pre></td></tr></table></figure><p>可能的解决方案：</p><blockquote><p>Simple solution: <strong>Delete the already created (default) Host only Ethernet Adapter</strong> from VirtualBox Preferences and run sh launch.sh (if you received error while installing Mirantis Openstack package).</p><footer><strong>@Javed Mulani</strong><cite><a href="https://stackoverflow.com/questions/31765581/the-host-network-interface-with-the-given-name-could-not-be-found" target="_blank" rel="noopener">—— vagrant - The host network interface with the given name could not be found - Stack Overflow</a></cite></footer></blockquote><p>删除已有的网卡,<br>再次运行脚本</p><p>依旧报错</p><img src="/OpenStack-Fuel-9-0-单机部署小记/NIC-not_found.png" title="NIC-not_found"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Creating host-only interface...</span><br><span class="line">0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%</span><br><span class="line">Fatal error. Interface VirtualBox Host-Only Ethernet Adapter does not exist after creation. Exiting</span><br></pre></td></tr></table></figure><p>根据以下链接，认为此bug为已知的、未修复的bug，</p><p>Bug 相关：</p><ul><li><a href="https://forums.virtualbox.org/viewtopic.php?f=6&amp;t=82989" target="_blank" rel="noopener">virtualbox.org • View topic - try to use scripts to create VirtualBox Host-Only Ethernet Adapter does not exist after creation.</a></li><li><a href="https://www.virtualbox.org/ticket/15019" target="_blank" rel="noopener">#15019 (Unable to create Host-Only Network in Windows 10) – Oracle VM VirtualBox</a></li></ul><p>【 <strong>可能的解决思路</strong>：】<br>注释掉<code>launch.sh</code>中的<code>./actions/create-interfaces.sh || exit 1</code><br>手工创建网络，然后执行安装脚本</p></li><li><p>开虚拟机 蓝屏 <code>0x0000003B</code><br>虚拟机冲突,只留一个要用的虚拟机，关闭其他的。<br> (一般为 hyper-v 和其他虚拟机冲突，因为他会默认将整个系统虚拟化)</p><ul><li><a href="https://forums.virtualbox.org/viewtopic.php?f=38&amp;t=77134" target="_blank" rel="noopener">virtualbox.org • View topic - system_service_exception</a></li></ul></li><li><p><code>fuel-bootstrap list</code> 结果为空<br>【适用于手工生成镜像。若使用了已有的镜像，可能是镜像损坏】<br>在生成镜像(<code>fuel-bootstrap build</code>)后，镜像还放在<code>tmp</code>里，需要手工导入<br><code>fuel-bootstrap import /tmp/&lt;bootstrap-id&gt;</code>然后再次list就可以看见了。<br>然后激活镜像<code>fuel-bootstrap activate &lt;bootstrap-id&gt;</code></p><img src="/OpenStack-Fuel-9-0-单机部署小记/active-bootstrap.png"></li><li><p>连接不上 Fuel Web UI (10.20.0.2:8448)<br>检查主节点及子节点网卡是否有<code>down</code>掉的(<code>ifconfig -a</code> 显示，而<code>ifconfig</code>不显示的)，<br>如果有<code>ifconfig &lt;enp0sx&gt; up</code>起来(<code>&lt;enp0sx&gt;</code>为网卡名)</p><p>若主机与虚拟机可以互<code>ping</code><br>可尝试设置SSH隧道访问</p><img src="/OpenStack-Fuel-9-0-单机部署小记/ssh-tunnel.png"></li><li><p><code>Timeout waiting for host &#39;10.109.6.1&#39; status to become &#39;up&#39; after 60 seconds!</code><br>公有网关设置有误/网关不回应ICMP包(ping包)</p><p>先对照的网络配置要求检查Fuel Web UI的配置是否有误，检查网络连通性。<br>如果用本机做网关，则应在防火墙中打开ICMP回显。<br>(可直接关闭防火墙/ <strong>不推荐</strong>)</p></li><li><p><code>(/Stage[main]/Main/Exec[sync_time_shell]/returns) failed: /bin/bash &quot;/etc/puppet/shell_manifests/sync_time_command.sh&quot; Excuted failed</code><br>NTP服务配置有误，务必设置为master的IP (默认为 <code>10.20.0.2</code>)</p></li><li><p><code>Command: &#39;openstack [ .... ]&#39; has been running for more then 20 seconds!</code></p><img src="/OpenStack-Fuel-9-0-单机部署小记/keystone-timeout.png"><p>一般是虚拟机性能不行。<br>查看各虚拟机，资源占用情况(<code>top</code> or <code>htop</code>)<br>若CPU/内存占用过大，务必关机后增加配置。<br>并检查网卡up情况</p></li><li><p><code>unable to establish connection to keystone endpoint</code><br>horizon_dashboard 登录不了</p><img src="/OpenStack-Fuel-9-0-单机部署小记/horizon_dashboard.png"><p>简单方法，重启各虚拟机</p><p>一般方法，检查master上的keystone服务是否正常运行，并查看各虚拟机，资源占用情况(<code>top</code> or <code>htop</code>)<br>CPU/内存占用过大，务必关机后增加配置。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> OpenStack </category>
          
          <category> OpenStack Fuel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenStack </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>论运算符优先级的重要性</title>
      <link href="/%E8%AE%BA%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7/"/>
      <url>/%E8%AE%BA%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>没定义运算符优先级而引发的一系列锅</p><a id="more"></a><p>日常看书，看到Applicative typeclass，遂动手实现一下：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#123;-# LANGUAGE NoImplicitPrelude #-&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Prelude <span class="keyword">hiding</span> (<span class="type">Applicative(..)</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="type">Functor</span> f =&gt; <span class="type">Applicative</span> f <span class="keyword">where</span></span></span><br><span class="line">  pure  :: a -&gt; f a</span><br><span class="line">  (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">instance</span> <span class="type">Applicative</span> <span class="type">Maybe</span> <span class="keyword">where</span></span></span><br><span class="line">  pure = <span class="type">Just</span></span><br><span class="line">  <span class="type">Just</span> f  &lt;*&gt; m = fmap f m</span><br><span class="line">  <span class="type">Nothing</span> &lt;*&gt; _ = <span class="type">Nothing</span></span><br><span class="line"></span><br><span class="line"><span class="title">main</span> :: <span class="type">IO</span> ()</span><br><span class="line"><span class="title">main</span> = <span class="keyword">do</span></span><br><span class="line">  putStr $ (shows $ <span class="type">Just</span> (+) &lt;*&gt; <span class="type">Just</span> <span class="number">1</span> &lt;*&gt; <span class="type">Just</span> <span class="number">2</span>) <span class="string">"\n"</span></span><br><span class="line">  putStr $ (shows $ (+) `fmap` <span class="type">Just</span> <span class="number">1</span> &lt;*&gt; <span class="type">Just</span> <span class="number">2</span>) <span class="string">"\n"</span></span><br><span class="line">  <span class="comment">-- 以下这句会报错</span></span><br><span class="line">  putStr $ (shows $ (+)   &lt;$&gt;  <span class="type">Just</span> <span class="number">1</span> &lt;*&gt; <span class="type">Just</span> <span class="number">2</span>) <span class="string">"\n"</span></span><br></pre></td></tr></table></figure><p>之前一直都这么写，都没问题，然后这里最后一句会报错，编译不通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">09-Typeclass.hs:17:13: error:</span><br><span class="line">    ? No instance for (Show (a0 -&gt; a0)) arising from a use of ‘shows’</span><br><span class="line">        (maybe you haven&apos;t applied a function to enough arguments?)</span><br><span class="line">    ? In the expression: shows $ (+) &lt;$&gt; Just 1 &lt;*&gt; Just 2</span><br><span class="line">      In the second argument of ‘($)’, namely</span><br><span class="line">        ‘(shows $ (+) &lt;$&gt; Just 1 &lt;*&gt; Just 2) &quot;\n&quot;’</span><br><span class="line">      In a stmt of a &apos;do&apos; block:</span><br><span class="line">        putStr $ (shows $ (+) &lt;$&gt; Just 1 &lt;*&gt; Just 2) &quot;\n&quot;</span><br><span class="line"></span><br><span class="line">09-Typeclass.hs:17:21: error:</span><br><span class="line">    ? Ambiguous type variable ‘a0’ arising from a use of ‘+’</span><br><span class="line">      prevents the constraint ‘(Num a0)’ from being solved.</span><br><span class="line">      Probable fix: use a type annotation to specify what ‘a0’ should be.</span><br><span class="line">      These potential instances exist:</span><br><span class="line">        instance Num Integer -- Defined in ‘GHC.Num’</span><br><span class="line">        instance Num Double -- Defined in ‘GHC.Float’</span><br><span class="line">        instance Num Float -- Defined in ‘GHC.Float’</span><br><span class="line">        ...plus two others</span><br><span class="line">        ...plus three instances involving out-of-scope types</span><br><span class="line">        (use -fprint-potential-instances to see them all)</span><br><span class="line">    ? In the first argument of ‘(&lt;$&gt;)’, namely ‘(+)’</span><br><span class="line">      In the second argument of ‘($)’, namely ‘(+) &lt;$&gt; Just 1 &lt;*&gt; Just 2’</span><br><span class="line">      In the expression: shows $ (+) &lt;$&gt; Just 1 &lt;*&gt; Just 2</span><br><span class="line"></span><br><span class="line">09-Typeclass.hs:17:37: error:</span><br><span class="line">    ? No instance for (Num (a1 -&gt; a0)) arising from the literal ‘1’</span><br><span class="line">        (maybe you haven&apos;t applied a function to enough arguments?)</span><br><span class="line">    ? In the first argument of ‘Just’, namely ‘1’</span><br><span class="line">      In the first argument of ‘(&lt;*&gt;)’, namely ‘Just 1’</span><br><span class="line">      In the second argument of ‘(&lt;$&gt;)’, namely ‘Just 1 &lt;*&gt; Just 2’</span><br><span class="line"></span><br><span class="line">09-Typeclass.hs:17:48: error:</span><br><span class="line">    ? Ambiguous type variable ‘a1’ arising from the literal ‘2’</span><br><span class="line">      prevents the constraint ‘(Num a1)’ from being solved.</span><br><span class="line">      Probable fix: use a type annotation to specify what ‘a1’ should be.</span><br><span class="line">      These potential instances exist:</span><br><span class="line">        instance Num Integer -- Defined in ‘GHC.Num??</span><br><span class="line">        instance Num Double -- Defined in ‘GHC.Float’</span><br><span class="line">        instance Num Float -- Defined in ‘GHC.Float’</span><br><span class="line">        ...plus two others</span><br><span class="line">        ...plus three instances involving out-of-scope types</span><br><span class="line">        (use -fprint-potential-instances to see them all)</span><br><span class="line">    ? In the first argument of ‘Just’, namely ‘2’</span><br><span class="line">      In the second argument of ‘(&lt;*&gt;)’, namely ‘Just 2’</span><br><span class="line">      In the second argument of ‘(&lt;$&gt;)’, namely ‘Just 1 &lt;*&gt; Just 2’</span><br></pre></td></tr></table></figure><p>但单独拿出来，不重定义ap，则可以正常运行</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">main</span> :: <span class="type">IO</span> ()</span><br><span class="line"><span class="title">main</span> = <span class="keyword">do</span></span><br><span class="line">  putStr $ (shows $ <span class="type">Just</span> (+) &lt;*&gt; <span class="type">Just</span> <span class="number">1</span> &lt;*&gt; <span class="type">Just</span> <span class="number">2</span>) <span class="string">"\n"</span></span><br><span class="line">  putStr $ (shows $ (+) `fmap` <span class="type">Just</span> <span class="number">1</span> &lt;*&gt; <span class="type">Just</span> <span class="number">2</span>) <span class="string">"\n"</span></span><br><span class="line">  putStr $ (shows $ (+)   &lt;$&gt;  <span class="type">Just</span> <span class="number">1</span> &lt;*&gt; <span class="type">Just</span> <span class="number">2</span>) <span class="string">"\n"</span></span><br></pre></td></tr></table></figure><p>输出结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; main</span><br><span class="line">Just 3</span><br><span class="line">Just 3</span><br><span class="line">Just 3</span><br></pre></td></tr></table></figure></p><p>ghci给出的报错信息不明确，稍作尝试：</p><p>先注释掉最后一句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; :t (+) `fmap` Just 1 &lt;*&gt; Just 2</span><br><span class="line">(+) `fmap` Just 1 &lt;*&gt; Just 2 :: Num b =&gt; Maybe b</span><br><span class="line">ghci&gt; :t (+)   &lt;$&gt;  Just 1 &lt;*&gt; Just 2</span><br><span class="line">(+)   &lt;$&gt;  Just 1 &lt;*&gt; Just 2</span><br><span class="line">  :: (Num (a -&gt; a1), Num a, Num a1) =&gt; Maybe (a1 -&gt; a1)</span><br></pre></td></tr></table></figure><p>发现返回了一个函数，上面两句的差别只有<code>fmap</code>与<code>&lt;$&gt;</code>但后者就是前者的别名</p><p>继续做尝试:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; :t (+) `fmap` Just 1</span><br><span class="line">(+) `fmap` Just 1 :: Num a =&gt; Maybe (a -&gt; a)</span><br><span class="line">ghci&gt; :t (+)   &lt;$&gt;  Just 1</span><br><span class="line">(+)   &lt;$&gt;  Just 1 :: Num a =&gt; Maybe (a -&gt; a)</span><br></pre></td></tr></table></figure><p>看上去也没问题，但是继续传值，结果就不一样了</p><p>看类型签名也没问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; :t fmap</span><br><span class="line">fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</span><br><span class="line">ghci&gt; :t (&lt;$&gt;)</span><br><span class="line">(&lt;$&gt;) :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</span><br><span class="line">ghci&gt; :t (&lt;*&gt;)</span><br><span class="line">(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b</span><br></pre></td></tr></table></figure></p><p>又怀疑是<code>&lt;*&gt;</code>的定义有问题，翻了翻文档(Control.Applicative)<br>该有的定义也不少，而且<code>Just (+) &lt;*&gt; Just 1 &lt;*&gt; Just 2</code>也能正常计算</p><p>尝试定义liftA2也是报错</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">liftA2</span> :: <span class="type">Applicative</span> f =&gt; (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c</span><br><span class="line"><span class="title">liftA2</span> f a b = f &lt;$&gt; a &lt;*&gt; b</span><br></pre></td></tr></table></figure><p>报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">09-Typeclass.hs:19:16: error:</span><br><span class="line">    ? Couldn&apos;t match type ‘c’ with ‘b -&gt; c’</span><br><span class="line">      ‘c’ is a rigid type variable bound by</span><br><span class="line">        the type signature for:</span><br><span class="line">          liftA2 :: forall (f :: * -&gt; *) a b c.</span><br><span class="line">                    Applicative f =&gt;</span><br><span class="line">                    (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c</span><br><span class="line">        at 09-Typeclass.hs:18:11</span><br><span class="line">      Expected type: f c</span><br><span class="line">        Actual type: f (b -&gt; c)</span><br><span class="line">    ? In the expression: f &lt;$&gt; a &lt;*&gt; b</span><br><span class="line">      In an equation for ‘liftA2’: liftA2 f a b = f &lt;$&gt; a &lt;*&gt; b</span><br><span class="line">    ? Relevant bindings include</span><br><span class="line">        b :: f b (bound at 09-Typeclass.hs:19:12)</span><br><span class="line">        f :: a -&gt; b -&gt; c (bound at 09-Typeclass.hs:19:8)</span><br><span class="line">        liftA2 :: (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c</span><br><span class="line">          (bound at 09-Typeclass.hs:19:1)</span><br><span class="line"></span><br><span class="line">09-Typeclass.hs:19:22: error:</span><br><span class="line">    ? Couldn&apos;t match type ‘a’ with ‘b -&gt; a’</span><br><span class="line">      ‘a’ is a rigid type variable bound by</span><br><span class="line">        the type signature for:</span><br><span class="line">          liftA2 :: forall (f :: * -&gt; *) a b c.</span><br><span class="line">                    Applicative f =&gt;</span><br><span class="line">                    (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c</span><br><span class="line">        at 09-Typeclass.hs:18:11</span><br><span class="line">      Expected type: f (b -&gt; a)</span><br><span class="line">        Actual type: f a</span><br><span class="line">    ? In the first argument of ‘(&lt;*&gt;)’, namely ‘a’</span><br><span class="line">      In the second argument of ‘(&lt;$&gt;)’, namely ‘a &lt;*&gt; b’</span><br><span class="line">      In the expression: f &lt;$&gt; a &lt;*&gt; b</span><br><span class="line">    ? Relevant bindings include</span><br><span class="line">        b :: f b (bound at 09-Typeclass.hs:19:12)</span><br><span class="line">        a :: f a (bound at 09-Typeclass.hs:19:10)</span><br><span class="line">        f :: a -&gt; b -&gt; c (bound at 09-Typeclass.hs:19:8)</span><br><span class="line">        liftA2 :: (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c</span><br><span class="line">          (bound at 09-Typeclass.hs:19:1)</span><br></pre></td></tr></table></figure></p><p>依旧是参数类型不匹配</p><p>中间看官方库实现时，看到(GHC-Base.html#Applicative)里开头的 NOTA BENE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NOTA BENE: Do NOT use ($) anywhere in this module! The type of ($) is</span><br><span class="line">slightly magical (it can return unlifted types), and it is wired in.</span><br><span class="line">But, it is also *defined* in this module, with a non-magical type.</span><br><span class="line">GHC gets terribly confused (and *hangs*) if you try to use ($) in this</span><br><span class="line">module, because it has different types in different scenarios.</span><br><span class="line"></span><br><span class="line">This is not a problem in general, because the type ($), being wired in, is not</span><br><span class="line">written out to the interface file, so importing files don&apos;t get confused.</span><br><span class="line">The problem is only if ($) is used here. So don&apos;t!</span><br></pre></td></tr></table></figure><p>果然haskell到处都是魔法，但最后一段又说导出的库不受影响。<br>我把<code>$</code>换为括号也没什么效果。</p><p>然后我想到群里提问，想了一下，还是先小黄鸭debug一下，于是假装已经提问了，出去走了几圈，半路上想ap的定义和库里的一样，应该没什么问题，估计锅还在<code>&lt;$&gt;</code>上，<code>&lt;$&gt;</code>的定义就是<code>(&lt;$&gt;) = fmap</code>,理论上应该没问题，<code>fmap</code>是一个函数要加反引号才能当做中缀运算符，进一步联想到到运算符有优先级，函数默认优先级最高。想到这一点就有继续做尝试。</p><p>然后果然是这样。加上 <code>infixl 4 &lt;*&gt;</code>就好使了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hakell </tag>
            
            <tag> fp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @July</title>
      <link href="/Memo-List-July/"/>
      <url>/Memo-List-July/</url>
      
        <content type="html"><![CDATA[<p>反正经常开坑不填，为了保持版面整洁，先在Memo里开坑，待填的差不多了再单独拿出去。</p><a id="more"></a><p>[2017-07-30 17:46:32]</p><h1 id="Linux内核分析与实现"><a href="#Linux内核分析与实现" class="headerlink" title="Linux内核分析与实现"></a>Linux内核分析与实现</h1><ul><li><a href="http://www.yesky.com/20010813/192098.shtml" target="_blank" rel="noopener">天极网—服务器专栏</a></li><li><p><a href="http://blog.csdn.net/suppercoder/article/details/18703903" target="_blank" rel="noopener">linux 0.11 bootsect.s中的BIOS部分解读 - 行者无疆的专栏 - CSDN博客</a></p></li><li><p><a href="http://staff.ustc.edu.cn/~xlanchen/" target="_blank" rel="noopener">staff.ustc.edu.cn/~xlanchen/</a></p><ul><li><a href="http://staff.ustc.edu.cn/~xlanchen/UnderstandingLinuxKernel2007Autumn/UnderstandingLinuxKernel2007Autumn.html" target="_blank" rel="noopener">staff.ustc.edu.cn/~xlanchen/UnderstandingLinuxKernel2007Autumn/UnderstandingLinuxKernel2007Autumn.html</a><br>有部分内核源码的注释</li><li><a href="http://staff.ustc.edu.cn/~xlanchen/ULK2014Fall/ULK2014Fall.html" target="_blank" rel="noopener">ULKFall2014</a><br>Linux操作系统分析。课件参考</li><li><a href="http://staff.ustc.edu.cn/~xlanchen/OperatingSystemConcepts2017Spring/OperatingSystem2017Spring.htm" target="_blank" rel="noopener">OperatingSystemPrinciplesAndImplementationFall2016</a><br>操作系统原理与实现</li></ul></li></ul><h2 id="ULK-2014"><a href="#ULK-2014" class="headerlink" title="ULK 2014"></a>ULK 2014</h2><h3 id="hw1"><a href="#hw1" class="headerlink" title="hw1"></a>hw1</h3><ol><li>阅读至少2本操作系统相关书籍，<ul><li>给出这些书中关于操作系统的定义，要列出出处。</li><li>阐明操作系统的公共设计目标和某些操作系统特有的设计目标，要列出出处。</li><li>阐明操作系统的作用，要列出出处。</li></ul></li><li>根据你对操作系统的理解， 画出操作系统的层次模块图（自由发挥，合乎逻辑）。</li><li>操作系统的基本类型是哪三种？它们的关键技术有哪些？</li><li>使用一张表，简要列出操作系统发展各个阶段的年代、器件技术、操作系统突破的关键技术问题。</li><li>多道程序设计的主要优点是什么？多道程序对操作系统的功能需求有哪些？</li></ol><hr><p>[2017-07-29 16:48:13]</p><p>Arch 里面换了systemd-netwoekd 配置网络，一直不成功。想看一下log<br>结果journal坏掉了，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ systemctl status systemd-journald.service          </span><br><span class="line">● systemd-journald.service - Journal Service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/systemd-journald.service; static;</span><br><span class="line">   Active: failed (Result: exit-code) since Sat 2017-07-29 16:58:02 CST; 52s</span><br><span class="line">     Docs: man:systemd-journald.service(8)</span><br><span class="line">           man:journald.conf(5)</span><br><span class="line">  Process: 184 ExecStart=/usr/lib/systemd/systemd-journald (code=exited, stat</span><br><span class="line"> Main PID: 184 (code=exited, status=1/FAILURE)</span><br></pre></td></tr></table></figure><p><code>systemctl list-dependencies systemd-journald.service</code><br>查看启动依赖</p><p>发现有几个依赖项没有启动，手工拉一下</p><img src="/Memo-List-July/systemd-journald-dependence.png" title="systemd-journald-dependence"><p>开了下其中一个的状态，并尝试重启了下.<br>无效</p><img src="/Memo-List-July/systemd-journald-audit-cond.png"><p><code>systemctl --all --failed</code></p><p>ref；</p><ul><li><a href="https://bbs.archlinux.org/viewtopic.php?id=187602" target="_blank" rel="noopener">[SOLVED] journald not logging / System Administration / Arch Linux Forums</a><br>然而并没有出现这个问题<img src="/Memo-List-July/systemd-journald.service&socket.png"></li><li><p><a href="https://archlinuxarm.org/forum/viewtopic.php?f=45&amp;t=10703" target="_blank" rel="noopener">Arch Linux ARM • View topic - Issuses with 1Aug2016 “latest” for utilite</a><br>这个要重装内核…</p><blockquote><p>Got it working by updating uboot and switching to the &gt;linux-image-imx6 kernel, resetting and updating the uboot env &gt;with the help of these threads:</p><p>….</p><p>pacman -Syu installed the new glibc and it didn’t blow up! Hooray.<br>Now to rebuild all my configurations.</p><p>@DevilCrayon</p></blockquote></li><li><p><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1379725" target="_blank" rel="noopener">Bug 1379725 – systemd-journald.service loaded but failed</a></p></li><li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1379800" target="_blank" rel="noopener">Bug 1379800 – systemd does not create new machine-id file if none is present</a><br>以上两个bug 互相关联</li></ul><p>附 dmesg-log<br><a href="/Memo-List-July/dmesg-err.txt" title="dmesg error log">dmesg error log</a></p><hr><h1 id="cis-914"><a href="#cis-914" class="headerlink" title="cis 914"></a>cis 914</h1><h2 id="01-intro-Haskell-入门"><a href="#01-intro-Haskell-入门" class="headerlink" title="01-intro Haskell 入门"></a>01-intro Haskell 入门</h2><p>推荐阅读：<br>【en】</p><ul><li><a href="http://learnyouahaskell.com/starting-out" target="_blank" rel="noopener">Starting Out - Learn You a Haskell for Great Good!</a>, chapter 2</li><li><a href="http://book.realworldhaskell.org/" target="_blank" rel="noopener">Real World Haskell</a>, chapters 1 and 2</li></ul><p>【zh-cn】</p><ul><li><a href="https://learnyoua.haskell.sg/content/zh-cn/ch02/ready-go.html" target="_blank" rel="noopener">Ready Go · Haskell 趣學指南</a>, 第二章</li><li><a href="http://cnhaskell.com/" target="_blank" rel="noopener">Real World Haskell 中文版 — Real World Haskell 中文版</a>, 第1章和第2章</li></ul><h3 id="什么是-Haskell"><a href="#什么是-Haskell" class="headerlink" title="什么是 Haskell"></a>什么是 Haskell</h3><p>Haskell 的特点：</p><ul><li>函数式[语言/编程] (Functional)</li><li>纯函数 (Pure)</li><li>惰性求值 (Lazy)</li><li>静态类型 (Statically typed)</li></ul><h3 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h3><p>三个关注的方面</p><ul><li>类型 (Types)</li><li>抽象 (Abstraction)</li><li>Wholemeal programming</li></ul><hr><p>[2017-07-15 22:02:13]</p><h1 id="Some-Note-for-FreeCodeCamp"><a href="#Some-Note-for-FreeCodeCamp" class="headerlink" title="Some Note for FreeCodeCamp"></a>Some Note for FreeCodeCamp</h1><p>当你遇到困惑不知道该怎么办，永远记住:Read-Search-Ask。</p><ul><li>Read the error</li><li>Search Google</li><li>Ask for help</li></ul><h1 id="HTML-5-amp-CSS"><a href="#HTML-5-amp-CSS" class="headerlink" title="HTML 5 &amp; CSS"></a>HTML 5 &amp; CSS</h1><p><strong>Say Hello to HTML Element</strong></p><p>HTML(Hyper Text Markup Language)(超文本标记语言)</p><p>大部分元素都有一个<code>开始标记</code>和一个<code>结束标记</code>。</p><p><code>h1</code>就是一个HTML元素，<code>h1</code>是<code>header1</code>的简写，意思是 <em>一级标题</em>。<br>h1是主标题，h2是副标题，h3、h4、h5、h6依次递减字体的大小。</p><p>p是英文paragraph段落的缩写，经常被用来创建一个段落.</p><p>注释有两个功能：</p><ol><li>想让某一段代码不起作用，但你又不想删除这一段代码。</li><li>就是给代码添加一些说明，方便团队合作或日后自己查看，但又不想影响代码本身。</li></ol><p>注释的开始标记是<code>&lt;!--</code></p><p>结束</p><p><strong>Change the Color of Text</strong></p><p>我们可以通过修改元素的style(样式)来达到目的。<br>样式的属性有很多，其中color用来指定颜色。</p><p>以下是将你的h2元素的文本颜色设置为蓝色的示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">"color: blue"</span>&gt;</span>CatPhotoApp<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Use CSS Selectors to Style Elements</strong></p><p>样式的属性多达几千个，但别担心，按照80-20原则，常用的也就几十个，你完全可以掌握它。</p><p>当你键入</p><h2 style="color: red">CatPhotoApp</h2>，你就给h2元素添加了inline style(内联样式)。<p></p><p>内联样式是为元素添加样式的最简单有效的方式，但是更易于维护的方式是使用层叠样式表CSS（Cascading Style Sheets）。</p><p>在代码的最顶端，创建一个如下的style元素：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在这个style元素内, 你可以为所有的h2元素创建一个元素选择器。比如，如果你想要将所有的h2元素设置为红色, 你的代码应该看起来像这样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  选择器 &#123;属性名称: 属性值;&#125;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">h2</span> &#123;<span class="attribute">color</span>: red;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：一定要在属性值的后面加上分号<code>;</code>。</p><p><strong>Use a CSS Class to Style an Element</strong></p><ol><li><p>我们先声明一个类选择器：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.blue-text</span> &#123;</span></span><br><span class="line"><span class="undefined">    color: blue;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面的代码在 <code>&lt;style&gt;</code> 标记中声明了一个叫做 <code>blue-text</code> 的类样式。</p></li><li><p>然后在h2元素上应用我们声明的类选择器：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"blue-text"</span>&gt;</span>CatPhotoApp<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>注意：在CSS中，类选择器应该添加.为前缀。</p><p>而在HTML中，class属性不能添加.为前缀。<br>这是因为在CSS中如果类选择器前不添加. 浏览器就会误认为类选择器是一个元素选择器。</p><p><strong>Change the Font Size &amp; Font Family of an Element</strong></p><p>字号是由样式属性font-size来控制的, 如下：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>用font-family属性来设置元素的字体。</p><p>如果你想把副标题的字体设置为Sans-serif，你可以使用下面的CSS：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Import a Google Font</strong></p><p>现在，让我们来导入谷歌字体。</p><p>首先，你需要用<code>link</code>标签来引入谷歌<code>Lobster</code>字体。</p><p>复制下面的代码片断并将其粘贴到你的代码编辑器的顶部：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://fonts.gdgdocs.org/css?family=Lobster"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>现在你可以将<code>Lobster</code>作为 <code>font-family</code>属性 的值应用到你的h2元素上了。</p><p><strong>Specify How Fonts Should Degrade</strong></p><p>有几种默认的字体是所有浏览器都可用的，包括<code>Monospace</code>、<code>Serif</code>和<code>Sans-Serif</code>。</p><p>当某种字体不可用时，你可以让浏览器自动降级到另一种字体。</p><p>例如，如果你想让段落的字体为<code>Helvetica</code>，但你同时想在<code>Helvetica</code>字体不可用时自动降级使用<code>Sans-Serif</code>字体，你可以使用如下CSS样式：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica, Sans-Serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Add Images to your Website</strong></p><p>使用<code>img</code>元素来为你的网站添加图片，使用<code>src</code>属性指向一个图片的具体地址。</p><p>举例如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://www.your-image-source.com/your-image.jpg"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>注意：<code>img</code>元素是自关闭元素，不需要结束标记。</p><p><strong>Size your Images</strong></p><p>CSS包含一个控制元素宽度的<code>width</code>属性。像控制字体一样，我们使用<code>px</code>（像素）来指定图片的宽度。</p><p>例如，如果我们想要创建一个名为<code>larger-image</code>的类选择器，把HTML元素的宽度设定为500像素，我们使用：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.larger-image</span> &#123;</span></span><br><span class="line"><span class="undefined">    width: 500px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Add Borders Around your Elements</strong></p><p>CSS 边框的属性有style(样式)、color(颜色)、width(宽度)、height(高度)等。</p><p>举个例子，如果我们想要让一个HTML元素的边框颜色为红色、边框宽度为5像素(px)、边框样式为固体(solid)，代码如下:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.thin-red-border</span> &#123;</span></span><br><span class="line"><span class="undefined">    border-color: red;</span></span><br><span class="line"><span class="undefined">    border-width: 5px;</span></span><br><span class="line"><span class="undefined">    border-style: solid;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>提示：你可以应用多个class到一个元素，只需要在多个class之间用 <strong>空格</strong> 分开即可。例如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"class1 class2"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Add Rounded Corners with a Border Radius</strong></p><p>猫咪图片的边框现在是尖尖的，不够可爱，我们可以通过CSS的一个叫<code>border-radius</code>(边框半径)的属性来让它的边框变成圆的。</p><p>除了像素，你还可以使用百分比来指定border-radius边框半径的值。</p><p><strong>Link to External Pages with Anchor Elements</strong></p><p>a元素，也叫anchor（锚点）元素，既可以用来链接到外部地址实现页面跳转功能，也可以链接到当前页面的某部分实现内部导航功能。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> ↓ ancher tag               ↓ anchor tag's href attribute</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Here's a <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://freecodecamp.cn"</span>&gt;</span> link to FreeCodeCamp中文社区 <span class="tag">&lt;/<span class="name">a</span>&gt;</span> for you to follow.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> ↑  link's text</span><br></pre></td></tr></table></figure><p><code>Nesting</code>（嵌套）就是把一个元素放在另一个元素里面。</p><p><strong>Make Dead Links using the Hash Symbol</strong></p><p>有时你想为你的网站添加一个<code>a</code>元素，但此时你还不知道要将它们链接到哪儿，此时可以使用固定链接。</p><p>把你的<code>a</code>元素的<code>href</code>属性的值替换为一个<code>#</code>，别名hash(哈希)符号，将其变为一个固定链接。</p><p><strong>Turn an Image into a Link</strong></p><p>你可以通过把某元素嵌套进<code>a</code>元素使其变成一个链接。</p><p>把你的图片嵌套进<code>a</code>元素。举例如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/images/relaxing-cat.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Add Alt Text to an Image for Accessibility</strong></p><p><code>alt</code>属性，也被称为alt text, 是当图片无法加载时显示的替代文本。<code>alt</code>属性对于盲人或视觉损伤的用户理解一幅图片中所描绘的内容非常重要，搜索引擎也会搜索<code>alt</code>属性。</p><p>简而言之，每一张图片都应该有一个<code>alt</code>属性！</p><p>你可以像下面例子中一样为<code>img</code>元素添加一个<code>alt</code>属性：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"www.your-image-source.com/your-image.jpg"</span> <span class="attr">alt</span>=<span class="string">"your alt text"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p><strong>Create a Bulleted Unordered List</strong></p><p>HTML有一个特殊元素，用于创建unordered lists（无序列表）, 或带项目符号的列表。</p><p>无序列表以<ul>元素开始，并包含一个或多个<li>元素。</li></ul></p><p>例如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>cheese<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>将会创建一个带项目符号的”milk”和”cheese”列表。</p><p><strong>Create an Ordered List</strong></p><p>HTML有一个特殊元素，用于创建ordered lists（有序列表）, 或数字编号列表。</p><p>有序列表以<code>&lt;ol&gt;</code>元素开始，并包含一个或多个<code>&lt;li&gt;</code>元素。</p><p>例如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Garfield<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Sylvester<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>将创建一个包含”Garfield”和”Sylvester”的数字编号列表。</p><h2 id="Form-Button-and-Checkboxes"><a href="#Form-Button-and-Checkboxes" class="headerlink" title="Form, Button and Checkboxes"></a>Form, Button and Checkboxes</h2><p><strong>Create a Text Field</strong></p><p>现在让我们来创建一个<code>form</code>(表单)。</p><p>Text input(文本输入框)是用来获得用户输入的绝佳方式。</p><p>你可以用如下方法创建：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>注意，<code>input</code>元素是自关闭的。</p><p><strong>Add Placeholder Text to a Text Field</strong></p><p>占位符(placeholder text)是用户在<code>input</code>(输入)框输入任何东西之前放置在<code>input</code>(输入)框中的预定义文本。</p><p>你可以用如下方式创建占位符：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"this is placeholder text"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Create a Form Element</strong></p><p>使用HTML来构建可以跟服务器交互的Web表单(form)，通过给你的<code>form</code>元素添加一个<code>action</code>属性来达到此目的。</p><p><code>action</code>属性的值指定了表单提交到服务器的地址。</p><p>例如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/url-where-you-want-to-submit-form-data"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Add a Submit Button to a Form</strong></p><p>让我们来为你的<code>form</code>添加一个<code>submit</code>(提交)按钮，点击这个按钮，表单中的数据将会被发送到你通过<code>action</code>属性指定的地址上。</p><p>下面是submit按钮的例子：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>this button submits the form<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Use HTML5 to Require a Field</strong></p><p>当你设计表单时，你可以指定某些选项为必填项(required)，只有当用户填写了该选项后，用户才能够提交表单。</p><p>例如，如果你想把一个文本输入字段设置为必填项，在你的<code>input</code>元素中加上<code>required</code>属性就可以了，你可以使用：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>注意：required属性在Safari浏览器中不起作用，请用其他浏览器来学习，推荐使用Chrome。</p><p><strong>Create a Set of Radio Buttons</strong></p><p>单选就是你只能在多个选项中选择一个，就好比你有很多追求者，但却只能选择一个结婚。</p><p>多选一的场景就用<code>radio button</code>(单选按钮)</p><p>单选按钮只是<code>input</code>输入框的一种类型。</p><p>每一个单选按钮都应该嵌套在它自己的<code>label</code>(标签)元素中。</p><p>注意：所有关联的单选按钮应该使用相同的<code>name</code>属性。</p><p>下面是一个单选按钮的例子：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"indoor-outdoor"</span>&gt;</span> Indoor<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"indoor-outdoor"</span>&gt;</span> Outdoor<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Create a Set of Checkboxes</strong></p><p>当你在大学选课时，面对几百门课程，而因为时间和精力，你只能从中选择十几门。<br>这样的场景就用<code>checkboxes</code>（复选按钮）。</p><p>复选按钮是<code>input</code>的输入框的另一种类型。<br>每一个复选按钮都应该嵌套进<code>label</code>元素中。<br>所有关联的复选按钮应该具有相同的<code>name</code>属性。</p><p>下面是复选按钮的例子：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"personality"</span>&gt;</span> Loving<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"personality"</span>&gt;</span> Loving2<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"personality"</span>&gt;</span> Loving3<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Check Radio Buttons and Checkboxes by Default</strong></p><p>使用<code>checked</code>属性，你可以设置复选按钮和单选按钮默认被选中。</p><p>为此，只需在<code>input</code>元素中添加属性<code>checked</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"test-name"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"personality"</span> <span class="attr">checked</span>&gt;</span> Loving<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="Div"><a href="#Div" class="headerlink" title="Div"></a>Div</h2><p><strong>Nest Many Elements within a Single Div Element</strong></p><p><code>div</code>元素，也被称作division(层)元素，是一个盛装其他元素的通用容器。<br>所以可以利用CSS的继承关系把<code>div</code>上的CSS传递给它所有子元素。</p><p>你可以用<code>&lt;div&gt;</code>来标记一个<code>div</code>元素的开始，然后用<code>&lt;/div&gt;</code>来标记一个div元素的结束。</p><p><strong>Give a Background Color to a Div Element</strong></p><p>你可以用 <code>background-color</code> 属性来设置一个元素的背景颜色。</p><p>例如，如果你想把一个元素的背景颜色设置为<code>green</code>，你应该把这些加到你的 <code>style</code> 元素中：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.green-background</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Set the ID of an Element</strong></p><p>除了 <code>class</code>属性之外，每一个 HTML 元素还可以使用 <code>id</code> 属性。<br>使用 <code>id</code> 属性有若干好处，一旦当你开始使用 jQuery 的时候你会有更深的体会。</p><p><code>id</code> 属性应该是唯一的，虽然浏览器并不强制唯一，但基于最佳实践，这一点是被广泛认可的，所以请不要给一个以上的元素设置相同的 <code>id</code> 属性。</p><p>下面举例说明了如何设置<code>h2</code> 元素的<code>id</code>属性为<code>cat-photo-app</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">"cat-photo-app"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Use an ID Attribute to Style an Element</strong></p><p>和类选择器一样，你也可以使用ID选择器来声明样式。</p><p>声明一个叫<code>cat-photo-element</code>的ID选择器 ，并设置背景色为绿色。：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#cat-photo-element</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意：在你的 <code>style</code> 元素内部，定义类选择器必须添加 . 为前缀，定义ID选择器必须添加 <code>#</code> 为前缀。</p><h2 id="padding-margin-and-border"><a href="#padding-margin-and-border" class="headerlink" title="padding, margin and border"></a>padding, margin and border</h2><p><strong>Adjusting the Padding of an Element</strong></p><p>你可能早已经注意到了这点，所有的 HTML 元素本质上是小的矩形块，代表着某一小块区域。有三个影响HTML元素布局的重要属性：<code>padding(内边距)</code>、<code>margin(外边距)</code>、<code>border(边框)</code>。</p><p>元素的 <code>padding</code> 控制 元素内容/<code>content</code>和 元素边框/<code>border</code> 之间的距离。</p><p><strong>Add Different Padding to Each Side of an Element</strong></p><p>有时你想要自定义元素，使它的每一个边具有不同的 <code>padding</code>。<br>CSS 允许你使用 <code>padding-top</code>、<code>padding-right</code>、<code>padding-bottom</code> 和 <code>padding-left</code>来控制元素上右下左四个方向的 <code>padding</code>。</p><p><strong>Use Clockwise Notation to Specify the Padding of an Element</strong></p><p>除了分别指定元素的属性外，你还可以集中起来指定它们，举例如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">padding: 10px 20px 10px 20px;</span><br></pre></td></tr></table></figure></p><p>这四个值以顺时针方式排列：顶部、右侧、底部、左侧，简称：<code>上右下左</code>。</p><p><strong>Adjusting the Margin of an Element</strong></p><p>元素的 外边距/<code>margin</code> 控制 元素边框/<code>border</code> 和元素实际所占空间的距离。</p><p><strong>Add a Negative Margin to an Element</strong></p><p>如果你将一个元素的 <code>margin</code> 设置为负值，元素将会变大。</p><p><strong>Add Different Margins to Each Side of an Element</strong></p><p>有时你想要自定义元素，使它的每一个边具有不同的 <code>margin</code>。<br>CSS 允许你使用 <code>margin-top</code>、<code>margin-right</code>、<code>margin-bottom</code> 和 <code>margin-left</code> 来控制元素上右下左四个方向的 <code>margin</code>。</p><p><strong>Use Clockwise Notation to Specify the Margin of an Element</strong></p><p>除了分别指定元素的属性外，你还可以集中起来指定它们，举例如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: 10px 20px 10px 20px;</span><br></pre></td></tr></table></figure></p><p>这四个值以顺时针方式排列：顶部、右侧、底部、左侧，简称：<code>上右下左</code>。</p><h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><p><strong>Style the HTML Body Element</strong></p><p>现在让我们来一个全新的开始，讲一讲 CSS 继承。</p><p>每一个 HTML 页面都有一个 <code>body</code> 元素。<br>通过将其 <code>background-color</code> 设置为黑色，我们可以证明 <code>body</code> 元素的存在。</p><p>我们可以通过将下面的代码添加到我们的 <code>style</code> 元素来做到这一点：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><ul><li><a href="https://www.zhihu.com/question/25753307" target="_blank" rel="noopener">计算机本科应届毕业生要有怎样的能力才算比较好的？ - 知乎</a></li></ul><p>算法</p><p>二分搜索 Binary Search<br>分治 Divide Conquer<br>宽度优先搜索 Breadth First Search<br>深度优先搜索 Depth First Search<br>回溯法 Backtracking<br>双指针 Two Pointers<br>动态规划 Dynamic Programming<br>扫描线 Scan-line algorithm<br>快排 Quick Sort</p><p>数据结构  </p><p>栈 Stack<br>队列 Queue<br>链表 Linked List<br>数组 Array<br>哈希表 Hash Table<br>二叉树 Binary Tree<br>堆 Heap<br>并查集 Union Find<br>字典树 Trie</p><p>[2017-07-09 15:00:07]</p><p><a href="http://learnyouahaskell.com/chapters" target="_blank" rel="noopener">Learn you a Haskell for Great good</a><br>=</p><p><strong>中文版</strong></p><ul><li><a href="https://learnyoua.haskell.sg/content/zh-cn/" target="_blank" rel="noopener">简体中文 zh-cn</a></li><li><a href="https://learnyoua.haskell.sg/content/zh-tw/" target="_blank" rel="noopener">繁體中文 zh-tw</a></li></ul><h1 id="01-introduction"><a href="#01-introduction" class="headerlink" title="01 introduction"></a>01 <a href="http://learnyouahaskell.com/introduction" target="_blank" rel="noopener">introduction</a></h1><ul><li>Hakell 是一门 <em>纯粹函数式编程语言 (purely functional programming language)</em><br>无 <em>副作用 (side effect)</em></li><li>Haskell 是 <em>惰性 (lazy)</em> 的</li><li>Haskell 是 <em>静态类型 (statically typed)</em> 的<br>支持 <em>自动类型推导 (tyoe inference)</em></li></ul><h2 id="WinGHCi"><a href="#WinGHCi" class="headerlink" title="WinGHCi"></a>WinGHCi</h2><p>在GHCi中在载入(<code>:load</code>/<code>:l</code>)文件后，若更改了源文件要记得重新加载源文件(<code>:reload</code>/<code>:r</code>)</p><h1 id="02-starting-out"><a href="#02-starting-out" class="headerlink" title="02 starting out"></a>02 <a href="http://learnyouahaskell.com/starting-out" target="_blank" rel="noopener">starting out</a></h1><h2 id="Ready-set-go"><a href="#Ready-set-go" class="headerlink" title="Ready, set, go!"></a>Ready, set, go!</h2><p>GHCi的提示符默认是<code>Preload</code>可以通过<code>:set prompt &quot;ghci&gt;&quot;</code>修改成你想要的形式</p><p><strong>简单的运算</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; 1+1</span><br><span class="line">2</span><br><span class="line">ghci&gt; 1/3</span><br><span class="line">0.3333333333333333</span><br><span class="line">ghci&gt; div 3 1</span><br><span class="line">3</span><br><span class="line">ghci&gt; div 9 5</span><br><span class="line">1</span><br><span class="line">ghci&gt; 9 `div` 5</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><code>/</code>默认结果为小数，<code>div</code>为整除</p><p>可以通过加上反引号(`)，将函数写在中间</p><p><strong>负数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; -1</span><br><span class="line">-1</span><br><span class="line">ghci&gt; -1 *9</span><br><span class="line">-9</span><br><span class="line">ghci&gt; 9* -1</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:15:1: error:</span><br><span class="line">    Precedence parsing error</span><br><span class="line">        cannot mix ‘*’ [infixl 7] and prefix `-&apos; [infixl 6] in the same infix expression</span><br><span class="line">ghci&gt; 9*(-1)</span><br><span class="line">-9</span><br></pre></td></tr></table></figure><p>haskell 里面的<code>-</code>为一个函数。所以负数一般都要加上括号(句首可以不用加)</p><p><strong>逻辑运算</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; True || False</span><br><span class="line">True</span><br><span class="line">ghci&gt; True &amp;&amp; False</span><br><span class="line">False</span><br><span class="line">ghci&gt; not True</span><br><span class="line">False</span><br><span class="line">ghci&gt; ^ True</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:22:1: error: parse error on input ‘^’</span><br><span class="line">ghci&gt; True | False</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:23:14: error:</span><br><span class="line">    parse error (possibly incorrect indentation or mismatched brackets)</span><br><span class="line">ghci&gt; True and False</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:24:1: error:</span><br><span class="line">    ? Couldn&apos;t match expected type ‘([Bool] -&gt; Bool) -&gt; Bool -&gt; t’</span><br><span class="line">                  with actual type ‘Bool’</span><br><span class="line">    ? The function ‘True’ is applied to two arguments,</span><br><span class="line">      but its type ‘Bool’ has none</span><br><span class="line">      In the expression: True and False</span><br><span class="line">      In an equation for ‘it’: it = True and False</span><br><span class="line">    ? Relevant bindings include it :: t (bound at &lt;interactive&gt;:24:1)</span><br></pre></td></tr></table></figure><ul><li>与 <code>||</code></li><li>或 <code>&amp;&amp;</code></li><li>非 <code>not</code></li></ul><p><strong>比较运算符</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; 1 == 2</span><br><span class="line">False</span><br><span class="line">ghci&gt; 1 ?= 9</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:26:3: error:</span><br><span class="line">    ? Variable not in scope: (?=) :: Integer -&gt; Integer -&gt; t</span><br><span class="line">    ? Perhaps you meant one of these:</span><br><span class="line">        ‘&gt;=’ (imported from Prelude), ‘==’ (imported from Prelude),</span><br><span class="line">        ‘/=’ (imported from Prelude)</span><br><span class="line">ghci&gt; 1 &gt;= 9</span><br><span class="line">False</span><br><span class="line">ghci&gt; 1 /= 9</span><br><span class="line">True</span><br><span class="line">ghci&gt; True == False</span><br><span class="line">False</span><br><span class="line">ghci&gt; &quot;a&quot; == &apos;a&apos;</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:30:8: error:</span><br><span class="line">    ? Couldn&apos;t match expected type ‘[Char]’ with actual type ‘Char’</span><br><span class="line">    ? In the second argument of ‘(==)’, namely ‘&apos;a&apos;’</span><br><span class="line">      In the expression: &quot;a&quot; == &apos;a&apos;</span><br><span class="line">      In an equation for ‘it’: it = &quot;a&quot; == &apos;a&apos;</span><br><span class="line">ghci&gt; &apos;a&apos; == &apos;a&apos;</span><br><span class="line">True</span><br><span class="line">ghci&gt; 1 === 2</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:32:3: error:</span><br><span class="line">    ? Variable not in scope: (===) :: Integer -&gt; Integer -&gt; t</span><br><span class="line">    ? Perhaps you meant ‘==’ (imported from Prelude)</span><br><span class="line">ghci&gt; 1 == True</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:33:1: error:</span><br><span class="line">    ? No instance for (Num Bool) arising from the literal ‘1’</span><br><span class="line">    ? In the first argument of ‘(==)’, namely ‘1’</span><br><span class="line">      In the expression: 1 == True</span><br><span class="line">      In an equation for ‘it’: it = 1 == True</span><br></pre></td></tr></table></figure><ul><li>大于? <code>&gt;=</code></li><li>小于? <code>&lt;=</code></li><li>等于? <code>==</code></li><li>不等? <code>/=</code></li></ul><p>不同类型之间不能判定是否相等，Bool值和0/1没有关系</p><p><strong>函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; succ 9 + max 5 4 + 1</span><br><span class="line">16</span><br><span class="line">ghci&gt; (succ 9) + (max 5 4) + 1</span><br><span class="line">16</span><br><span class="line">ghci&gt; succ 9 * 10</span><br><span class="line">100</span><br><span class="line">ghci&gt; succ (9 * 10)</span><br><span class="line">91</span><br></pre></td></tr></table></figure><p>函数的优先级最高(&gt;9)</p><p>haskell 中的函数调用不需要括号</p><h2 id="Baby’s-first-functions"><a href="#Baby’s-first-functions" class="headerlink" title="Baby’s first functions"></a>Baby’s first functions</h2><p>此节至本章末尾的函数定义：</p><p>ref: <a href="//">02-starting out.lhs</a></p><ul><li>haskell 中的函数定义没有顺序</li><li>haskell 中<code>if</code>语句的<code>else</code>不可省略</li><li>函数名中的单引号<code>&#39;</code>没有特殊含义，只是用来区分不同的函数</li><li>首字母大写的函数是不允许的</li><li>常量(函数)不可修改</li></ul><h2 id="An-intro-to-lists"><a href="#An-intro-to-lists" class="headerlink" title="An intro to lists"></a>An intro to lists</h2><p><strong> lists, strings and list comprehensions</strong></p><blockquote><p><em>Note</em>: 在 ghci 下，我们可以使用 <code>let</code> 关键字来定义一个常量。在 ghci 下运行 <code>let a=1</code> 与在脚本中编写 <code>a=1</code> 是等价的。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; let lostNumbers = [4,8,15,16,23,48]  </span><br><span class="line">ghci&gt; lostNumbers</span><br><span class="line">[4,8,15,16,23,48]</span><br><span class="line">ghci&gt; [4,8,15,16,23,48]  </span><br><span class="line">[4,8,15,16,23,48]</span><br><span class="line">ghci&gt; [1,2,&apos;a&apos;,3,&apos;b&apos;,&apos;c&apos;,4]</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:39:2: error:</span><br><span class="line">    ? No instance for (Num Char) arising from the literal ‘1’</span><br><span class="line">    ? In the expression: 1</span><br><span class="line">      In the expression: [1, 2, &apos;a&apos;, 3, ....]</span><br><span class="line">      In an equation for ‘it’: it = [1, 2, &apos;a&apos;, ....]</span><br><span class="line">ghci&gt; [&apos;h&apos;,&apos;e&apos;,&apos;l&apos;,&apos;l&apos;,&apos;o&apos;]</span><br><span class="line">&quot;hello&quot;</span><br></pre></td></tr></table></figure><ul><li>List里面元素的类型必须相同</li><li>字符串是字符list的语法糖</li></ul><p><strong><code>++</code></strong></p><p><code>++</code>是用来连接list的操作符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; &quot;hello&quot; ++ &quot; &quot; ++ &quot;world&quot;  </span><br><span class="line">&quot;hello world&quot;</span><br><span class="line">ghci&gt; [1,2,3,4] ++ [9,10,11,12]  </span><br><span class="line">[1,2,3,4,9,10,11,12]</span><br><span class="line">ghci&gt; [&apos;w&apos;,&apos;o&apos;] ++ [&apos;o&apos;,&apos;t&apos;]  </span><br><span class="line">&quot;woot&quot;</span><br><span class="line">ghci&gt; [&apos;w&apos;,&apos;o&apos;] ++ &quot;class&quot;</span><br><span class="line">&quot;woclass&quot;</span><br></pre></td></tr></table></figure><ul><li><code>++</code>在插入元素时会遍历整个list，效率很低</li><li>使用<code>:</code>在lsit前面添加元素效率更高</li></ul><p><strong><code>:</code></strong></p><p><code>:</code>用来在list头部插入 <strong>一个</strong> 元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; &apos;!&apos; : [&apos;w&apos;,&apos;o&apos;]</span><br><span class="line">&quot;!wo&quot;</span><br><span class="line">ghci&gt; &quot;hi&quot; : [&apos;w&apos;,&apos;o&apos;]</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:48:9: error:</span><br><span class="line">    ? Couldn&apos;t match expected type ‘[Char]’ with actual type ‘Char’</span><br><span class="line">    ? In the expression: &apos;w&apos;</span><br><span class="line">      In the second argument of ‘(:)’, namely ‘[&apos;w&apos;, &apos;o&apos;]’</span><br><span class="line">      In the expression: &quot;hi&quot; : [&apos;w&apos;, &apos;o&apos;]</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:48:13: error:</span><br><span class="line">    ? Couldn&apos;t match expected type ‘[Char]’ with actual type ‘Char’</span><br><span class="line">    ? In the expression: &apos;o&apos;</span><br><span class="line">      In the second argument of ‘(:)’, namely ‘[&apos;w&apos;, &apos;o&apos;]’</span><br><span class="line">      In the expression: &quot;hi&quot; : [&apos;w&apos;, &apos;o&apos;]</span><br><span class="line">ghci&gt; &apos;A&apos;:&quot; SMALL CAT&quot;</span><br><span class="line">&quot;A SMALL CAT&quot;</span><br><span class="line">ghci&gt; 5:[1,2,3,4,5]</span><br><span class="line">[5,1,2,3,4,5]</span><br></pre></td></tr></table></figure></p><blockquote><p><em>Note</em>: <code>[],[[]],[[],[],[]]</code> 是不同的。第一个是一个空的 List，第二个是含有一个空 List 的 List，第三个是含有三个空 List 的 List。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; []</span><br><span class="line">[]</span><br><span class="line">ghci&gt; [[]]</span><br><span class="line">[[]]</span><br><span class="line">ghci&gt; [] == [[]]</span><br><span class="line">False</span><br><span class="line">ghci&gt; [] : [[]]</span><br><span class="line">[[],[]]</span><br><span class="line">ghci&gt; [] : [] : []</span><br><span class="line">[[],[]]</span><br><span class="line">ghci&gt; ([] : []) : []</span><br><span class="line">[[[]]]</span><br></pre></td></tr></table></figure><p><strong><code>!!</code></strong></p><p><code>!!</code>用于按照顺序从list 里面取值，索引从0开始</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; &quot;Steve Buscemi&quot; !! 0</span><br><span class="line">&apos;S&apos;</span><br><span class="line">ghci&gt; &quot;Steve Buscemi&quot; !! 3</span><br><span class="line">&apos;v&apos;</span><br><span class="line">ghci&gt; [9.4,33.2,96.2,11.2,23.25] !! 1  </span><br><span class="line">33.2</span><br><span class="line">ghci&gt; [9.4,33.2,96.2,11.2,23.25] !! 11</span><br><span class="line">*** Exception: Prelude.!!: index too large</span><br><span class="line">ghci&gt; [9.4,33.2,96.2,11.2,23.25] !! (-1)</span><br><span class="line">*** Exception: Prelude.!!: negative index</span><br></pre></td></tr></table></figure><p>索引超出范围会报错</p><p><strong>List of list</strong></p><p>list可以装入list从而得到多维数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; let b = [[1,2,3,4],[5,3,3,3],[1,2,2,3,4],[1,2,3]]</span><br><span class="line">ghci&gt; b</span><br><span class="line">[[1,2,3,4],[5,3,3,3],[1,2,2,3,4],[1,2,3]]</span><br><span class="line">ghci&gt; b ++ [[1,1,1,1]]</span><br><span class="line">[[1,2,3,4],[5,3,3,3],[1,2,2,3,4],[1,2,3],[1,1,1,1]]</span><br><span class="line">ghci&gt; it !! 2</span><br><span class="line">[1,2,2,3,4]</span><br><span class="line">ghci&gt; [6,6,6]:b</span><br><span class="line">[[6,6,6],[1,2,3,4],[5,3,3,3],[1,2,2,3,4],[1,2,3]]</span><br><span class="line">ghci&gt; b !! 3</span><br><span class="line">[1,2,3]</span><br></pre></td></tr></table></figure><p><code>it</code>代指上一次的运算结果(仅ghci中有效)</p><p>List 中的 List 可以是不同长度，但必须得是相同的类型。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; [&quot;adsf&quot;,&quot;123&quot;]</span><br><span class="line">[&quot;adsf&quot;,&quot;123&quot;]</span><br><span class="line">ghci&gt; [[&quot;adsf&quot;],[&quot;123&quot;]]</span><br><span class="line">[[&quot;adsf&quot;],[&quot;123&quot;]]</span><br><span class="line">ghci&gt; [[&quot;adsf&quot;],[&quot;123&quot;],[213]]</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:73:20: error:</span><br><span class="line">    ? No instance for (Num [Char]) arising from the literal ‘213’</span><br><span class="line">    ? In the expression: 213</span><br><span class="line">      In the expression: [213]</span><br><span class="line">      In the expression: [[&quot;adsf&quot;], [&quot;123&quot;], [213]]</span><br></pre></td></tr></table></figure></p><p><strong>比较list</strong></p><p>当 List 内装有可比较的元素时，使用 <code>&gt;</code> 和 <code>&gt;=</code> 可以比较 List 的大小。它会先比较第一个元素，若它们的值相等，则比较下一个，以此类推。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; [3,2,1] &gt; [2,1,0]  </span><br><span class="line">True</span><br><span class="line">ghci&gt; [&quot;abcd&quot;] &lt;= [&quot;xyz&quot;]</span><br><span class="line">True</span><br><span class="line">ghci&gt; &quot;abcd&quot; &lt;= [&apos;a&apos;]</span><br><span class="line">False</span><br><span class="line">ghci&gt; &quot;ab&quot; == [&apos;a&apos;,&apos;b&apos;]</span><br><span class="line">True</span><br><span class="line">ghci&gt; [[&apos;a&apos;]] == [&apos;a&apos;]</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:78:13: error:</span><br><span class="line">    ? Couldn&apos;t match expected type ‘[Char]’ with actual type ‘Char’</span><br><span class="line">    ? In the expression: &apos;a&apos;</span><br><span class="line">      In the second argument of ‘(==)’, namely ‘[&apos;a&apos;]’</span><br><span class="line">      In the expression: [[&apos;a&apos;]] == [&apos;a&apos;]</span><br><span class="line">      ghci&gt; [&quot;abcd&quot;] &lt;= [&apos;a&apos;]</span><br><span class="line"></span><br><span class="line">      &lt;interactive&gt;:76:14: error:</span><br><span class="line">          ? Couldn&apos;t match expected type ‘[Char]’ with actual type ‘Char’</span><br><span class="line">          ? In the expression: &apos;a&apos;</span><br><span class="line">            In the second argument of ‘(&lt;=)’, namely ‘[&apos;a&apos;]’</span><br><span class="line">            In the expression: [&quot;abcd&quot;] &lt;= [&apos;a&apos;]</span><br></pre></td></tr></table></figure><p><strong>List 常用函数</strong></p><p><img src="http://s3.amazonaws.com/lyah/listmonster.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt; head [5,4,3,2,1]</span><br><span class="line">5</span><br><span class="line">ghci&gt; tail [5,4,3,2,1]  </span><br><span class="line">[4,3,2,1]</span><br><span class="line">ghci&gt; last [5,4,3,2,1]  </span><br><span class="line">1</span><br><span class="line">ghci&gt; init [5,4,3,2,1]</span><br><span class="line">[5,4,3,2]</span><br></pre></td></tr></table></figure><h2 id="Texas-ranges"><a href="#Texas-ranges" class="headerlink" title="Texas ranges"></a>Texas ranges</h2><h2 id="I’m-a-list-comprehension"><a href="#I’m-a-list-comprehension" class="headerlink" title="I’m a list comprehension"></a>I’m a list comprehension</h2><h2 id="Tuples"><a href="#Tuples" class="headerlink" title="Tuples"></a>Tuples</h2><hr><p>[2017-07-08 13:06:01]<br>测试 haskell 高亮以及 <code>pandoc</code> <code>lhs</code>转<code>md</code>效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 写成这样会显示`lhs`中的`&gt;`。 ↓↓↓↓↓</span><br><span class="line">pandoc -f markdown+lhs -t html+lhs -o 1.html &apos;.\10.2-Identity Monad.lhs&apos;</span><br><span class="line"></span><br><span class="line">pandoc -f markdown+lhs -t markdown -o 1.md &apos;.\10.2-Identity Monad.lhs&apos;</span><br><span class="line">pandoc -f markdown -t html -o 2.html 1.md</span><br></pre></td></tr></table></figure><h2 id="10-2-Identity-Monad"><a href="#10-2-Identity-Monad" class="headerlink" title="10.2 Identity Monad"></a>10.2 Identity Monad</h2><p>为避免与 <code>Prelude</code>及<code>GHC.Base</code>里面预定义的函数冲突，加上以下几行</p><p>不自动导入 <code>Prelude</code></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#123;-# LANGUAGE NoImplicitPrelude #-&#125;</span></span><br><span class="line"><span class="comment">-- 避开冲突</span></span><br><span class="line"><span class="keyword">import</span> Prelude <span class="keyword">hiding</span> ((&gt;&gt;=), Monad, Identity)</span><br></pre></td></tr></table></figure><h3 id="10-2-1-最基本的Monad定义"><a href="#10-2-1-最基本的Monad定义" class="headerlink" title="10.2.1 最基本的Monad定义"></a>10.2.1 最基本的Monad定义</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- typeclass Monad</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="type">Monad</span> m <span class="keyword">where</span></span></span><br><span class="line">  return :: a -&gt; m a</span><br><span class="line"></span><br><span class="line">  (&gt;&gt;=)  :: m a -&gt; (a -&gt; m b) -&gt; m b</span><br><span class="line">  (&gt;&gt;) :: m a -&gt; m b -&gt; m b</span><br><span class="line">  m &gt;&gt; k = m &gt;&gt;= \_-&gt; k</span><br><span class="line"></span><br><span class="line">  fail :: <span class="type">String</span> -&gt; m a</span><br><span class="line">  fail s = error s</span><br></pre></td></tr></table></figure><p>要实现Monad类型类，需要实现<code>return</code>函数和<code>(&gt;&gt;=)</code>运算符。</p><ul><li><code>return</code>函数将一个值<code>a</code>映射为<code>Monad a</code></li><li><code>(&gt;&gt;=)</code>运算符将连续的、从左至右的运算串联起来</li></ul><h3 id="10-2-2-Monad-Identity"><a href="#10-2-2-Monad-Identity" class="headerlink" title="10.2.2 Monad.Identity"></a>10.2.2 Monad.Identity</h3><p>下面定义一个最简单的Monad——Identity Monad(单位元Monad)</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Identity Monad</span></span><br><span class="line"><span class="class"><span class="keyword">newtype</span> <span class="type">Identity</span> a = <span class="type">Identity</span> &#123; <span class="title">runIdentity</span> :: <span class="title">a</span> &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">instance</span> <span class="type">Monad</span> <span class="type">Identity</span> <span class="keyword">where</span></span></span><br><span class="line">  <span class="comment">-- return a = Identity a</span></span><br><span class="line">  return = <span class="type">Identity</span></span><br><span class="line">  (<span class="type">Identity</span> m) &gt;&gt;= k = k m</span><br></pre></td></tr></table></figure><h3 id="10-2-3-gt"><a href="#10-2-3-gt" class="headerlink" title="10.2.3 (|&gt;)"></a>10.2.3 (|&gt;)</h3><p>在讨论高阶函数时，为了把参数写在函数名的前面，定义了一个中缀运算符<code>(|&gt;)</code></p><figure class="highlight plain"><figcaption><span>.literate .haskell&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 中缀运算符</span><br><span class="line">(|&gt;) = flip ($)</span><br></pre></td></tr></table></figure><hr><p>目前看高亮效果一般，大概是主题配色的锅;</p><p>pandoc转化有点小问题，代码段头会多出一段，需要手工替换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;.sourceCode .literate .haskell&#125;</span><br></pre></td></tr></table></figure></p><p>另外建议使用<code>=</code>代替<code>#</code>标识标题，<code>#</code>会被转义为<code>\#</code>，需要手工替换</p><hr><p>[2017-07-05 13:22:19]</p><p>暑假借了本书看</p><ul><li><a href="https://book.douban.com/subject/19930393/" target="_blank" rel="noopener">老码识途 (豆瓣)</a></li></ul><h2 id="1-1-1-机器码"><a href="#1-1-1-机器码" class="headerlink" title="1.1.1 机器码"></a>1.1.1 机器码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> gi;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gi = <span class="number">12</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用vs2015 在赋值语句处下断点，反汇编可得 (关闭<code>显示符号名</code>，打开<code>显示字节码</code>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    gi = 12;</span><br><span class="line">001B168E C7 05 44 81 1B 00 0C 00 00 00 mov         dword ptr ds:[001B8144h],0Ch  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观察机器码，猜测可分为三块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C7 05 | 44 81 1B 00 | 0C 00 00 00</span><br><span class="line">mov   | 0x001B8144  | 0x0000000C (12)</span><br></pre></td></tr></table></figure><p>说明整数在计算机中按逆序储存。更改<code>gi</code>的值可进一步确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gi = 0x12345678;</span><br><span class="line">013C168E C7 05 44 81 3C 01 78 56 34 12 mov         dword ptr ds:[013C8144h],12345678h  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">C7 05 | 44 81 3C 01 | 78 56 34 12</span><br><span class="line">mov   |  013C8144h  | 12345678h</span><br></pre></td></tr></table></figure><blockquote><p><strong>大端序</strong>：按书写顺序存放。<br> PowerPC, SUN’ SPARC 等为大端序</p><p><strong>小端序</strong>：整数逻辑上的最低字节放在内存的最低地址，依次存放。<br> Intel x86 CPU 是小端序</p></blockquote><hr><p>[2017-07-02 09:54:43]</p><ul><li>Atom Haskell Tools</li></ul><p>安装atom上的haskell套件时出错了</p><p>参照教程</p><ul><li><a href="http://www.jianshu.com/p/605042ea7c16" target="_blank" rel="noopener">打造令人愉悦的 Haskell 开发环境 - 简书</a></li></ul><p>以前也没安装成功，这次先装依赖<code>stack install ghc-mod</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Failed to install old-time-1.1.0.3</span><br><span class="line">Build log ( C:\Users\inkyd\AppData\Roaming\stack\logs\old-time-1.1.0.3.log ):</span><br><span class="line">Configuring old-time-1.1.0.3...</span><br><span class="line">configure: WARNING: unrecognized options: --with-compiler</span><br><span class="line">checking for gcc... F:\env\HASKEL~1\8080A1~1.2-A\mingw\bin\gcc.exe</span><br><span class="line">checking whether the C compiler works... no</span><br><span class="line">configure: error: in `/cygdrive/c/Users/inkyd/AppData/Local/Temp/stack-tmp-6820/old-time-1.1.0.3&apos;:</span><br><span class="line">configure: error: C compiler cannot create executables</span><br><span class="line">See `config.log&apos; for more details</span><br><span class="line">stack: Leaving directory &apos;C:\Users\inkyd\AppData\Local\Temp\stack-tmp-6820\old-time-1.1.0.3&apos;</span><br><span class="line"></span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">stack: Error: some packages failed to install:</span><br><span class="line">cpphs-1.20.8 depends on old-time-1.1.0.3 which failed to install.</span><br><span class="line">ghc-mod-5.8.0.0 depends on old-time-1.1.0.3 which failed to install.</span><br><span class="line">haskell-src-exts-1.19.1 depends on old-time-1.1.0.3 which failed to install.</span><br><span class="line">hlint-2.0.9 depends on old-time-1.1.0.3 which failed to install.</span><br><span class="line">old-time-1.1.0.3 failed during the configure step. The exception was:</span><br><span class="line">ExitFailure 77</span><br></pre></td></tr></table></figure><p>找到一个issue</p><ul><li><a href="https://github.com/haskell/old-time/issues/5" target="_blank" rel="noopener">old-time fails to detect the c compiler on Windows · Issue #5 · haskell/old-time</a></li></ul><p>放弃</p><hr><p>[2017-06-29 22:52:43]</p><ul><li><a href="https://opensource.guide/how-to-contribute/" target="_blank" rel="noopener">How to Contribute to Open Source | Open Source Guides</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @Week16</title>
      <link href="/Memo-List-Week16/"/>
      <url>/Memo-List-Week16/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>[2017-06-05 16:23:29]</p><p>某群的问题：</p><blockquote><p>Haskell prelude 库中带有 <code>a-&gt;a</code> 类型签名的函数？</p></blockquote><p>ref:</p><ul><li><a href="http://hackage.haskell.org/" target="_blank" rel="noopener">Introduction | Hackage</a></li><li><a href="http://teaching.csse.uwa.edu.au/units/CITS3211/lectureNotes/tourofprelude.html" target="_blank" rel="noopener">A Tour of the Haskell Prelude</a></li></ul><p>(伪)标答：</p><p><code>id :: a -&gt; a</code></p><p>完整答案：<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 无限定</span></span><br><span class="line"><span class="title">id</span> :: a -&gt; a</span><br><span class="line"></span><br><span class="line"><span class="comment">-- class Num</span></span><br><span class="line"><span class="title">abs</span> :: <span class="type">Num</span> a =&gt; a -&gt; a</span><br><span class="line"><span class="title">negate</span> :: <span class="type">Num</span> a =&gt; a -&gt; a</span><br><span class="line"><span class="title">signum</span> :: <span class="type">Num</span> a =&gt; a -&gt; a</span><br><span class="line"></span><br><span class="line"><span class="title">recip</span> :: <span class="type">Fractional</span> a =&gt; a -&gt; a</span><br><span class="line"></span><br><span class="line"><span class="comment">-- class Fractional</span></span><br><span class="line"><span class="title">exp</span>, log, sqrt :: <span class="type">Floating</span> a =&gt; a -&gt; a</span><br><span class="line"><span class="comment">--- 一些三角函数</span></span><br><span class="line"><span class="title">sin</span>, cos, tan :: <span class="type">Floating</span> a =&gt; a -&gt; a</span><br><span class="line"><span class="title">asin</span>, acos, atan :: <span class="type">Floating</span> a =&gt; a -&gt; a</span><br><span class="line"><span class="title">sinh</span>, cosh, tanh :: <span class="type">Floating</span> a =&gt; a -&gt; a</span><br><span class="line"><span class="title">asinh</span>, acosh, atanh :: <span class="type">Floating</span> a =&gt; a -&gt; a</span><br><span class="line"></span><br><span class="line"><span class="comment">-- class (RealFrac a, Floating a) =&gt; RealFloat a where</span></span><br><span class="line"><span class="title">significand</span> ::　<span class="type">RealFloat</span>　a =&gt; a -&gt; a</span><br><span class="line"></span><br><span class="line"><span class="comment">-- class Enum</span></span><br><span class="line"><span class="title">pred</span> :: <span class="type">Enum</span> a =&gt; a -&gt; a</span><br><span class="line"><span class="title">succ</span> :: <span class="type">Enum</span> a =&gt; a -&gt; a</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @Week15</title>
      <link href="/Memo-List-Week15/"/>
      <url>/Memo-List-Week15/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>[2017-06-02 22:20:48]</p><h1 id="Haskell-可选参数-optional-arguments"><a href="#Haskell-可选参数-optional-arguments" class="headerlink" title="Haskell 可选参数(optional arguments)"></a>Haskell 可选参数(optional arguments)</h1><ol><li><a href="https://stackoverflow.com/questions/7781096/is-there-a-better-way-to-have-optional-arguments-in-haskell" target="_blank" rel="noopener">Is there a better way to have optional arguments in Haskell?</a></li><li><a href="https://stackoverflow.com/questions/2790860/optional-arguments-in-haskell" target="_blank" rel="noopener">optional arguments in haskell</a></li></ol><p>1 中的第一个答案可以用，后面的跑不起来</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#123;-# LANGUAGE FlexibleContexts #-&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="title">multiProduct</span> req1 opt1 opt2 opt3 = req1 * opt1' * opt2' * opt3'</span><br><span class="line">  <span class="keyword">where</span> opt1' = fromJust (fromMaybe <span class="number">10</span> opt1)</span><br><span class="line">        opt2' = fromJust (fromMaybe <span class="number">20</span> opt2)</span><br><span class="line">        opt3' = fromJust (fromMaybe <span class="number">30</span> opt3)</span><br><span class="line"></span><br><span class="line"><span class="title">multiProduct'</span> req1 opt1 opt2 opt3 = req1 * opt1' * opt2' * opt3'</span><br><span class="line">  <span class="keyword">where</span> opt1' = <span class="keyword">if</span> isJust opt1 <span class="keyword">then</span> (fromJust opt1) <span class="keyword">else</span> <span class="number">10</span></span><br><span class="line">        opt2' = <span class="keyword">if</span> isJust opt2 <span class="keyword">then</span> (fromJust opt2) <span class="keyword">else</span> <span class="number">20</span></span><br><span class="line">        opt3' = <span class="keyword">if</span> isJust opt3 <span class="keyword">then</span> (fromJust opt3) <span class="keyword">else</span> <span class="number">30</span></span><br></pre></td></tr></table></figure><p><strong>Error</strong><br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">ghci</span>&gt; multiProduct <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:<span class="number">215</span>:<span class="number">1</span>: error:</span><br><span class="line">    ? <span class="type">Non</span> <span class="class"><span class="keyword">type</span>-variable argument in the constraint: <span class="type">Num</span> (<span class="type">Maybe</span> <span class="title">a</span>)</span></span><br><span class="line">      (<span class="type">Use</span> <span class="type">FlexibleContexts</span> to permit this)</span><br><span class="line">    ? <span class="type">When</span> checking the inferred <span class="class"><span class="keyword">type</span></span></span><br><span class="line">        it :: <span class="keyword">forall</span> a.</span><br><span class="line">              (<span class="type">Num</span> (<span class="type">Maybe</span> a), <span class="type">Num</span> a) =&gt;</span><br><span class="line">              <span class="type">Maybe</span> (<span class="type">Maybe</span> a) -&gt; <span class="type">Maybe</span> (<span class="type">Maybe</span> a) -&gt; <span class="type">Maybe</span> (<span class="type">Maybe</span> a) -&gt; a</span><br><span class="line"><span class="title">ghci</span>&gt; multiProduct' <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:<span class="number">216</span>:<span class="number">1</span>: error:</span><br><span class="line">    ? <span class="type">No</span> <span class="keyword">instance</span> for (<span class="type">Show</span> (<span class="type">Maybe</span> a0 -&gt; <span class="type">Maybe</span> a0 -&gt; <span class="type">Maybe</span> a0 -&gt; a0))</span><br><span class="line">        arising from a use <span class="keyword">of</span> ‘print’</span><br><span class="line">        (maybe you haven't applied a function to enough arguments?)</span><br><span class="line">    ? <span class="type">In</span> a stmt <span class="keyword">of</span> an interactive <span class="type">GHCi</span> command: print it</span><br></pre></td></tr></table></figure></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul><li><a href="https://www.haskell.org/hoogle/?hoogle=Maybe+Int+-%3E+Int" target="_blank" rel="noopener">Maybe a -&gt; a</a></li></ul><p>[2017-05-29 11:12:58]</p><ul><li><a href="http://www.cse.unsw.edu.au/~en1000/haskell/inbuilt.html" target="_blank" rel="noopener">Useful Haskell functions</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @Week14</title>
      <link href="/Memo-List-Week14/"/>
      <url>/Memo-List-Week14/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>[2017-05-27 12:38:29]</p><ul><li><a href="https://stackoverflow.com/questions/8879391/how-do-i-convert-string-into-list-of-integers-in-haskell" target="_blank" rel="noopener">How do i convert String into list of integers in Haskell</a></li></ul><p>将字符串型数字转成[int]</p><p><strong>Integer -&gt; [Int]</strong><br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">toDigits</span> :: <span class="type">Integer</span> -&gt; [<span class="type">Int</span>]</span><br><span class="line"><span class="title">toDigits</span> = map (fromIntegral . digitToInt) . show</span><br></pre></td></tr></table></figure></p><ul><li><a href="http://www.tuicool.com/articles/qayuuez" target="_blank" rel="noopener">(译) Haskell 中随机数的使用</a></li><li><a href="https://stackoverflow.com/questions/22423180/how-to-generate-random-array-in-haskell" target="_blank" rel="noopener">How to generate random array in Haskell?</a></li></ul><p>获取随机数/随机数的list<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">randint</span> :: <span class="type">IO</span> <span class="type">Int</span></span><br><span class="line"><span class="title">randint</span> = randomRIO (<span class="number">1</span>,<span class="number">55</span>) <span class="comment">-- 生成int的范围</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获得一个长为 10 的list</span></span><br><span class="line"><span class="title">rint</span> &lt;- sequence (replicate <span class="number">10</span> randint)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title">randomList</span> :: <span class="type">IO</span> [<span class="type">Int</span>] <span class="comment">-- 返回一个 generater</span></span><br><span class="line"><span class="title">randomList</span> = getStdGen &gt;&gt;= return . randomRs (<span class="number">1</span>,<span class="number">55</span>)</span><br></pre></td></tr></table></figure></p><h1 id="Ruby-Random-String"><a href="#Ruby-Random-String" class="headerlink" title="Ruby Random String"></a>Ruby Random String</h1><ul><li><a href="https://stackoverflow.com/questions/88311/how-to-generate-a-random-string-in-ruby" target="_blank" rel="noopener">How to generate a random string in Ruby</a></li><li><a href="https://stackoverflow.com/questions/5966910/generate-unique-random-string-with-letters-and-numbers-in-lower-case" target="_blank" rel="noopener">Generate Unique Random String With Letters And Numbers In Lower Case</a></li><li><a href="https://stackoverflow.com/questions/24944083/how-do-i-populate-an-array-with-random-numbers" target="_blank" rel="noopener">How do I populate an array with random numbers?</a></li><li><a href="https://stackoverflow.com/questions/3482149/how-do-i-pick-randomly-from-an-array" target="_blank" rel="noopener">How do I pick randomly from an array?</a></li></ul><p>以下的<code>shuffle</code>均可改成<code>shuffle(random: Random.new)</code>以提高随机性</p><p>生成<code>len</code>长度的大小写字母<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">([*(<span class="string">'a'</span>..<span class="string">'z'</span>),*(<span class="string">'A'</span>..<span class="string">'Z'</span>)]*len).shuffle[<span class="number">0</span>,len].join</span><br></pre></td></tr></table></figure></p><p>生成<code>len</code>长度的小写字母+数字<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">36</span>**(len-<span class="number">1</span>) + rand(<span class="number">36</span>**len - <span class="number">36</span>**(len-<span class="number">1</span>))).to_s(<span class="number">36</span>)</span><br></pre></td></tr></table></figure></p><p>生成<code>len ± 1</code>长度的小写字母+数字<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rand(<span class="number">36</span>**len).to_s(<span class="number">36</span>)</span><br></pre></td></tr></table></figure></p><p>生成 随机长度 随机内容的 <code>[[_RandomString], [_RandomString], ...]</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_test_case</span> <span class="comment"># for "Sort array by string length" Ruby Translation —— codewars</span></span></span><br><span class="line">  <span class="comment">#prng = Random.new  # 使用新得随机数生成器</span></span><br><span class="line">  arr = [*(<span class="number">1</span>..<span class="number">10</span>)].</span><br><span class="line">    shuffle[<span class="number">0</span>, rand(<span class="number">1</span>..<span class="number">100</span>)]. <span class="comment"># arr.length</span></span><br><span class="line">    sort.</span><br><span class="line">    <span class="comment">#map&#123;|len| ([*('a'..'z'),*('A'..'Z')]*len).shuffle[0,len].join&#125;</span></span><br><span class="line">    map&#123;<span class="params">|len|</span> (<span class="number">36</span>**(len-<span class="number">1</span>) + rand(<span class="number">36</span>**len - <span class="number">36</span>**(len-<span class="number">1</span>))).to_s(<span class="number">36</span>)&#125;</span><br><span class="line">  [arr.shuffle(<span class="symbol">random:</span> Random.new), arr]</span><br><span class="line">  <span class="comment"># arr 为按长度排序的 数组</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>[2017-05-23 12:03:29]</p><ul><li><a href="http://sparkandshine.net/mit-mathematical-formalism/" target="_blank" rel="noopener">[转]MIT牛人解说数学体系</a></li></ul><p>[2017-05-22 19:25:21]</p><h1 id="Real-World-Haskell-中文版"><a href="#Real-World-Haskell-中文版" class="headerlink" title="Real World Haskell 中文版"></a><a href="http://cnhaskell.com/chp/1.html" target="_blank" rel="noopener">Real World Haskell 中文版</a></h1><p><strong>修改提示符</strong></p><p>Note: 提示符并不需要引号包起来。[ghci ver 8.0.1]<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Prelude</span>&gt; :set prompt <span class="string">"ghci&gt;"</span></span><br><span class="line"><span class="string">"ghci&gt;"</span> :set prompt ghci&gt;</span><br><span class="line"><span class="title">ghci</span>&gt;</span><br></pre></td></tr></table></figure></p><h2 id="基本算术运算"><a href="#基本算术运算" class="headerlink" title="基本算术运算"></a>基本算术运算</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt;2+2</span><br><span class="line">4</span><br><span class="line">ghci&gt;2/2</span><br><span class="line">1.0</span><br><span class="line">ghci&gt;7.0/2</span><br><span class="line">3.5</span><br><span class="line">ghci&gt;331*2</span><br><span class="line">662</span><br><span class="line">ghci&gt;123*0.5</span><br><span class="line">61.5</span><br><span class="line">ghci&gt;123*1.0</span><br><span class="line">123.0</span><br></pre></td></tr></table></figure><p><strong>前缀表达式</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt;(+) 2 2</span><br><span class="line">4</span><br><span class="line">ghci&gt;(/) 10 5</span><br><span class="line">2.0</span><br></pre></td></tr></table></figure></p><p><strong>幂</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt;2^3</span><br><span class="line">8</span><br><span class="line">ghci&gt;2**3</span><br><span class="line">8.0</span><br></pre></td></tr></table></figure></p><p><strong>负数</strong></p><p>负数需要用括号括起来。单独出现时除外，此时<code>-</code>为一元运算符。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ghci&gt;-1</span><br><span class="line">-1</span><br><span class="line">ghci&gt;2* -1</span><br><span class="line"></span><br><span class="line">&lt;interactive&gt;:18:1: error:</span><br><span class="line">    Precedence parsing error</span><br><span class="line">        cannot mix ‘*’ [infixl 7] and prefix `-&apos; [infixl 6] in the same infix expression</span><br><span class="line">ghci&gt;2* (-1)</span><br><span class="line">-2</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @Week13</title>
      <link href="/Memo-List-Week13/"/>
      <url>/Memo-List-Week13/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>[2017-05-18 19:15:40]</p><h2 id="R-lang-data-frame-with-0-columns-and-0-rows-error"><a href="#R-lang-data-frame-with-0-columns-and-0-rows-error" class="headerlink" title="R-lang data frame with 0 columns and 0 rows error"></a>R-lang <code>data frame with 0 columns and 0 rows error</code></h2>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Matlab memo</title>
      <link href="/Matlab-memo/"/>
      <url>/Matlab-memo/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><strong>向量值函数~多元函数转换</strong></p><p>2元函数画图要用meshgrid打网格，得到两个矩阵X，Y，然后mesh画图。</p><p>是直接的2元函数就很好办，但是有时候会碰到多元向量值函数，一般只有1个参数,是向量，每一列是一个参数。像这种函数就不能打网格画图。</p><p>Ex：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VectorFunc   = @(x, ~) x(:,1).^2 + x(:,2).^2 ;      %向量输入，D=2</span><br><span class="line">VararginFunc = @(x, y) x.^2 + y.^2;                 %矩阵输入</span><br></pre></td></tr></table></figure></p><p><strong>keyword</strong>: 向量值函数 多元函数 reshape</p><p>Ans：</p><p>解决方案用reshape<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br><span class="line">VectorFunc   = @(x, ~) x(:,<span class="number">1</span>).^<span class="number">2</span> + x(:,<span class="number">2</span>).^<span class="number">2</span> ;      <span class="comment">%向量输入，D=2</span></span><br><span class="line">VararginFunc = @(x, y) x.^<span class="number">2</span> + y.^<span class="number">2</span>;                 <span class="comment">%矩阵输入</span></span><br><span class="line">Fitness = VectorFunc;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 向量函数画图</span></span><br><span class="line">[mesh_Plot_X, mesh_Plot_Y] = <span class="built_in">meshgrid</span>(<span class="number">1</span>:<span class="number">10</span>, <span class="number">1</span>:<span class="number">10</span>); <span class="comment">% 打网格</span></span><br><span class="line">[tmp_len_y, tmp_len_x] = <span class="built_in">size</span>(mesh_Plot_X);        <span class="comment">% 获取矩阵维度         </span></span><br><span class="line">tmp_XX = [<span class="built_in">reshape</span>(mesh_Plot_X, [], <span class="number">1</span>), ...         <span class="comment">% 矩阵转向量</span></span><br><span class="line">          <span class="built_in">reshape</span>(mesh_Plot_Y, [], <span class="number">1</span>)];</span><br><span class="line">fit=Fitness(tmp_XX);        <span class="comment">% 计算</span></span><br><span class="line">Vector_Z = <span class="built_in">reshape</span>(Fitness(tmp_XX),tmp_len_y,tmp_len_x); <span class="comment">% 结果转为矩阵</span></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>),mesh(mesh_Plot_X, mesh_Plot_Y, Vector_Z);title(<span class="string">'VectorFunc'</span>);</span><br><span class="line"></span><br><span class="line">Varargin_Z = VararginFunc(mesh_Plot_X, mesh_Plot_Y);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>),mesh(mesh_Plot_X, mesh_Plot_Y, Varargin_Z);title(<span class="string">'VararginFunc'</span>);</span><br></pre></td></tr></table></figure></p><img src="/Matlab-memo/Matlab-memo-VectorFunc.png"><hr><ul><li><a href="https://cn.mathworks.com/matlabcentral/answers/165821-how-do-i-plot-the-contour-of-a-surface-at-a-specific-height" target="_blank" rel="noopener">How do I plot the contour of a surface at a specific height?</a></li></ul><p><strong>keyword</strong>: contour3/等高线</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br><span class="line">z=peaks;</span><br><span class="line">surf(peaks)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">contour3(z, ...</span><br><span class="line">         <span class="string">'LevelList'</span>,<span class="number">2</span>, ...</span><br><span class="line">         <span class="string">'LineWidth'</span>,<span class="number">3</span>, ...</span><br><span class="line">         <span class="string">'Color'</span>,<span class="string">'red'</span>)</span><br></pre></td></tr></table></figure><img src="/Matlab-memo/Matlab-memo-contour-specific_height.png"><hr><ul><li><a href="http://stackoverflow.com/questions/8054966/matlab-how-to-change-contourf-plots-location-on-z-axis" target="_blank" rel="noopener">Matlab how to change contourf plot’s location on z axis</a></li><li><a href="http://stackoverflow.com/questions/24621439/plot-multiple-2d-contour-plots-in-one-3d-figure-matlab/24624311#24624311" target="_blank" rel="noopener">plot multiple 2d contour plots in one 3d figure [Matlab]</a></li><li><a href="https://www.zhihu.com/question/41687148" target="_blank" rel="noopener">matlab contourf函数 怎么加一维高度数据？</a></li></ul><p>ASK: 怎样移动等高线的位置？</p><p><strong>keyword</strong>: surfc  contour/等高线</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Z = peaks;</span><br><span class="line">surf(Z), <span class="built_in">hold</span> on</span><br><span class="line">[~,h] = contourf(Z);</span><br><span class="line">h.ContourZLevel = <span class="number">-10</span>;</span><br></pre></td></tr></table></figure><img src="/Matlab-memo/Matlab-memo-contourZlevel.png" title="效果"><p>[2017-05-07]</p><hr><ul><li><a href="http://stackoverflow.com/questions/42132955/matlab-how-to-save-animated-plot-to-a-gif" target="_blank" rel="noopener">Matlab: how to save animated plot to a gif</a></li><li><a href="https://cn.mathworks.com/matlabcentral/answers/94495-how-can-i-create-animated-gif-images-in-matlab" target="_blank" rel="noopener">How can I create animated GIF images in MATLAB ?</a></li></ul><p><strong>keyword</strong>: Matlab GIF 动态图</p><p>Ans：<br><figure class="highlight matlab"><figcaption><span>GIF_example.m</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">clear;</span><br><span class="line">x = <span class="number">0</span>:<span class="number">0.01</span>:<span class="number">1</span>;</span><br><span class="line">n = <span class="number">1</span>:<span class="number">0.1</span>:<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">nImages = <span class="built_in">length</span>(n);</span><br><span class="line">filename = <span class="string">'GIF_testAnimated.gif'</span>; <span class="comment">% 指定GIf文件名</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> idx = <span class="number">1</span>:nImages</span><br><span class="line">    y = x.^n(idx);</span><br><span class="line">    <span class="built_in">plot</span>(x,y,<span class="string">'LineWidth'</span>,<span class="number">3</span>);</span><br><span class="line">    Formated_title = sprintf(<span class="string">'y = x^n,  n = %-2.1f'</span>, n(idx) ); <span class="comment">% 标题格式化</span></span><br><span class="line">    title(Formated_title);</span><br><span class="line">    drawnow;</span><br><span class="line">    </span><br><span class="line">    frame = getframe(<span class="number">1</span>);</span><br><span class="line">    img = frame2im(frame);</span><br><span class="line">    </span><br><span class="line">    [A,map] = rgb2ind(img,<span class="number">256</span>);</span><br><span class="line">    <span class="keyword">if</span> idx == <span class="number">1</span></span><br><span class="line">        imwrite(A,map,filename,<span class="string">'gif'</span>,<span class="string">'LoopCount'</span>,Inf,<span class="string">'DelayTime'</span>,<span class="number">0.1</span>); <span class="comment">% GIF 时间间隔可调</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        imwrite(A,map,filename,<span class="string">'gif'</span>,<span class="string">'WriteMode'</span>,<span class="string">'append'</span>,<span class="string">'DelayTime'</span>,<span class="number">0.1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">imwrite(A,map,filename,<span class="string">'gif'</span>,<span class="string">'WriteMode'</span>,<span class="string">'append'</span>,<span class="string">'DelayTime'</span>,<span class="number">2</span>); <span class="comment">% 最后一帧 延时</span></span><br></pre></td></tr></table></figure></p><img src="/Matlab-memo/Matlab-memo-GIF_testAnimated.gif" title="gif"><hr><ul><li><a href="http://www.ilovematlab.cn/thread-29957-1-1.html" target="_blank" rel="noopener">Matlab中怎样快速将 行向量 复制m次 成为一个矩阵</a></li></ul><p><strong>keyword</strong>: matlab 向量 变 矩阵</p><p>Eg:<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A=[ <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ];</span><br><span class="line"></span><br><span class="line">B=[</span><br><span class="line">  <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ;</span><br><span class="line">  <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ;</span><br><span class="line">  <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ;</span><br><span class="line">  <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ];</span><br></pre></td></tr></table></figure></p><p>Ans:</p><ol><li><code>repmat(A, TIMES, 1)</code></li><li><code>B=A(ones(TIMES, 1), :)</code></li></ol><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; B = <span class="built_in">repmat</span>(A, <span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">B =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B=A(<span class="built_in">ones</span>(<span class="number">4</span>,<span class="number">1</span>),:)</span><br><span class="line">B =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br></pre></td></tr></table></figure><p>[2017-05-06]</p>]]></content>
      
      
      
        <tags>
            
            <tag> memo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MIT HAKMAN</title>
      <link href="/MIT-HAKMAN/"/>
      <url>/MIT-HAKMAN/</url>
      
        <content type="html"><![CDATA[<p>MIT 人工智能实验室的 memo</p><a id="more"></a><figure class="highlight plain"><figcaption><span>Title</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">                            MASSACHUSETTS INSTITUTE OF TECHNOLOGY</span><br><span class="line"></span><br><span class="line">​                              ARTIFICIAL INTELLIGENCE LABORATORY</span><br><span class="line"></span><br><span class="line">AIM 239                                                                       February 1972</span><br></pre></td></tr></table></figure><h1 id="HAKMEM"><a href="#HAKMEM" class="headerlink" title="HAKMEM"></a>HAKMEM</h1><p>by ：</p><ul><li>M. Beeler [<a href="mailto:beeler@bbn.com" target="_blank" rel="noopener">beeler@bbn.com</a>]</li><li>R. W. Gosper [<a href="mailto:rwg@newton.macsyma.com" target="_blank" rel="noopener">rwg@newton.macsyma.com</a>]</li><li><a href="http://www.cs.arizona.edu/xkernel/www/people/rich.html" target="_blank" rel="noopener">R. Schroeppel</a> [<a href="mailto:rcs@cs.arizona.edu" target="_blank" rel="noopener">rcs@cs.arizona.edu</a>]</li></ul><p>This report describes research done at the Artificial Intelligence Laboratory of the Massachusetts Institute of Technology. Support for the Laboratory’s artificial intelligence research is provided in part by the <a href="http://www.arpa.mil/" target="_blank" rel="noopener">Advanced Research Projects Agency</a> of the Department of Defense under Office of Naval Research contract N00014-70-A-0362-0002.</p><hr><h2 id="Page-1"><a href="#Page-1" class="headerlink" title="Page 1"></a><strong>Page 1</strong></h2><p>Compiled with the hope that a record of the random things people do around here can save some duplication of effort – except for fun.</p><p>Here is some little known data which may be of interest to computer hackers. The items and examples are so sketchy that to decipher them may require more sincerity and curiosity than a non-hacker can muster. Doubtless, little of this is new, but nowadays it’s hard to tell. So we must be content to give you an insight, or save you some cycles, and to welcome further contributions of items, new or used.</p><p>The classification of items into sections is even more illogical than necessary. This is because later elaborations tend to shift perspective on many items, and this elaboration will (hopefully) continue after publication, since this text is retained in “machinable” form. We forgive in advance anyone deterred by this wretched typography.</p><p>People referred to are<br>from the A. I. Lab:</p><figure class="highlight plain"><figcaption><span>Mail List</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Marvin Minsky        [minsky@ai.mit.edu]</span><br><span class="line">Bill Gosper          [rwg@newton.macsyma.com]</span><br><span class="line">Michael Beeler       [beeler@bbn.com]</span><br><span class="line">John Roe</span><br><span class="line">Richard Stallman     [rms@ai.mit.edu]</span><br><span class="line">Jerry Freiberg</span><br><span class="line">Rich Schroeppel      [rcs@cs.arizona.edu]</span><br><span class="line">Michael Speciner     [ms@color_age.com]</span><br><span class="line">Gerald Sussman       [gjs@ai.mit.edu]</span><br><span class="line">Joe Cohen</span><br><span class="line">David Waltz</span><br><span class="line">David Silver</span><br></pre></td></tr></table></figure><p>Once at the A. I. Lab but now elsewhere:</p><figure class="highlight plain"><figcaption><span>Mail List</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Jan Kok                  William Henneman</span><br><span class="line">Rici Liknaitzky          George Mitchell</span><br><span class="line">Peter Samson             Stuart Nelson</span><br><span class="line">Roger Banks              Rollo Silver</span><br><span class="line">Mike Paterson            [Mike.Paterson@dcs.warwick.ac.uk]</span><br></pre></td></tr></table></figure><p>at <a href="http://www.digital.com/" target="_blank" rel="noopener">Digital Equipment Corporation:</a></p><figure class="highlight plain"><figcaption><span>Mail List</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Jud Leonard              [leonard@tlw.com]</span><br><span class="line">Dave Plumer              </span><br><span class="line">Ben Gurley (deceased)</span><br><span class="line">Steve Root</span><br></pre></td></tr></table></figure><p>elsewhere at M.I.T.:</p><figure class="highlight plain"><figcaption><span>Mail List</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Gene Salamin             [Gene_Salamin@cohr.com]</span><br><span class="line">PDP-1 hackers</span><br><span class="line">Eric Jensen              </span><br><span class="line">Frances Yao</span><br><span class="line">Edward Fredkin</span><br></pre></td></tr></table></figure><p>once at M.I.T., but now elsewhere:</p><figure class="highlight plain"><figcaption><span>Mail List</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Jackson Wright           Steve Brown</span><br><span class="line">Malcolm Rayfield</span><br></pre></td></tr></table></figure><p>in France:</p><figure class="highlight plain"><figcaption><span>Mail List</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Marco Schutzenberger     Henry Cohen</span><br></pre></td></tr></table></figure><p>at Computer Corporation of America: </p><figure class="highlight plain"><figcaption><span>Mail List</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bill Mann</span><br></pre></td></tr></table></figure><p>at <a href="http://www.bbn.com/" target="_blank" rel="noopener">BBN:</a></p><figure class="highlight plain"><figcaption><span>Mail List</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Robert Clements</span><br></pre></td></tr></table></figure><hr><h2 id="Page-2"><a href="#Page-2" class="headerlink" title="Page 2"></a><strong>Page 2</strong></h2><p>CAVEATS:</p><p>Some of this material is very inside – many readers will have to excuse cryptic references.</p><p>The label “PROBLEM” does not always mean exercise; if no solution is given, it means we couldn’t solve it. If you solve a problem in here, let us know.</p><p>Unless otherwise stated, all computer programs are in <a href="http://home.pipeline.com/~hbaker1/pdp-10/pdp-10.html" target="_blank" rel="noopener">PDP-6/10</a> assembly language.</p><h1 id="CONTENTS-HAKMEM-140"><a href="#CONTENTS-HAKMEM-140" class="headerlink" title="CONTENTS, HAKMEM 140"></a>CONTENTS, HAKMEM 140</h1><h2 id="P3-Geometry-Algebra-Calculus"><a href="#P3-Geometry-Algebra-Calculus" class="headerlink" title="P3 - Geometry, Algebra, Calculus"></a>P3 - <a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html" target="_blank" rel="noopener">Geometry, Algebra, Calculus</a></h2><ul><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item1" target="_blank" rel="noopener">Item 1</a> Fractional factorials</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item2" target="_blank" rel="noopener">Item 2</a> N-gon diagonals</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item3" target="_blank" rel="noopener">Item 3</a> Convergence of Newton’s square roots</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item4" target="_blank" rel="noopener">Item 4</a> Quartic discriminant</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item5" target="_blank" rel="noopener">Item 5</a> General discriminant</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item6" target="_blank" rel="noopener">Item 6</a> Symmetric functions</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item7" target="_blank" rel="noopener">Item 7</a> Symmetric functions</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item8" target="_blank" rel="noopener">Item 8</a> Cubic solution</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item9" target="_blank" rel="noopener">Item 9</a> Quartic solution</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item10" target="_blank" rel="noopener">Item 10</a> Trigonometric cubic solution</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/geometry.html#item11" target="_blank" rel="noopener">Item 11</a> Conformal mappings of N-space</li></ul><h2 id="P6-Recurrence-Relations"><a href="#P6-Recurrence-Relations" class="headerlink" title="P6 - Recurrence Relations"></a>P6 - <a href="http://home.pipeline.com/~hbaker1/hakmem/recurrence.html" target="_blank" rel="noopener">Recurrence Relations</a></h2><ul><li><a href="http://home.pipeline.com/~hbaker1/hakmem/recurrence.html#item12" target="_blank" rel="noopener">Item 12</a> Fast Fibonacci Transform</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/recurrence.html#item13" target="_blank" rel="noopener">Item 13</a> Linear Recurrence Relations</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/recurrence.html#item14" target="_blank" rel="noopener">Item 14</a> Rapid Recurrences</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/recurrence.html#item15" target="_blank" rel="noopener">Item 15</a> Chebychev polynomials</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/recurrence.html#item16" target="_blank" rel="noopener">Item 16</a> Tangents and arctangents<h2 id="P10-Boolean-Algebra"><a href="#P10-Boolean-Algebra" class="headerlink" title="P10 - Boolean Algebra"></a>P10 - <a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html" target="_blank" rel="noopener">Boolean Algebra</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html#item17" target="_blank" rel="noopener">Item 17</a> Minimize AND’s</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html#item18" target="_blank" rel="noopener">Item 18</a> Count monotonic Boolean functions</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html#item19" target="_blank" rel="noopener">Item 19</a> 2-NOT’s</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html#item20" target="_blank" rel="noopener">Item 20</a> Venn Diagrams</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html#item21" target="_blank" rel="noopener">Item 21</a> Cover character raster</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html#item22" target="_blank" rel="noopener">Item 22</a> Binary masks</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html#item23" target="_blank" rel="noopener">Item 23</a> Plus and XOR</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/boolean.html#item24" target="_blank" rel="noopener">Item 24</a> Venn Diagrams<h2 id="P12-Random-Numbers"><a href="#P12-Random-Numbers" class="headerlink" title="P12 - Random Numbers"></a>P12 - <a href="http://home.pipeline.com/~hbaker1/hakmem/random.html" target="_blank" rel="noopener">Random Numbers</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/random.html#item25" target="_blank" rel="noopener">Item 25</a> Random number generators</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/random.html#item26" target="_blank" rel="noopener">Item 26</a> Gaussian distribution</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/random.html#item27" target="_blank" rel="noopener">Item 27</a> Random unit vectors in N-space<h2 id="P13-Number-Theory-Primes-Probability"><a href="#P13-Number-Theory-Primes-Probability" class="headerlink" title="P13 - Number Theory, Primes, Probability"></a>P13 - <a href="http://home.pipeline.com/~hbaker1/hakmem/number.html" target="_blank" rel="noopener">Number Theory, Primes, Probability</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item28" target="_blank" rel="noopener">Item 28</a> Mersenne 125 is composite</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item29" target="_blank" rel="noopener">Item 29</a> Probability of largest prime factor</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item30" target="_blank" rel="noopener">Item 30</a> Twin Primes</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item31" target="_blank" rel="noopener">Item 31</a> A Ramanujan problem</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item32" target="_blank" rel="noopener">Item 32</a> Distribution of fractions</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item33" target="_blank" rel="noopener">Item 33</a> Russian doll primes</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item34" target="_blank" rel="noopener">Item 34</a> Factorial and integer square root</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item35" target="_blank" rel="noopener">Item 35</a> Arithmetic progressions</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item36" target="_blank" rel="noopener">Item 36</a> Squares with no zero digits</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item37" target="_blank" rel="noopener">Item 37</a> Numbers with each digit</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item38" target="_blank" rel="noopener">Item 38</a> Forward differences</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item39" target="_blank" rel="noopener">Item 39</a> Sequences of digits</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item40" target="_blank" rel="noopener">Item 40</a> Variance of a sum</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item41" target="_blank" rel="noopener">Item 41</a> Number of primes less than 2^18</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item42" target="_blank" rel="noopener">Item 42</a> Probability of PingPong winner</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item43" target="_blank" rel="noopener">Item 43</a> Multinomial coefficients</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item44" target="_blank" rel="noopener">Item 44</a> Recurrences for multinomial coefficients</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item45" target="_blank" rel="noopener">Item 45</a> Locus of steps</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item46" target="_blank" rel="noopener">Item 46</a> Distribution of bridge hands</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item47" target="_blank" rel="noopener">Item 47</a> Fibonacci series mod P</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item48" target="_blank" rel="noopener">Item 48</a> Visibility on 2D lattice</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item49" target="_blank" rel="noopener">Item 49</a> Magic hexagon</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item50" target="_blank" rel="noopener">Item 50</a> No magic cubes of order 4</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item51" target="_blank" rel="noopener">Item 51</a> No magic tesseract of order 5</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item52" target="_blank" rel="noopener">Item 52</a> Relatively prime probability</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item53" target="_blank" rel="noopener">Item 53</a> Lack of common divisors</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item54" target="_blank" rel="noopener">Item 54</a> Probability of even denominators</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item55" target="_blank" rel="noopener">Item 55</a> Gaussian integers</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item56" target="_blank" rel="noopener">Item 56</a> “Length” of a number</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item57" target="_blank" rel="noopener">Item 57</a> Zero digits in powers of two</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item58" target="_blank" rel="noopener">Item 58</a> Sum of cubes</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item59" target="_blank" rel="noopener">Item 59</a> Interesting square</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item60" target="_blank" rel="noopener">Item 60</a> Perfect numbers</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item61" target="_blank" rel="noopener">Item 61</a> Amicable pairs</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item62" target="_blank" rel="noopener">Item 62</a> Amicable pairs</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/number.html#item63" target="_blank" rel="noopener">Item 63</a> Joys of 239<h2 id="P25-Automata-Theory"><a href="#P25-Automata-Theory" class="headerlink" title="P25 - Automata Theory"></a>P25 - <a href="http://home.pipeline.com/~hbaker1/hakmem/automata.html" target="_blank" rel="noopener">Automata Theory</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/automata.html#item64" target="_blank" rel="noopener">Item 64</a> 2-counter machines</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/automata.html#item65" target="_blank" rel="noopener">Item 65</a> Complexity of pi(X)</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/automata.html#item66" target="_blank" rel="noopener">Item 66</a> Space-filling curves<h2 id="P26-Games"><a href="#P26-Games" class="headerlink" title="P26 - Games"></a>P26 - <a href="http://home.pipeline.com/~hbaker1/hakmem/games.html" target="_blank" rel="noopener">Games</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item67" target="_blank" rel="noopener">Item 67</a> “Poker coins”</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item68" target="_blank" rel="noopener">Item 68</a> <em>Blackout</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item69" target="_blank" rel="noopener">Item 69</a> <em>Dots</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item70" target="_blank" rel="noopener">Item 70</a> Chess problem</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item71" target="_blank" rel="noopener">Item 71</a> <em>Instant Insanity</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item72" target="_blank" rel="noopener">Item 72</a> <em>Window-dice</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item73" target="_blank" rel="noopener">Item 73</a> <em>Sim</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item74" target="_blank" rel="noopener">Item 74</a> <em>Tactix</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item75" target="_blank" rel="noopener">Item 75</a> <em>Peg solitaire</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/games.html#item76" target="_blank" rel="noopener">Item 76</a> <em>Hi-Q</em><h2 id="P30-Proposed-Computer-Programs"><a href="#P30-Proposed-Computer-Programs" class="headerlink" title="P30 - Proposed Computer Programs"></a>P30 - <a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html" target="_blank" rel="noopener">Proposed Computer Programs</a></h2><h2 id="Problem-77-Counting-polyominos"><a href="#Problem-77-Counting-polyominos" class="headerlink" title="- Problem 77 Counting polyominos"></a>- <a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item77" target="_blank" rel="noopener">Problem 77</a> Counting polyominos</h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item78" target="_blank" rel="noopener">Problem 78</a> Solve <em>minichess</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item79" target="_blank" rel="noopener">Problem 79</a> Solve the <em>tiger puzzle</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item80" target="_blank" rel="noopener">Problem 80</a> Find smallest <em>squared square</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item81" target="_blank" rel="noopener">Problem 81</a> Counting <em>magic squares</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item82" target="_blank" rel="noopener">Problem 82</a> Counting semigroups</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item83" target="_blank" rel="noopener">Problem 83</a> Counting inscribed circles</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item84" target="_blank" rel="noopener">Problem 84</a> Solve pentominos</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item85" target="_blank" rel="noopener">Problem 85</a> Geometric dissections</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item86" target="_blank" rel="noopener">Problem 86</a> Domino coverings</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item87" target="_blank" rel="noopener">Problem 87</a> Analyze <em>giveaway chess</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item88" target="_blank" rel="noopener">Problem 88</a> Analyze <em>escalation chess</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item89" target="_blank" rel="noopener">Problem 89</a> Analyze “4 pawns”</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item90" target="_blank" rel="noopener">Problem 90</a> Solve Scarne’s game <em>Teeko</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item91" target="_blank" rel="noopener">Problem 91</a> Solve “five-in-a-row”</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item92" target="_blank" rel="noopener">Problem 92</a> Solve 4x4x4 <em>Tic-Tac-Toe</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item93" target="_blank" rel="noopener">Problem 93</a> Solve <em>checkers</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item94" target="_blank" rel="noopener">Problem 94</a> Solve <em>Hex</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item95" target="_blank" rel="noopener">Problem 95</a> Solve <em>chess</em></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/proposed.html#item96" target="_blank" rel="noopener">Problem 96</a> Solve <em>Go</em><h2 id="P36-Continued-Fractions"><a href="#P36-Continued-Fractions" class="headerlink" title="P36 - Continued Fractions"></a>P36 - <a href="http://home.pipeline.com/~hbaker1/hakmem/cf.html" target="_blank" rel="noopener">Continued Fractions</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/cf.html#item97" target="_blank" rel="noopener">Item 97</a> Sqrt(2), Sqrt(3)</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/cf.html#item98" target="_blank" rel="noopener">Item 98</a> Minimum of factorial function</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/cf.html#item99" target="_blank" rel="noopener">Item 99</a> Partial quotients in arithmetic progression</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/cf.html#item100" target="_blank" rel="noopener">Item 100</a> Product</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/cf.html#item101a" target="_blank" rel="noopener">Item 101A</a> Continued fraction representation</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/cf.html#item101b" target="_blank" rel="noopener">Item 101B</a> Continued fraction arithmetic</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/cf.html#item101c" target="_blank" rel="noopener">Item 101C</a> Rationals in intervals<h2 id="P45-Group-Theory"><a href="#P45-Group-Theory" class="headerlink" title="P45 - Group Theory"></a>P45 - <a href="http://home.pipeline.com/~hbaker1/hakmem/group.html" target="_blank" rel="noopener">Group Theory</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/group.html#item102" target="_blank" rel="noopener">Item 102</a> Group-like definitions</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/group.html#item103" target="_blank" rel="noopener">Item 103</a> Hamiltonian paths</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/group.html#item104" target="_blank" rel="noopener">Item 104</a> Permuting bits on PDP-6/10<h2 id="P45-Set-Theory"><a href="#P45-Set-Theory" class="headerlink" title="P45 - Set Theory"></a>P45 - <a href="http://home.pipeline.com/~hbaker1/hakmem/group.html#item105" target="_blank" rel="noopener">Set Theory</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/group.html#item105" target="_blank" rel="noopener">Item 105</a> Closure and complement<h2 id="P46-Quaternions"><a href="#P46-Quaternions" class="headerlink" title="P46 - Quaternions"></a>P46 - <a href="http://home.pipeline.com/~hbaker1/hakmem/quaternions.html" target="_blank" rel="noopener">Quaternions</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/quaternions.html#item107" target="_blank" rel="noopener">Item 107</a> Quaternions<h2 id="P48-Polyominos-etc"><a href="#P48-Polyominos-etc" class="headerlink" title="P48 - Polyominos, etc."></a>P48 - <a href="http://home.pipeline.com/~hbaker1/hakmem/polyominos.html" target="_blank" rel="noopener">Polyominos, etc.</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/polyominos.html#item108" target="_blank" rel="noopener">Item 108</a> Counting polyominos</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/polyominos.html#item109" target="_blank" rel="noopener">Item 109</a> Tessellating the plane</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/polyominos.html#item110" target="_blank" rel="noopener">Item 110</a> Covering rectangles</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/polyominos.html#item111" target="_blank" rel="noopener">Item 111</a> Domino covering</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/polyominos.html#item112" target="_blank" rel="noopener">Item 112</a> Polyiamonds<h2 id="P51-Topology"><a href="#P51-Topology" class="headerlink" title="P51 - Topology"></a>P51 - <a href="http://home.pipeline.com/~hbaker1/hakmem/topology.html" target="_blank" rel="noopener">Topology</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/topology.html#item113" target="_blank" rel="noopener">Item 113</a></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/topology.html#item114" target="_blank" rel="noopener">Item 114</a></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/topology.html#item115" target="_blank" rel="noopener">Item 115</a><h2 id="P54-Series"><a href="#P54-Series" class="headerlink" title="P54 - Series"></a>P54 - <a href="http://home.pipeline.com/~hbaker1/hakmem/series.html" target="_blank" rel="noopener">Series</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item116" target="_blank" rel="noopener">Item 116</a></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item117" target="_blank" rel="noopener">Item 117</a> Gamma</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item118" target="_blank" rel="noopener">Item 118</a> N^N</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item119" target="_blank" rel="noopener">Item 119</a> Pi series</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item120" target="_blank" rel="noopener">Item 120</a> Accelerating series</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item121" target="_blank" rel="noopener">Item 121</a> Bernoulli polynomials</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item122" target="_blank" rel="noopener">Item 122</a> Parity number</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item123" target="_blank" rel="noopener">Item 123</a> Fourier clocks</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item124" target="_blank" rel="noopener">Item 124</a></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/series.html#item125" target="_blank" rel="noopener">Item 125</a> Radius of convergence<h2 id="P61-Flows-and-Iterated-Functions"><a href="#P61-Flows-and-Iterated-Functions" class="headerlink" title="P61 - Flows and Iterated Functions"></a>P61 - Flows and Iterated Functions</h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item126" target="_blank" rel="noopener">Item 126</a> Flow for Newton’s square root</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item127" target="_blank" rel="noopener">Item 127</a> Polynomial functions which commute</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item128" target="_blank" rel="noopener">Item 128</a> Binary/negative binary radix flow</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item129" target="_blank" rel="noopener">Item 129</a> Flow power series</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item130" target="_blank" rel="noopener">Item 130</a> Flow power series</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item131" target="_blank" rel="noopener">Item 131</a> Arithmetic geometric mean</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item132" target="_blank" rel="noopener">Item 132</a> Loop detector</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item133" target="_blank" rel="noopener">Item 133</a> 3 N + 1 problem</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item134" target="_blank" rel="noopener">Item 134</a> Numbers to English words flow</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/flows.html#item135" target="_blank" rel="noopener">Item 135</a> The “C” Curve<h2 id="P67-Pi"><a href="#P67-Pi" class="headerlink" title="P67 - Pi"></a>P67 - <a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html" target="_blank" rel="noopener">Pi</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item136" target="_blank" rel="noopener">Item 136</a> Gaussian integers</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item137" target="_blank" rel="noopener">Item 137</a> Arctangent formulas for pi</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item138" target="_blank" rel="noopener">Item 138</a> Arctangent formulas for pi</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item139" target="_blank" rel="noopener">Item 139</a> Ramanujan formulas for pi</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item140" target="_blank" rel="noopener">Item 140</a> Continued fraction for pi</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item141" target="_blank" rel="noopener">Item 141</a> Pi digits</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item142" target="_blank" rel="noopener">Item 142</a> Pi from fast trig functions</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item143" target="_blank" rel="noopener">Item 143</a> AGM for elliptic integrals, log, and pi</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/pi.html#item144" target="_blank" rel="noopener">Item 144</a> AGM for pi<h2 id="P72-Programming-Hacks"><a href="#P72-Programming-Hacks" class="headerlink" title="P72 - Programming Hacks"></a>P72 - <a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html" target="_blank" rel="noopener">Programming Hacks</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item145" target="_blank" rel="noopener">Item 145</a> Display/sound</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item146" target="_blank" rel="noopener">Item 146</a> Munching squares</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item147" target="_blank" rel="noopener">Item 147</a> Munching squares</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item148" target="_blank" rel="noopener">Item 148</a> Munching squares</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item149" target="_blank" rel="noopener">Item 149</a> Circle algorithm</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item150" target="_blank" rel="noopener">Item 150</a> Circle algorithm</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item151" target="_blank" rel="noopener">Item 151</a> Circle algorithm</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item152" target="_blank" rel="noopener">Item 152</a> Circle algorithm</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item153" target="_blank" rel="noopener">Item 153</a> 3D solids on 2D display</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item154" target="_blank" rel="noopener">Item 154</a> Twos-complement arithmetic</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item155" target="_blank" rel="noopener">Item 155</a> Subtract right from left</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item156" target="_blank" rel="noopener">Item 156</a> Make AOBJN pointer</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item157" target="_blank" rel="noopener">Item 157</a> Make AOBJN pointer</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item158" target="_blank" rel="noopener">Item 158</a> Recursive SIN/COS</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item159" target="_blank" rel="noopener">Item 159</a> Recursive SIN/COS</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item160" target="_blank" rel="noopener">Item 160</a> Log base 2</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item161" target="_blank" rel="noopener">Item 161</a> Swap two locations</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item162" target="_blank" rel="noopener">Item 162</a> Swap two bits</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item163" target="_blank" rel="noopener">Item 163</a> Exchange two Lisp variables</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item164" target="_blank" rel="noopener">Item 164</a> Max of byte pointers</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item165" target="_blank" rel="noopener">Item 165</a> Byte pointers</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item166" target="_blank" rel="noopener">Item 166</a> Rotate 3 accumulators</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item167" target="_blank" rel="noopener">Item 167</a> Parity, count, reverse bits</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item168" target="_blank" rel="noopener">Item 168</a> PDP-1 sounds</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item169" target="_blank" rel="noopener">Item 169</a> Count ones</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item170" target="_blank" rel="noopener">Item 170</a> Decimal print routines</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item171" target="_blank" rel="noopener">Item 171</a> Division by zero</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item172" target="_blank" rel="noopener">Item 172</a> Two word Lisp CONS</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item173" target="_blank" rel="noopener">Item 173</a> Fix float</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item174" target="_blank" rel="noopener">Item 174</a> Fix point of float function</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hacks.html#item175" target="_blank" rel="noopener">Item 175</a> Next higher<h2 id="P82-Programming-Algorithms-Heuristics"><a href="#P82-Programming-Algorithms-Heuristics" class="headerlink" title="P82 - Programming Algorithms, Heuristics"></a>P82 - <a href="http://home.pipeline.com/~hbaker1/hakmem/algorithms.html" target="_blank" rel="noopener">Programming Algorithms, Heuristics</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/algorithms.html#item176" target="_blank" rel="noopener">Item 176</a> BANANA Phenomenon</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/algorithms.html#item177" target="_blank" rel="noopener">Item 177</a> Drawing Curves Incrementally</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/algorithms.html#item178" target="_blank" rel="noopener">Item 178</a> Evaluating Functions</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/algorithms.html#item179" target="_blank" rel="noopener">Item 179</a> Searching Character Strings</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/algorithms.html#item180" target="_blank" rel="noopener">Item 180</a> Finding Corners in Images<h2 id="P87-Hardware"><a href="#P87-Hardware" class="headerlink" title="P87 - Hardware"></a>P87 - <a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html" target="_blank" rel="noopener">Hardware</a></h2></li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item181" target="_blank" rel="noopener">Item 181</a> Floating Point</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item182" target="_blank" rel="noopener">Item 182</a> Voltage regulators</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item183" target="_blank" rel="noopener">Item 183</a> Current mirrors</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item184" target="_blank" rel="noopener">Item 184</a> One-shot</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item185" target="_blank" rel="noopener">Item 185</a> Oscillators</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item186" target="_blank" rel="noopener">Item 186</a> FM Radio Link</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item187" target="_blank" rel="noopener">Item 187</a> Phone Line XMTR, RCVR</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item188" target="_blank" rel="noopener">Item 188</a> DC Motor Velocity Servo</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item189" target="_blank" rel="noopener">Item 189</a> Optical Coupler</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item190" target="_blank" rel="noopener">Item 190</a> Photocathode Current Oscillator</li><li><a href="http://home.pipeline.com/~hbaker1/hakmem/hardware.html#item191" target="_blank" rel="noopener">Item 191</a> Deflection Amplifier</li></ul><h1 id="Figures"><a href="#Figures" class="headerlink" title="Figures"></a>Figures</h1><ul><li>P19, 20 | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure1a.html" target="_blank" rel="noopener">1a</a>, <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure1b.html" target="_blank" rel="noopener">1b</a> | Binary integers radix <em>i</em>-1, <em>i</em>+1.</li><li>P21       | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure2.html" target="_blank" rel="noopener">2</a>         | Radix <em>i</em>-1 fraction parts (Knuth).</li><li>P31, 32 | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure3a.html" target="_blank" rel="noopener">3a</a>, <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure3b.html" target="_blank" rel="noopener">3b</a> | Squared square, rectangle.</li><li>P34       | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure4.html" target="_blank" rel="noopener">4</a>         | Square, hexagon dissection.</li><li>P50       | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure5.html" target="_blank" rel="noopener">5</a>         | Hexiamond solutions.</li><li>P58, 59 | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure6a.html" target="_blank" rel="noopener">6a</a>, <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure6b.html" target="_blank" rel="noopener">6b</a> | “clock hands” series.</li><li>P62       | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure7.html" target="_blank" rel="noopener">7</a>         | Binary numbers radix -2.</li><li>P66       | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure8.html" target="_blank" rel="noopener">8</a>         | “C” curves.</li><li>P84       | <a href="http://home.pipeline.com/~hbaker1/hakmem/Figure9.html" target="_blank" rel="noopener">9</a>         | Incremental curve drawing.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Books </category>
          
          <category> MIT HAKMAN </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Vim Tutor explore</title>
      <link href="/Vim-Tutor-explore/"/>
      <url>/Vim-Tutor-explore/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><blockquote><p><strong>ATTENTION:</strong><br>     The commands in the lessons will modify the text.  Make a copy of this<br>     file to practise on (if you started “vimtutor” this is already a copy).</p></blockquote><p>我直接开的vim tutor所以没问题</p><h1 id="Lesson-1-TEXT-EDITING"><a href="#Lesson-1-TEXT-EDITING" class="headerlink" title="Lesson 1: TEXT EDITING"></a>Lesson 1: TEXT EDITING</h1><h2 id="MOVING-THE-CURSOR"><a href="#MOVING-THE-CURSOR" class="headerlink" title="MOVING THE CURSOR"></a>MOVING THE CURSOR</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">** To move the cursor, press the h,j,k,l keys as indicated. **</span><br><span class="line">          ^</span><br><span class="line">          k    Hint:  The h key is at the left and moves left.</span><br><span class="line">    &lt; h      l &gt;   The l key is at the right and moves right.</span><br><span class="line">          j   The j key looks like a down arrow.</span><br><span class="line">          v</span><br></pre></td></tr></table></figure><p><code>hj/lk</code> == <strong>左下/右上</strong></p><h2 id="EXITING-VIM"><a href="#EXITING-VIM" class="headerlink" title="EXITING VIM"></a>EXITING VIM</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. Press the &lt;ESC&gt; key (to make sure you are in Normal mode).</span><br><span class="line"></span><br><span class="line">2. Type:  :q! &lt;ENTER&gt;.</span><br><span class="line">   This exits the editor, DISCARDING any changes you have made.</span><br></pre></td></tr></table></figure><p><code>:q!</code> 不保存退出</p><h2 id="DELETION"><a href="#DELETION" class="headerlink" title="DELETION"></a>DELETION</h2><blockquote><p><strong> Press  x  to delete the character under the cursor. </strong></p><p>NOTE: As you go through this tutor, do not try to memorize, learn by usage.</p></blockquote><p><code>x</code> 删除当店光标后的字符</p><h2 id="INSERTION"><a href="#INSERTION" class="headerlink" title="INSERTION"></a>INSERTION</h2><blockquote><p><strong> Press  i  to insert text. </strong></p></blockquote><p><code>i</code>== <strong>insert</strong> 即插入到光标处</p><h2 id="APPENDING"><a href="#APPENDING" class="headerlink" title="APPENDING"></a>APPENDING</h2><blockquote><p><strong> Press  A  to append text. </strong></p></blockquote><p><code>A</code>== <strong>append</strong> 在一行末尾插入<br><code>a</code> 在光标后插入</p><h2 id="EDITING-A-FILE"><a href="#EDITING-A-FILE" class="headerlink" title="EDITING A FILE"></a>EDITING A FILE</h2><blockquote><p><strong> Use  :wq  to save a file and exit. </strong></p></blockquote><p><code>:wq</code> 保存+退出<br><code>w</code>== <strong>write</strong> &amp;&amp; <code>q</code>== <strong>quit</strong></p><h2 id="SUMMARY"><a href="#SUMMARY" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1. The cursor is moved using either the arrow keys or the hjkl keys.</span><br><span class="line">        h (left)j (down)       k (up)    l (right)</span><br><span class="line"></span><br><span class="line">2. To start Vim from the shell prompt type:  vim FILENAME &lt;ENTER&gt;</span><br><span class="line"></span><br><span class="line">3. To exit Vim type:   &lt;ESC&gt;   :q! &lt;ENTER&gt;  to trash all changes.</span><br><span class="line">            OR type:   &lt;ESC&gt;   :wq &lt;ENTER&gt;  to save the changes.</span><br><span class="line"></span><br><span class="line">4. To delete the character at the cursor type:  x</span><br><span class="line"></span><br><span class="line">5. To insert or append text type:</span><br><span class="line"> i   type inserted text   &lt;ESC&gt;insert before the cursor</span><br><span class="line"> A   type appended text   &lt;ESC&gt;         append after the line</span><br><span class="line"></span><br><span class="line">NOTE: Pressing &lt;ESC&gt; will place you in Normal mode or will cancel</span><br><span class="line">      an unwanted and partially completed command.</span><br></pre></td></tr></table></figure><hr><h1 id="Lesson-2-COMMANDS"><a href="#Lesson-2-COMMANDS" class="headerlink" title="Lesson 2: COMMANDS"></a>Lesson 2: COMMANDS</h1><h2 id="DELETION-COMMANDS"><a href="#DELETION-COMMANDS" class="headerlink" title="DELETION COMMANDS"></a>DELETION COMMANDS</h2><blockquote><p><strong> Type  dw  to delete a word. </strong></p></blockquote><p><code>dw</code> 删除连续的空格/空行/一个词+其后的空格<br><code>d</code>== <strong>delete</strong></p><ul><li><code>ABC_DEF</code> 被当做一个词</li><li><code>ABC.DEF</code> <code>foo-bar</code> 被当做两个词+一个符号</li></ul><h2 id="MORE-DELETION-COMMANDS"><a href="#MORE-DELETION-COMMANDS" class="headerlink" title="MORE DELETION COMMANDS"></a>MORE DELETION COMMANDS</h2><blockquote><p><strong> Type  d$    to delete to the end of the line. </strong></p></blockquote><p><code>d$</code> 删除光标到行尾的所有内容<br><code>$</code> ==/$/ ，正则表达式中的行尾</p><h2 id="ON-OPERATORS-AND-MOTIONS"><a href="#ON-OPERATORS-AND-MOTIONS" class="headerlink" title="ON OPERATORS AND MOTIONS"></a>ON OPERATORS AND MOTIONS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A short list of motions:</span><br><span class="line">  w - until the start of the next word, EXCLUDING its first character.</span><br><span class="line">  e - to the end of the current word, INCLUDING the last character.</span><br><span class="line">  $ - to the end of the line, INCLUDING the last character.</span><br></pre></td></tr></table></figure><p><code>dw</code> 删除到下一个词 (删去了词间空格, 行尾句号不删去)<br><code>de</code> 删除到词尾<br><code>d$</code> 删除到行尾</p><h2 id="USING-A-COUNT-FOR-A-MOTION"><a href="#USING-A-COUNT-FOR-A-MOTION" class="headerlink" title="USING A COUNT FOR A MOTION"></a>USING A COUNT FOR A MOTION</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">** Typing a number before a motion repeats it that many times. **</span><br><span class="line"></span><br><span class="line">1. Move the cursor to the start of the line marked ---&gt; below.</span><br><span class="line"></span><br><span class="line">2. Type  2w  to move the cursor two words forward.</span><br><span class="line"></span><br><span class="line">3. Type  3e  to move the cursor to the end of the third word forward.</span><br><span class="line"></span><br><span class="line">4. Type  0  (zero) to move to the start of the line.</span><br></pre></td></tr></table></figure><p><code>1w</code> == 一个词+一个空格<br><code>2w</code> 即向后移动两个词<br><code>2e</code> 即向后移动到第二个词 <strong>词尾</strong>(最后一个字母)<br><code>0</code>  回到行首</p><h2 id="USING-A-COUNT-TO-DELETE-MORE"><a href="#USING-A-COUNT-TO-DELETE-MORE" class="headerlink" title="USING A COUNT TO DELETE MORE"></a>USING A COUNT TO DELETE MORE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In the combination of the delete operator and a motion mentioned above you</span><br><span class="line">insert a count before the motion to delete more:</span><br><span class="line"> d   number   motion</span><br></pre></td></tr></table></figure><p><code>d2w</code> 删两个词 (包括最后的空格)<br><code>d2e</code> 删两个词 (留空格)</p><h2 id="OPERATING-ON-LINES"><a href="#OPERATING-ON-LINES" class="headerlink" title="OPERATING ON LINES"></a>OPERATING ON LINES</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">** Type  dd   to delete a whole line. **</span><br><span class="line"></span><br><span class="line">  2. Type  dd  to delete the line.</span><br><span class="line">  ...</span><br><span class="line">  4. Type   2dd   to delete two lines.</span><br></pre></td></tr></table></figure><p><code>dd</code>  删去一整行<br><code>2dd</code> 删去两行</p><h2 id="THE-UNDO-COMMAND"><a href="#THE-UNDO-COMMAND" class="headerlink" title="THE UNDO COMMAND"></a>THE UNDO COMMAND</h2><blockquote><p><strong> Press  u    to undo the last commands,   U  to fix a whole line. </strong></p></blockquote><p><code>u</code>== <strong>undo</strong> 撤销上一个举动<br><code>U</code> 撤销一行上的所有更改 <del>时间间隔相近的一系列举动</del> ,可反撤销<br><code>CTRL-R</code> 撤销之前的命令</p><h2 id="SUMMARY-1"><a href="#SUMMARY-1" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1. To delete from the cursor up to the next word type:      dw</span><br><span class="line">2. To delete from the cursor to the end of a line type:     d$</span><br><span class="line">3. To delete a whole line type:    dd</span><br><span class="line"></span><br><span class="line">4. To repeat a motion prepend it with a number:   2w</span><br><span class="line">5. The format for a change command is:</span><br><span class="line">             operator   [number]   motion</span><br><span class="line">   where:</span><br><span class="line">     operator - is what to do, such as  d  for delete</span><br><span class="line">     [number] - is an optional count to repeat the motion</span><br><span class="line">     motion   - moves over the text to operate on, such as  w (word),</span><br><span class="line">                $ (to the end of line), etc.</span><br><span class="line"></span><br><span class="line">6. To move to the start of the line use a zero:  0</span><br><span class="line"></span><br><span class="line">7. To undo previous actions, type:       u  (lowercase u)</span><br><span class="line">   To undo all the changes on a line, type:   U  (capital U)</span><br><span class="line">   To undo the undo&apos;s, type:      CTRL-R</span><br></pre></td></tr></table></figure><h1 id="Lesson-3-MORE-COMMAND"><a href="#Lesson-3-MORE-COMMAND" class="headerlink" title="Lesson 3: MORE COMMAND"></a>Lesson 3: MORE COMMAND</h1><h2 id="THE-PUT-COMMAND"><a href="#THE-PUT-COMMAND" class="headerlink" title="THE PUT COMMAND"></a>THE PUT COMMAND</h2><blockquote><p><strong> Type    p  to put previously deleted text after the cursor. </strong></p></blockquote><p><code>p</code>== <strong>puts</strong> 把缓冲区中的一行，插入到当前行的下一行</p><h2 id="THE-REPLACE-COMMAND"><a href="#THE-REPLACE-COMMAND" class="headerlink" title="THE REPLACE COMMAND"></a>THE REPLACE COMMAND</h2><blockquote><p><strong> Type  rx  to replace the character at the cursor with  x . </strong></p></blockquote><p><code>rx</code> 把当前光标所在的字母替换为<code>x</code><br><code>r</code>== <strong>replace</strong></p><h2 id="THE-CHANGE-OPERATOR"><a href="#THE-CHANGE-OPERATOR" class="headerlink" title="THE CHANGE OPERATOR"></a>THE CHANGE OPERATOR</h2><blockquote><p><strong> To change until the end of a word, type  ce . </strong></p></blockquote><p><code>ce</code> 删除光标至词尾，然后插入<br><code>c</code>== <strong>change</strong></p><h2 id="MORE-CHANGES-USING-c"><a href="#MORE-CHANGES-USING-c" class="headerlink" title="MORE CHANGES USING c"></a>MORE CHANGES USING c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">** The change operator is used with the same motions as delete. **</span><br><span class="line"></span><br><span class="line">1. The change operator works in the same way as delete.  The format is:</span><br><span class="line"></span><br><span class="line">       c    [number]   motion</span><br><span class="line"></span><br><span class="line">2. The motions are the same, such as   w (word) and  $ (end of line).</span><br></pre></td></tr></table></figure><p><code>c</code> 命令和 <code>d</code> 命令相似，只是多了插入<br><code>c$</code> 删除光标到行尾，然后插入<br><code>cw</code>/ <code>ce</code>相同，删除光标到词尾(不含空格)，然后插入</p><h2 id="SUMMARY-2"><a href="#SUMMARY-2" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1. To put back text that has just been deleted, type   p .  This puts the</span><br><span class="line">   deleted text AFTER the cursor (if a line was deleted it will go on the</span><br><span class="line">   line below the cursor).</span><br><span class="line"></span><br><span class="line">2. To replace the character under the cursor, type   r   and then the</span><br><span class="line">   character you want to have there.</span><br><span class="line"></span><br><span class="line">3. The change operator allows you to change from the cursor to where the</span><br><span class="line">   motion takes you.  eg. Type  ce  to change from the cursor to the end of</span><br><span class="line">   the word,  c$  to change to the end of a line.</span><br><span class="line"></span><br><span class="line">4. The format for change is:</span><br><span class="line"></span><br><span class="line"> c   [number]   motion</span><br></pre></td></tr></table></figure><h1 id="Lesson-4-CURSOR-AND-FILE"><a href="#Lesson-4-CURSOR-AND-FILE" class="headerlink" title="Lesson 4: CURSOR AND FILE"></a>Lesson 4: CURSOR AND FILE</h1><h2 id="CURSOR-LOCATION-AND-FILE-STATUS"><a href="#CURSOR-LOCATION-AND-FILE-STATUS" class="headerlink" title="CURSOR LOCATION AND FILE STATUS"></a>CURSOR LOCATION AND FILE STATUS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">** Type CTRL-G to show your location in the file and the file status.</span><br><span class="line">     Type  G  to move to a line in the file. **</span><br><span class="line"></span><br><span class="line">     2. Press  G  to move you to the bottom of the file.</span><br><span class="line">          Type  gg  to move you to the start of the file.</span><br><span class="line"></span><br><span class="line">       3. Type the number of the line you were on and then  G .</span><br></pre></td></tr></table></figure><p><code>Ctrl+g</code> 显示文件路径，行号等信息<br><code>gg</code> 转跳到文件头<br><code>G</code> 转跳到文件尾<br><code>233G</code> 转跳到 233 行</p><h2 id="THE-SEARCH-COMMAND"><a href="#THE-SEARCH-COMMAND" class="headerlink" title="THE SEARCH COMMAND"></a>THE SEARCH COMMAND</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">** Type  /  followed by a phrase to search for the phrase. **</span><br><span class="line"></span><br><span class="line">3. To search for the same phrase again, simply type  n .</span><br><span class="line">   To search for the same phrase in the opposite direction, type  N .</span><br><span class="line"></span><br><span class="line">4. To search for a phrase in the backward direction, use  ?  instead of  / .</span><br><span class="line"></span><br><span class="line">5. To go back to where you came from press  CTRL-O  (Keep Ctrl down while</span><br><span class="line">   pressing the letter o).  Repeat to go back further.  CTRL-I goes forward.</span><br><span class="line"></span><br><span class="line">NOTE: When the search reaches the end of the file it will continue at the</span><br><span class="line">      start, unless the &apos;wrapscan&apos; option has been reset.</span><br></pre></td></tr></table></figure><p><code>/word</code> (向下)在文件中搜索 word<br><code>?word</code> (向上)搜索<br><code>n</code>== <strong>next</strong> 向下继续搜索，<br><code>N</code> 向上继续搜索<br><code>Ctrl+o</code> 返回(上一个点)<br><code>Ctrl+i</code> 前进(到下一个点)</p><h2 id="THE-SUBSTITUTE-COMMAND"><a href="#THE-SUBSTITUTE-COMMAND" class="headerlink" title="THE SUBSTITUTE COMMAND"></a>THE SUBSTITUTE COMMAND</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">** Type  :s/new/new/g  to substitute &apos;new&apos; for &apos;new&apos;. **</span><br><span class="line"></span><br><span class="line">2. Type  :s/thee/the &lt;ENTER&gt; .  Note that this command only changes the</span><br><span class="line">   first occurrence of &quot;thee&quot; in the line.</span><br><span class="line"></span><br><span class="line">3. Now type  :s/thee/the/g .  Adding the  g  flag means to substitute</span><br><span class="line">   globally in the line, change all occurrences of &quot;thee&quot; in the line.</span><br><span class="line"></span><br><span class="line">4. To change every occurrence of a character string between two lines,</span><br><span class="line">   type   :#,#s/old/new/g    where #,# are the line numbers of the range</span><br><span class="line">                             of lines where the substitution is to be done.</span><br><span class="line">   Type   :%s/old/new/g      to change every occurrence in the whole file.</span><br><span class="line">   Type   :%s/old/new/gc     to find every occurrence in the whole file,</span><br><span class="line">               with a prompt whether to substitute or not.</span><br></pre></td></tr></table></figure><p><code>:s/old/new</code> 在当前行中，替换 <strong>第一个</strong> old为new (无确认)<br><code>:s/old/new/g</code> 在当前行中，替换所有的old为new (无确认)<br><code>:123,456s/old/new/g</code> 在123~456行中，替换所有的old为new (无确认)<br><code>:%s/old/new/g</code> 在 <strong>整个文件</strong> 中，替换所有的old为new (无确认)<br><code>:%s/old/new/gc</code> 在 <strong>整个文件</strong> 中，替换所有的old为new (<strong>有确认</strong>)</p><p>参数解释：</p><ul><li><code>/g</code>== <strong>globally</strong></li><li><code>/c</code>== <strong>confirm</strong></li></ul><h2 id="SUMMARY-3"><a href="#SUMMARY-3" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1. CTRL-G  displays your location in the file and the file status.</span><br><span class="line">           G  moves to the end of the file.</span><br><span class="line">   number  G  moves to that line number.</span><br><span class="line">          gg  moves to the first line.</span><br><span class="line"></span><br><span class="line">2. Typing  /followed by a phrase searches FORWARD for the phrase.</span><br><span class="line">   Typing  ?followed by a phrase searches BACKWARD for the phrase.</span><br><span class="line">   After a search type  n  to find the next occurrence in the same direction</span><br><span class="line">   or  N  to search in the opposite direction.</span><br><span class="line">   CTRL-O takes you back to older positions, CTRL-I to newer positions.</span><br><span class="line"></span><br><span class="line">3. Typing  %while the cursor is on a (,),[,],&#123;, or &#125; goes to its match.</span><br><span class="line"></span><br><span class="line">4. To substitute new for the first old in a line type    :s/old/new</span><br><span class="line">   To substitute new for all &apos;old&apos;s on a line type   :s/old/new/g</span><br><span class="line">   To substitute phrases between two line #&apos;s type   :#,#s/old/new/g</span><br><span class="line">   To substitute all occurrences in the file type   :%s/old/new/g</span><br><span class="line">   To ask for confirmation each time add &apos;c&apos;   :%s/old/new/gc</span><br></pre></td></tr></table></figure><h1 id="Lesson-5-EXTERNAL-COMMAND"><a href="#Lesson-5-EXTERNAL-COMMAND" class="headerlink" title="Lesson 5: EXTERNAL COMMAND"></a>Lesson 5: EXTERNAL COMMAND</h1><h2 id="HOW-TO-EXECUTE-AN-EXTERNAL-COMMAND"><a href="#HOW-TO-EXECUTE-AN-EXTERNAL-COMMAND" class="headerlink" title="HOW TO EXECUTE AN EXTERNAL COMMAND"></a>HOW TO EXECUTE AN EXTERNAL COMMAND</h2><blockquote><p><strong> Type  :!    followed by an external command to execute that command. </strong></p></blockquote><p><code>:!ls</code> 在cmd中执行<code>ls</code>并打开新窗口</p><img src="/Vim-Tutor-explore/ls.png" title="执行效果"><h2 id="MORE-ON-WRITING-FILES"><a href="#MORE-ON-WRITING-FILES" class="headerlink" title="MORE ON WRITING FILES"></a>MORE ON WRITING FILES</h2><blockquote><p><strong> To save the changes made to the text, type  :w FILENAME. </strong></p></blockquote><p><code>:w FILENAME</code> 将文件写进<code>FILENAME</code>中</p><h2 id="SELECTING-TEXT-TO-WRITE"><a href="#SELECTING-TEXT-TO-WRITE" class="headerlink" title="SELECTING TEXT TO WRITE"></a>SELECTING TEXT TO WRITE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">** To save part of the file, type  v  motion  :w FILENAME **</span><br><span class="line"></span><br><span class="line">NOTE:  Pressing  v  starts Visual selection.  You can move the cursor around</span><br><span class="line">       to make the selection bigger or smaller.  Then you can use an operator</span><br><span class="line">       to do something with the text.  For example,  d  deletes the text.</span><br></pre></td></tr></table></figure><p><code>v</code> == <strong>visual</strong> 进入可视化模式，用来选择文字<br><code>:w FILENAME</code> -&gt; <code>:&#39;&lt;,&#39;&gt;w FILENAME</code> 保存选中的文字到文件</p><h2 id="RETRIEVING-AND-MERGING-FILES"><a href="#RETRIEVING-AND-MERGING-FILES" class="headerlink" title="RETRIEVING AND MERGING FILES"></a>RETRIEVING AND MERGING FILES</h2><blockquote><p><strong> To insert the contents of a file, type  :r FILENAME  </strong></p></blockquote><p><code>:r FILENAME</code> 将文件中的内容插入到光标所在处</p><h2 id="SUMMARY-4"><a href="#SUMMARY-4" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.  :!command  executes an external command.</span><br><span class="line"></span><br><span class="line">    Some useful examples are:</span><br><span class="line"> (MS-DOS)  (Unix)</span><br><span class="line">  :!dir   :!ls   -  shows a directory listing.</span><br><span class="line">  :!del FILENAME   :!rm FILENAME   -  removes file FILENAME.</span><br><span class="line"></span><br><span class="line">2.  :w FILENAME  writes the current Vim file to disk with name FILENAME.</span><br><span class="line"></span><br><span class="line">3.  v  motion  :w FILENAME  saves the Visually selected lines in file</span><br><span class="line">    FILENAME.</span><br><span class="line"></span><br><span class="line">4.  :r FILENAME  retrieves disk file FILENAME and puts it below the</span><br><span class="line">    cursor position.</span><br><span class="line"></span><br><span class="line">5.  :r !dir  reads the output of the dir command and puts it below the</span><br><span class="line">    cursor position.</span><br></pre></td></tr></table></figure><h1 id="Lesson-6-OPEN-COMMAND"><a href="#Lesson-6-OPEN-COMMAND" class="headerlink" title="Lesson 6: OPEN COMMAND"></a>Lesson 6: OPEN COMMAND</h1><h2 id="THE-OPEN-COMMAND"><a href="#THE-OPEN-COMMAND" class="headerlink" title="THE OPEN COMMAND"></a>THE OPEN COMMAND</h2><blockquote><p><strong> Type  o  to open a line below the cursor and place you in Insert mode. </strong></p></blockquote><p><code>o</code> 小写的o在当前行的 <strong>下一行</strong>，插入新行<br><code>O</code> 大写的O在当前行的 <strong>上一行</strong>，插入新行</p><h2 id="THE-APPEND-COMMAND"><a href="#THE-APPEND-COMMAND" class="headerlink" title="THE APPEND COMMAND"></a>THE APPEND COMMAND</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  ** Type  a  to insert text AFTER the cursor. **</span><br><span class="line"></span><br><span class="line">2. Press  e  until the cursor is on the end of  li .</span><br><span class="line"></span><br><span class="line">3. Type an  a  (lowercase) to append text AFTER the cursor.</span><br><span class="line"></span><br><span class="line">NOTE:  a, i and A all go to the same Insert mode, the only  </span><br><span class="line">       difference is where the characters are inserted.</span><br></pre></td></tr></table></figure><p><code>i</code> 在当前光标处插入<br><code>a</code> 在当前光标后插入<br><code>e</code> 调到下一个词尾</p><h2 id="ANOTHER-WAY-TO-REPLACE"><a href="#ANOTHER-WAY-TO-REPLACE" class="headerlink" title="ANOTHER WAY TO REPLACE"></a>ANOTHER WAY TO REPLACE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">** Type a capital  R  to replace more than one character. **</span><br><span class="line"></span><br><span class="line">NOTE:  Replace mode is like Insert mode, but every typed character deletes an</span><br><span class="line">       existing character.</span><br></pre></td></tr></table></figure><p><code>R</code> 在当前光标处开始替换模式</p><h2 id="COPY-AND-PASTE-TEXT"><a href="#COPY-AND-PASTE-TEXT" class="headerlink" title="COPY AND PASTE TEXT"></a>COPY AND PASTE TEXT</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">** Use the  y  operator to copy text and  p  to paste it **</span><br><span class="line"></span><br><span class="line">2. Start Visual mode with  v  and move the cursor to just before &quot;first&quot;.</span><br><span class="line"></span><br><span class="line">3. Type  y  to yank (copy) the highlighted text.</span><br><span class="line"></span><br><span class="line">4. Move the cursor to the end of the next line:  j$b</span><br><span class="line"></span><br><span class="line">5. Type  p  to put (paste) the text.  Then type:  a second &lt;ESC&gt; .</span><br><span class="line"></span><br><span class="line">6. Use Visual mode to select &quot; item.&quot;, yank it with  y , move to the end of</span><br><span class="line">   the next line with  j$  and put the text there with  p .</span><br><span class="line"></span><br><span class="line">   NOTE: you can also use  y  as an operator;  yw  yanks one word.</span><br></pre></td></tr></table></figure><p>在<code>v</code>== <strong>visual</strong> 模式下选中要复制的文字<br><code>y</code> == <strong>yank</strong> 复制选中的文字<br><code>p</code> == <strong>paste</strong> 黏贴文字</p><p><code>yw</code> 复制一个词<br><code>j$</code> 选中到下一行行尾</p><h2 id="SET-OPTION"><a href="#SET-OPTION" class="headerlink" title="SET OPTION"></a>SET OPTION</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">** Set an option so a search or substitute ignores case **</span><br><span class="line"></span><br><span class="line">1. Search for &apos;ignore&apos; by entering:   /ignore  &lt;ENTER&gt;</span><br><span class="line">   Repeat several times by pressing  n .</span><br><span class="line"></span><br><span class="line">2. Set the &apos;ic&apos; (Ignore case) option by entering:   :set ic</span><br><span class="line"></span><br><span class="line">4. Set the &apos;hlsearch&apos; and &apos;incsearch&apos; options:  :set hls is</span><br><span class="line"></span><br><span class="line">6. To disable ignoring case enter:  :set noic</span><br><span class="line"></span><br><span class="line">NOTE:  To remove the highlighting of matches enter:   :nohlsearch</span><br><span class="line">NOTE:  If you want to ignore case for just one search command, use  \c</span><br><span class="line">     in the phrase:  /ignore\c  &lt;ENTER&gt;</span><br></pre></td></tr></table></figure><p><code>:set ic</code> \ <code>:set noic</code> 打开/关闭 忽略大小写(for 查找/替换)<br><code>:set hls is</code> \ <code>:nohlsearch</code> 打开/关闭 高亮</p><h2 id="SUMMARY-5"><a href="#SUMMARY-5" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1. Type  o  to open a line BELOW the cursor and start Insert mode.</span><br><span class="line">   Type  O  to open a line ABOVE the cursor.</span><br><span class="line"></span><br><span class="line">2. Type  a  to insert text AFTER the cursor.</span><br><span class="line">   Type  A  to insert text after the end of the line.</span><br><span class="line"></span><br><span class="line">3. The  e  command moves to the end of a word.</span><br><span class="line"></span><br><span class="line">4. The  y  operator yanks (copies) text,  p  puts (pastes) it.</span><br><span class="line"></span><br><span class="line">5. Typing a capital  R  enters Replace mode until  &lt;ESC&gt;  is pressed.</span><br><span class="line"></span><br><span class="line">6. Typing &quot;:set xxx&quot; sets the option &quot;xxx&quot;.  Some options are:</span><br><span class="line">  &apos;ic&apos; &apos;ignorecase&apos;ignore upper/lower case when searching</span><br><span class="line">&apos;is&apos; &apos;incsearch&apos;show partial matches for a search phrase</span><br><span class="line">&apos;hls&apos; &apos;hlsearch&apos;highlight all matching phrases</span><br><span class="line">   You can either use the long or the short option name.</span><br><span class="line"></span><br><span class="line">7. Prepend &quot;no&quot; to switch an option off:   :set noic</span><br></pre></td></tr></table></figure><h1 id="Lesson-7-HELP"><a href="#Lesson-7-HELP" class="headerlink" title="Lesson 7: HELP"></a>Lesson 7: HELP</h1><h2 id="GETTING-HELP"><a href="#GETTING-HELP" class="headerlink" title="GETTING HELP"></a>GETTING HELP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vim has a comprehensive on-line help system.  To get started, try one of</span><br><span class="line">these three:</span><br><span class="line">- press the &lt;HELP&gt; key (if you have one)</span><br><span class="line">- press the &lt;F1&gt; key (if you have one)</span><br><span class="line">- type   :help &lt;ENTER&gt;</span><br><span class="line"></span><br><span class="line">Read the text in the help window to find out how the help works.</span><br><span class="line">Type  CTRL-W CTRL-W   to jump from one window to another.</span><br><span class="line">Type    :q &lt;ENTER&gt;    to close the help window.</span><br></pre></td></tr></table></figure><h2 id="CREATE-A-STARTUP-SCRIPT"><a href="#CREATE-A-STARTUP-SCRIPT" class="headerlink" title="CREATE A STARTUP SCRIPT"></a>CREATE A STARTUP SCRIPT</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">** Enable Vim features **</span><br><span class="line"></span><br><span class="line">1. Start editing the &quot;vimrc&quot; file.  This depends on your system:</span><br><span class="line">:e ~/.vimrcfor Unix</span><br><span class="line">:e $VIM/_vimrcfor MS-Windows</span><br><span class="line"></span><br><span class="line">2. Now read the example &quot;vimrc&quot; file contents:</span><br><span class="line">:r $VIMRUNTIME/vimrc_example.vim</span><br><span class="line"></span><br><span class="line">3. Write the file with:</span><br><span class="line">:w</span><br></pre></td></tr></table></figure><p>有cgywin的环境可以直接改 <code>~/.vimrc</code></p><h2 id="COMPLETION"><a href="#COMPLETION" class="headerlink" title="COMPLETION"></a>COMPLETION</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">** Command line completion with CTRL-D and &lt;TAB&gt; **</span><br><span class="line"></span><br><span class="line">NOTE:  Completion works for many commands.  Just try pressing CTRL-D and</span><br><span class="line">       &lt;TAB&gt;.  It is especially useful for  :help .</span><br></pre></td></tr></table></figure><h2 id="SUMMARY-6"><a href="#SUMMARY-6" class="headerlink" title="SUMMARY"></a>SUMMARY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. Type  :help  or press &lt;F1&gt; or &lt;Help&gt;  to open a help window.</span><br><span class="line"></span><br><span class="line">2. Type  :help cmd  to find help on  cmd .</span><br><span class="line"></span><br><span class="line">3. Type  CTRL-W CTRL-W  to jump to another window</span><br><span class="line"></span><br><span class="line">4. Type  :q  to close the help window</span><br><span class="line"></span><br><span class="line">5. Create a vimrc startup script to keep your preferred settings.</span><br><span class="line"></span><br><span class="line">6. When typing a  :  command, press CTRL-D to see possible completions.</span><br><span class="line">   Press &lt;TAB&gt; to use one completion.</span><br></pre></td></tr></table></figure><h1 id="For-further-reading-and-studying"><a href="#For-further-reading-and-studying" class="headerlink" title="For further reading and studying"></a>For further reading and studying</h1><ul><li><code>:help user-manual</code></li><li><a href="http://www.truth.sk/vim/vimbook-OPL.pdf" target="_blank" rel="noopener">Vim - Vi Improved - by Steve Oualline (Publisher: New Riders)</a></li><li><a href="http://iccf-holland.org/click5.html" target="_blank" rel="noopener">Vim - ICCF Holland</a></li><li>Learning the Vi Editor - by Linda Lamb<br>  Publisher: O’Reilly &amp; Associates Inc.</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo-math 插件修复</title>
      <link href="/hexo-math-%E6%8F%92%E4%BB%B6%E4%BF%AE%E5%A4%8D/"/>
      <url>/hexo-math-%E6%8F%92%E4%BB%B6%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习也是没有办法的事情</p></blockquote><a id="more"></a><p>粗略的的看一下用了 gulp + es6<br>大概还得研究下 <a href="http://coffee-script.org/" target="_blank" rel="noopener">coffeescript</a></p><p>ref:</p><p><strong>Hexo 插件相关</strong></p><ul><li><a href="http://www.ieclipse.cn/en/2016/07/18/Web/Hexo-dev-plugin/" target="_blank" rel="noopener">Hexo高级教程之插件开发</a></li></ul><p><strong>JS 语法&amp;环境相关</strong></p><p>【ECMAScript 6】</p><ul><li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">ECMAScript 6 入门</a></li><li><a href="http://www.ituring.com.cn/article/201561" target="_blank" rel="noopener">ECMAScript6 教程（一）</a></li><li><a href="http://es6-features.org" target="_blank" rel="noopener">ECMAScript 6 — New Features: Overview &amp; Comparison</a></li></ul><p>【gulp】</p><ul><li><a href="https://github.com/gulpjs/gulp/blob/master/docs/API.md" target="_blank" rel="noopener">gulp API docs</a></li><li><a href="https://github.com/nimojs/gulp-book" target="_blank" rel="noopener">gulp 入门指南</a></li><li><a href="http://www.jianshu.com/p/fbf9871dc47a" target="_blank" rel="noopener">Gulp入门教程</a></li><li><a href="https://www.zybuluo.com/EncyKe/note/658462" target="_blank" rel="noopener">手记：gulp 入门</a></li><li><a href="http://wiki.jikexueyuan.com/project/gulp-book/" target="_blank" rel="noopener">Gulp 入门指南</a></li></ul><p>【Coffeescript】</p><ul><li><a href="http://coffee-script.org/" target="_blank" rel="noopener">coffeescript</a></li><li><p><a href="http://wiki.jikexueyuan.com/project/coffeescript/" target="_blank" rel="noopener">CoffeeScript 实用手册</a></p></li><li><p><a href="http://wiki.jikexueyuan.com/project/chrome-devtools/" target="_blank" rel="noopener">Chrome 开发工具指南</a></p></li></ul><hr><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">math:</span><br><span class="line">  engine: &apos;mathjax&apos; # or &apos;katex&apos;</span><br><span class="line">  mathjax:</span><br><span class="line">    src: https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/config/TeX-AMS-MML_HTMLorMML.js</span><br><span class="line">    config:</span><br><span class="line">      # MathJax config</span><br><span class="line">        </span><br><span class="line">  katex:</span><br><span class="line">    css: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css</span><br><span class="line">    js: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.js # not used</span><br><span class="line">    config:</span><br><span class="line">      # KaTeX config</span><br></pre></td></tr></table></figure><p>真是服气，把配置都删了就好使了。不过处理时还是有报错</p><img src="/hexo-math-插件修复/ex1.png"><figure class="highlight plain"><figcaption><span>err</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">11:44:41.160 INFO  [hexo-math] Using engine &apos;mathjax&apos;</span><br><span class="line">11:44:41.160 DEBUG Plugin loaded: hexo-math</span><br><span class="line">11:44:41.175 DEBUG Plugin loaded: hexo-renderer-ejs</span><br><span class="line">11:44:41.175 DEBUG Plugin loaded: hexo-renderer-marked</span><br><span class="line">11:44:41.175 DEBUG Plugin loaded: hexo-renderer-stylus</span><br><span class="line">11:44:41.269 DEBUG Plugin loaded: hexo-server</span><br><span class="line">11:44:41.285 DEBUG Plugin loaded: hexo-renderer-scss</span><br><span class="line">11:44:41.285 DEBUG [hexo-inject] firing inject_ready</span><br><span class="line">11:44:41.300 DEBUG Loading database.</span><br><span class="line">11:44:41.316 DEBUG [hexo-inject] SKIP: undefined</span><br><span class="line">11:44:41.316 DEBUG Incomplete document</span><br><span class="line">Error: Incomplete document</span><br><span class="line">    at Inject._transform (I:\GitHub\inkydragon.github.io\hexo\node_modules\hexo-inject\lib\mixin\transform.js:29:34)</span><br><span class="line">    at Hexo.tryCatcher (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Hexo.&lt;anonymous&gt; (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\method.js:15:34)</span><br><span class="line">    at I:\GitHub\inkydragon.github.io\hexo\node_modules\hexo\lib\extend\filter.js:68:35</span><br><span class="line">    at tryCatcher (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Object.gotValue (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\reduce.js:155:18)</span><br><span class="line">    at Object.gotAccum (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\reduce.js:144:25)</span><br><span class="line">    at Object.tryCatcher (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\promise.js:512:31)</span><br><span class="line">    at Promise._settlePromise (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\promise.js:569:18)</span><br><span class="line">    at Promise._settlePromiseCtx (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\promise.js:606:10)</span><br><span class="line">    at Async._drainQueue (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\async.js:138:12)</span><br><span class="line">    at Async._drainQueues (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\async.js:143:10)</span><br><span class="line">    at Immediate.Async.drainQueues (I:\GitHub\inkydragon.github.io\hexo\node_modules\bluebird\js\release\async.js:17:14)</span><br><span class="line">    at runCallback (timers.js:672:20)</span><br><span class="line">    at tryOnImmediate (timers.js:645:5)</span><br><span class="line">    at processImmediate [as _immediateCallback] (timers.js:617:5)</span><br></pre></td></tr></table></figure><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Memo List @Week11</title>
      <link href="/Memo-List-Week11/"/>
      <url>/Memo-List-Week11/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><ul><li><p><a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式30分钟入门教程</a></p></li><li><p><a href="https://ruby-china.org/topics/5348" target="_blank" rel="noopener">Rails 技巧之 tap &amp; try</a></p></li><li><p><a href="http://home.pipeline.com/~hbaker1/hakmem/hakmem.html" target="_blank" rel="noopener">MIT HAKMEM</a><br>MIT 黑科技合集</p></li><li><a href="https://zhuanlan.zhihu.com/p/26584669" target="_blank" rel="noopener">学会讲个好故事</a><br>关于科研论文构思</li><li><p><a href="https://zhuanlan.zhihu.com/p/24281841" target="_blank" rel="noopener">色彩空间表示与转换</a><br>色品图的由来，颜色空间相关</p></li><li><p><a href="http://www.tuicool.com/articles/r6ZBN3" target="_blank" rel="noopener">List of Languages that Compile to JS</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Memo List </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>7 Languages in 7 weeks - Io</title>
      <link href="/7-Languages-in-7-weeks-Io/"/>
      <url>/7-Languages-in-7-weeks-Io/</url>
      
        <content type="html"><![CDATA[<blockquote><p>问题不是“我们要干点儿什么”而是“我们有什么不能干”。<br>—— Ferris Bueller</p></blockquote><a id="more"></a><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><p>google搜索 <code>io-lang</code> ，找到官网 <a href="http://iolanguage.org/binaries.html" target="_blank" rel="noopener">io / binaries via jake peck</a><br>下载合适的安装包，按照其中的readme安装。</p><h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><ul><li>没有任何语法糖，核心元素也没有<ul><li>好处：不必记住很多语法</li><li>坏处：难以阅读代码</li></ul></li></ul><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p><strong>Find</strong></p><ul><li>一些Io的示例问题。</li><li>一个可解答问题的Io社区。</li><li>带有Io惯用法的风格指南。<ul><li><a href="https://en.wikibooks.org/wiki/Io_Programming/Io_Style_Guide" target="_blank" rel="noopener">Io Programming/Io Style Guide</a></li></ul></li></ul><p><strong>Answer</strong></p><ul><li><p>对1+1求值，然后对1 + “one”求值。Io是强类型还是弱类型？用代码证实你的答案。</p><ul><li>强类型, 数字不能与字符/字符串进行运算<figure class="highlight plain"><figcaption><span>Io </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Io&gt; 1+1</span><br><span class="line">==&gt; 2</span><br><span class="line">Io&gt; 1+&apos;one&apos;</span><br><span class="line"></span><br><span class="line">  Exception: Number does not respond to &apos;+&apos;&apos;</span><br><span class="line">  ---------</span><br><span class="line">  Number +&apos;                            Command Line 1</span><br><span class="line"></span><br><span class="line">Io&gt; 1+&quot;one&quot;</span><br><span class="line"></span><br><span class="line">  Exception: argument 0 to method &apos;+&apos; must be a Number, not a &apos;Sequence&apos;</span><br><span class="line">  ---------</span><br><span class="line">  message &apos;+&apos; in &apos;Command Line&apos; on line 1</span><br></pre></td></tr></table></figure></li></ul></li><li><p>0是true还是false？空字符串是true还是false？nil是true还是false？用代码证实你的答案。</p><ul><li><p><code>0</code> is <code>true</code></p><figure class="highlight plain"><figcaption><span>Io </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Io&gt; 0 or 0</span><br><span class="line">==&gt; true</span><br></pre></td></tr></table></figure></li><li><p><code>&quot;&quot;</code> is <code>ture</code></p><figure class="highlight plain"><figcaption><span>Io</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Io&gt; &apos;&apos; or &apos;&apos;</span><br><span class="line"></span><br><span class="line">  Exception: Object does not respond to &apos;&apos;&apos;&apos;</span><br><span class="line">  ---------</span><br><span class="line">  Object &apos;&apos;                            Command Line 1</span><br><span class="line"></span><br><span class="line">Io&gt; &quot;&quot; or &quot;&quot;</span><br><span class="line">==&gt; true</span><br></pre></td></tr></table></figure></li><li><p><code>nil</code> is <code>false</code></p><figure class="highlight plain"><figcaption><span>Io </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Io&gt; nil or nil</span><br><span class="line">==&gt; false</span><br></pre></td></tr></table></figure></li></ul></li><li><p>如何知道某个原型都支持哪些槽？</p></li><li>=（等号）、:=（冒号等号）、::=（冒号冒号等号）之间有何区别？你会在什么情况下使用它们？</li></ul><p><strong>Do</strong></p><ul><li>从文件中运行Io程序。</li><li>给定槽的名称，执行该槽中的代码。</li><li>花上点时间熟悉槽和原型。理解原型的运行方式。</li></ul><h1 id="———-Day-1-———"><a href="#———-Day-1-———" class="headerlink" title="——— Day 1 ———"></a>——— Day 1 ———</h1><h1 id="———-Day-2-———"><a href="#———-Day-2-———" class="headerlink" title="——— Day 2 ———"></a>——— Day 2 ———</h1><h1 id="———-Day-3-———"><a href="#———-Day-3-———" class="headerlink" title="——— Day 3 ———"></a>——— Day 3 ———</h1><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Powershell 设置</title>
      <link href="/Powershell-%E8%AE%BE%E7%BD%AE/"/>
      <url>/Powershell-%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>ref:</p><ul><li><a href="http://kaimingwan.com/post/gong-ju/powershellpei-zhi-win10" target="_blank" rel="noopener">powershell配置(win10)</a></li></ul><h1 id="设置常用函数"><a href="#设置常用函数" class="headerlink" title="设置常用函数"></a>设置常用函数</h1><p>通过 <code>$PROFILE</code> 可以查看配置文件路径<br><figure class="highlight ps"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> PSColor;</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo' server</span></span><br><span class="line"><span class="keyword">function</span> hexo-web &#123;</span><br><span class="line">    cd I:\GitHub\inkydragon.github.io\hexo;</span><br><span class="line">    hexo s --debug;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># atom + hexo</span></span><br><span class="line"><span class="keyword">function</span> hexo-write &#123;</span><br><span class="line">    atom I:\GitHub\inkydragon.github.io\hexo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="File-Hash"><a href="#File-Hash" class="headerlink" title="File-Hash"></a>File-Hash</h2><p>自带的 <code>Get-FileHash</code> 不是很好用，每次只能计算一种hash，有了各种hash碰撞.<br>只用一种不安全，于是自己改了一个，支持多文件，多种hash计算的ps脚本。</p><blockquote><p>用的时候在 <code>$PROFILE</code> 里 <code>Import-Module</code> 一下脚本的绝对路径。<br>若权限受限参看 <a href="https://technet.microsoft.com/zh-cn/library/347708dc-1515-4d74-978b-8334603472e6" target="_blank" rel="noopener">about_Execution_Policies</a></p></blockquote><figure class="highlight ps"><figcaption><span>计算文件Hash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#requires -version 4.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#Hash.ps1</span></span><br><span class="line"><span class="comment">#计算文件Hash</span></span><br><span class="line"> </span><br><span class="line">[cmdletbinding()]</span><br><span class="line"><span class="keyword">Param</span>(</span><br><span class="line">[Parameter(Position=<span class="number">0</span>,ValueFromPipeline,ValueFromPipelineByPropertyName)]</span><br><span class="line">[ValidateScript(&#123;<span class="built_in">Test-Path</span> <span class="variable">$_</span>&#125;)]</span><br><span class="line">[Alias(<span class="string">"PSPath"</span>)]</span><br><span class="line">[string]<span class="variable">$Path</span> = <span class="string">'.\'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">Process</span> &#123;</span><br><span class="line">    <span class="built_in">Write-verbose</span> <span class="string">"Testing hashing with $(Convert-Path <span class="variable">$Path</span>)"</span></span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="built_in">Get-item</span> <span class="variable">$path</span>).Length</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$algorithms</span> = <span class="string">"MD5"</span>,<span class="string">"SHA1"</span>,<span class="string">"SHA256"</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$algorithms</span>) &#123;</span><br><span class="line">    (Get-FileHash -Path <span class="variable">$Path</span> -Algorithm <span class="variable">$item</span>)</span><br><span class="line">    &#125; <span class="comment">#foreach</span></span><br><span class="line"> </span><br><span class="line">&#125; <span class="comment">#process</span></span><br></pre></td></tr></table></figure><p>效果对比<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">PS I:\Desktop\TeX\TEST&gt; Get-FileHash .\zh-font.*</span><br><span class="line"></span><br><span class="line">Algorithm       Hash                                                                   Path</span><br><span class="line">---------       ----                                                                   ----</span><br><span class="line">SHA256          3345A075A22FB3BBC04567A1E5660ED0240D53F5881F458A2234DCD42A78D335       I:\Desktop\TeX\TEST\zh-font.aux</span><br><span class="line">SHA256          B73FA579D08F1C8CCADB697E59A3A9850D7BF699DB6B41E158C73F74A25617F7       I:\Desktop\TeX\TEST\zh-font.log</span><br><span class="line">SHA256          57F9FE61DCC291DF186D8BB063D57D9B839AF38E0F14E4DAA4B999F66D09112C       I:\Desktop\TeX\TEST\zh-font.pdf</span><br><span class="line">SHA256          F4F465B8FFDC66371E425EB56B615C8B7394911D158F98E164AC5710667217EE       I:\Desktop\TeX\TEST\zh-font....</span><br><span class="line">SHA256          EC14B68DEF8A03326E0C25A8480277E5CD1B71D682F4B413636D59BC0D23E57C       I:\Desktop\TeX\TEST\zh-font.tex</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PS I:\Desktop\TeX\TEST&gt; Hash .\zh-font.*</span><br><span class="line"></span><br><span class="line">Algorithm       Hash                                                                   Path</span><br><span class="line">---------       ----                                                                   ----</span><br><span class="line">MD5             A94A2480D3289E625EEA47CD1B285758                                       I:\Desktop\TeX\TEST\zh-font.aux</span><br><span class="line">MD5             B265D25275C14CC0A034805094089ABB                                       I:\Desktop\TeX\TEST\zh-font.log</span><br><span class="line">MD5             D0A9E55C056F0182D2AA1DBD3E9EA61D                                       I:\Desktop\TeX\TEST\zh-font.pdf</span><br><span class="line">MD5             4FD3009012737CBA9228A9C4CE17DBCF                                       I:\Desktop\TeX\TEST\zh-font....</span><br><span class="line">MD5             DB28CC20930A6148099491D569BA3F08                                       I:\Desktop\TeX\TEST\zh-font.tex</span><br><span class="line">SHA1            6B43E311DFAE9A1BB7E75DBD93F9EFC541355DB7                               I:\Desktop\TeX\TEST\zh-font.aux</span><br><span class="line">SHA1            EC10912DDBF134498EA514D8DF538FC81303F475                               I:\Desktop\TeX\TEST\zh-font.log</span><br><span class="line">SHA1            67F6C8BA17D7657175236967DE5A9D741829A533                               I:\Desktop\TeX\TEST\zh-font.pdf</span><br><span class="line">SHA1            2466E90627C4E9AFC6C30BA23938C51F629E3FE4                               I:\Desktop\TeX\TEST\zh-font....</span><br><span class="line">SHA1            EF900DD76A0C0EC3190DF68EF577DAF0747C9B73                               I:\Desktop\TeX\TEST\zh-font.tex</span><br><span class="line">SHA256          3345A075A22FB3BBC04567A1E5660ED0240D53F5881F458A2234DCD42A78D335       I:\Desktop\TeX\TEST\zh-font.aux</span><br><span class="line">SHA256          B73FA579D08F1C8CCADB697E59A3A9850D7BF699DB6B41E158C73F74A25617F7       I:\Desktop\TeX\TEST\zh-font.log</span><br><span class="line">SHA256          57F9FE61DCC291DF186D8BB063D57D9B839AF38E0F14E4DAA4B999F66D09112C       I:\Desktop\TeX\TEST\zh-font.pdf</span><br><span class="line">SHA256          F4F465B8FFDC66371E425EB56B615C8B7394911D158F98E164AC5710667217EE       I:\Desktop\TeX\TEST\zh-font....</span><br><span class="line">SHA256          EC14B68DEF8A03326E0C25A8480277E5CD1B71D682F4B413636D59BC0D23E57C       I:\Desktop\TeX\TEST\zh-font.tex</span><br></pre></td></tr></table></figure></p><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>分子模拟与计算化学</title>
      <link href="/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F%E4%B8%8E%E8%AE%A1%E7%AE%97%E5%8C%96%E5%AD%A6/"/>
      <url>/%E5%88%86%E5%AD%90%E6%A8%A1%E6%8B%9F%E4%B8%8E%E8%AE%A1%E7%AE%97%E5%8C%96%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>ref：</p><ul><li><a href="http://bbs.keinsci.com/forum.php" target="_blank" rel="noopener">计算化学公社</a></li><li><a href="http://sobereva.com/" target="_blank" rel="noopener">思想家公社的门口</a></li><li><a href="http://qchem.pw/" target="_blank" rel="noopener">量子化学软件中文网</a></li><li><a href="http://www.quantumchemistry.net/" target="_blank" rel="noopener">quantumchemistry</a></li><li><a href="https://www.zhihu.com/topic/19667110" target="_blank" rel="noopener">计算化学</a></li></ul><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>LAMMPS 的安装与配置</title>
      <link href="/LAMMPS-%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/LAMMPS-%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>先基于腾讯云尝试一下。</p><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><h2 id="doc"><a href="#doc" class="headerlink" title="doc"></a>doc</h2><p>先看文档 <a href="http://lammps.sandia.gov/doc/Section_start.html#start-2-1" target="_blank" rel="noopener">2.2.1. Read this first — LAMMPS documentation</a></p><blockquote><p><strong>If you want to avoid building LAMMPS yourself</strong>, read the preceding section about options available for downloading and installing executables. Details are discussed on the <a href="http://lammps.sandia.gov/download.html" target="_blank" rel="noopener">download page</a>.</p></blockquote><h2 id="Add-Yum-Repository"><a href="#Add-Yum-Repository" class="headerlink" title="Add Yum Repository"></a>Add Yum Repository</h2><p>先看 <a href="http://rpm.lammps.org/install.html" target="_blank" rel="noopener">Configuring the LAMMPS-ICMS Snapshot Repository</a>装一下源 </p><p><strong>Command Line Setup for Fedora, CentOS/RHEL with Yum</strong></p><ul><li>Enabling the repository for Fedora 19, 20, and 21:<br>  <code>su -c &#39;yum localinstall --nogpgcheck http://git.icms.temple.edu/rpm/fedora/lammps-fedora-repo-1-2.noarch.rpm&#39;</code></li><li>Enabling the repository for CentOS or RedHat Enterprise Linux 6.6 and later:<br>  <code>su -c &#39;yum localinstall --nogpgcheck http://git.icms.temple.edu/rpm/centos/lammps-centos-rhel-repo-1-2.noarch.rpm&#39;</code></li></ul><h2 id="LAMMPS-ICMS-RPM-Repository"><a href="#LAMMPS-ICMS-RPM-Repository" class="headerlink" title="LAMMPS-ICMS RPM Repository"></a>LAMMPS-ICMS RPM Repository</h2><blockquote><p>The LAMMPS distribution is split into multiple sub-packages and you only need to install the ones that you need. </p></blockquote><p>到这里<a href="http://rpm.lammps.org/" target="_blank" rel="noopener">LAMMPS-ICMS RPM Repository</a> 挑选需要的sub-packages</p><p>我装了这几个：</p><ul><li>lammps    </li><li>lammps-python    </li><li>lammps-common    </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install lammps lammps-python lammps-common</span><br></pre></td></tr></table></figure><p>剩余的 <code>lammps-doc</code> 是PDF格式的没必要装在服务器上，<code>lammps-openmpi</code>和<code>lammps-mpich</code> 是并行化用的，目前只是试一试，暂时用不上。</p><h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h1><p>ref:</p><ul><li><a href="http://bbs.keinsci.com/forum.php?mod=viewthread&amp;tid=73&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D29" target="_blank" rel="noopener">[Lammps] LAMMPS学习资源整理</a></li><li><a href="http://muchong.com/html/201312/6725835.html" target="_blank" rel="noopener">lammps分子动力学模拟菜鸟入门求助</a></li><li><a href="https://icme.hpc.msstate.edu/mediawiki/index.php/LAMMPS_tutorials" target="_blank" rel="noopener">Internal LAMMPS tutorials</a></li></ul><h2 id="AL"><a href="#AL" class="headerlink" title="AL"></a>AL</h2><ol><li>下载<a href="http://www.ctcms.nist.gov/potentials/Download/Al-YM/Al99.eam.alloy" target="_blank" rel="noopener">Al99.eam.alloy</a></li><li><p>新建文件<code>vim calc_fcc.in</code></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"># Find minimum energy fcc configuration</span><br><span class="line"># Mark Tschopp, 2010</span><br><span class="line"></span><br><span class="line"># ---------- Initialize Simulation --------------------- </span><br><span class="line">clear </span><br><span class="line">units metal </span><br><span class="line">dimension 3 </span><br><span class="line">boundary p p p </span><br><span class="line">atom_style atomic </span><br><span class="line">atom_modify map array</span><br><span class="line"></span><br><span class="line"># ---------- Create Atoms --------------------- </span><br><span class="line">lattice fcc 4</span><br><span class="line">regionbox block 0 1 0 1 0 1 units lattice</span><br><span class="line">create_box1 box</span><br><span class="line"></span><br><span class="line">latticefcc 4 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1  </span><br><span class="line">create_atoms 1 box</span><br><span class="line">replicate 1 1 1</span><br><span class="line"></span><br><span class="line"># ---------- Define Interatomic Potential --------------------- </span><br><span class="line">pair_style eam/alloy </span><br><span class="line">pair_coeff * * Al99.eam.alloy Al</span><br><span class="line">neighbor 2.0 bin </span><br><span class="line">neigh_modify delay 10 check yes </span><br><span class="line"> </span><br><span class="line"># ---------- Define Settings --------------------- </span><br><span class="line">compute eng all pe/atom </span><br><span class="line">compute eatoms all reduce sum c_eng </span><br><span class="line"></span><br><span class="line"># ---------- Run Minimization --------------------- </span><br><span class="line">reset_timestep 0 </span><br><span class="line">fix 1 all box/relax iso 0.0 vmax 0.001</span><br><span class="line">thermo 10 </span><br><span class="line">thermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms </span><br><span class="line">min_style cg </span><br><span class="line">minimize 1e-25 1e-25 5000 10000 </span><br><span class="line"></span><br><span class="line">variable natoms equal &quot;count(all)&quot; </span><br><span class="line">variable teng equal &quot;c_eatoms&quot;</span><br><span class="line">variable length equal &quot;lx&quot;</span><br><span class="line">variable ecoh equal &quot;v_teng/v_natoms&quot;</span><br><span class="line"></span><br><span class="line">print &quot;Total energy (eV) = $&#123;teng&#125;;&quot;</span><br><span class="line">print &quot;Number of atoms = $&#123;natoms&#125;;&quot;</span><br><span class="line">print &quot;Lattice constant (Angstoms) = $&#123;length&#125;;&quot;</span><br><span class="line">print &quot;Cohesive energy (eV) = $&#123;ecoh&#125;;&quot;</span><br><span class="line"></span><br><span class="line">print &quot;All done!&quot;</span><br></pre></td></tr></table></figure></li><li><p>跑起来 <code>lmp_g++ &lt; calc_fcc.in</code></p></li><li>输出 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Total energy (eV) = -13.4399999527351;</span><br><span class="line">Number of atoms = 4;</span><br><span class="line">Lattice constant (Angstoms) = 4.05000466178543;</span><br><span class="line">Cohesive energy (eV) = -3.35999998818377;</span><br><span class="line">All done!</span><br><span class="line">Total wall time: 0:00:00</span><br></pre></td></tr></table></figure></li></ol><p>FIN    </p><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Programming Ruby ver.2</title>
      <link href="/Programming-Ruby-ver-2/"/>
      <url>/Programming-Ruby-ver-2/</url>
      
        <content type="html"><![CDATA[<p>幕布版 <a href="http://mubu.io/doc/SswLzGgZ0" target="_blank" rel="noopener">Programming Ruby —— The Pragmatic Programmer’s Guide​</a></p><a id="more"></a><h1 id="—–-2-Ruby-new-——"><a href="#—–-2-Ruby-new-——" class="headerlink" title="—– 2. Ruby.new ——"></a>—– 2. Ruby.new ——</h1><h2 id="Object-Oriented"><a href="#Object-Oriented" class="headerlink" title="Object-Oriented"></a>Object-Oriented</h2><p>Ruby是一门面向对象的语言。<br>你所操作的每件东西都是对象，操作结果本身也是对象。</p><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p><strong>类</strong>/<code>class</code> 用来表示实体，类是 <strong>状态</strong>/<code>state</code> 和使用这些状态的 <strong>方法</strong>/<code>method</code> 的组合</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>建立了类，需要为每个类创建若干实例。<br><strong>实例/<code>instance</code> == 类的实体/<code>class instance</code> == 对象/<code>object</code></strong></p><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>ruby通过调用 <strong>构造函数</strong>/<code>constructor</code> 来创建对象,标准的构造函数被称为 <code>new</code>.<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">song1 = Song.new(<span class="string">"Ruby Tuesday"</span>)</span><br><span class="line">song2 = Song.new(<span class="string">"Enveloped in Python"</span>)</span><br><span class="line"><span class="comment"># and so on</span></span><br></pre></td></tr></table></figure></p><p>以上的实例都是从相同的类派生出来的，他们具有各异的特征：  </p><ul><li>每个对象有 <strong>唯一的对象标识符</strong>/<code>object identifier/Obj ID</code></li><li>可定义 <strong>实例变量</strong>/<code>instance variable</code>  <ul><li>变量的值对每个实例来说是唯一的</li><li>每个实例都持有对象的 <strong>状态</strong>/<code>state</code></li></ul></li></ul><h3 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h3><p>可以为每个类定义 <strong>实例方法</strong>/<code>instance method</code>.<br>每个方法都是一组功能，他们可能在类的内部or外部被调用,实例方法用来访问对象的实例变量及其状态。</p><h3 id="消息"><a href="#消息" class="headerlink" title="消息"></a>消息</h3><p>方法用过向对象发送 <strong>消息</strong>/<code>message</code> 来唤起调用。<br>消息包含方法名称以及方法可能需要的参数。当对象接收到一条消息是，他会在自己的类中查找相应的方法：</p><ul><li>找到了方法会被执行</li><li>没找到….</li></ul><h3 id="接收器"><a href="#接收器" class="headerlink" title="接收器"></a>接收器</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):001:0&gt;</span> <span class="string">"gin joint"</span>.length</span><br><span class="line">=&gt; <span class="number">9</span></span><br><span class="line"><span class="meta">irb(main):002:0&gt;</span> <span class="string">"Rick"</span>.index(<span class="string">"c"</span>)</span><br><span class="line">=&gt; <span class="number">2</span></span><br><span class="line"><span class="meta">irb(main):003:0&gt;</span> -<span class="number">1942</span>.abs</span><br><span class="line">=&gt; <span class="number">1942</span></span><br></pre></td></tr></table></figure><p>以上代码中<code>.</code> 之前的东西称为 <strong>接收者</strong>/<code>receiver</code>，之后是被调用的方法。<br>在其他语言中 Ex: Java 你需要另一个函数来处理绝对值，并回传结果。而Ruby中 绝对值方法內建在number类中，只需发送一个abs消息给 number 就能得到绝对值。</p><p>所以我们说——Ruby是一门真正的面向对象的语言。</p><hr><h2 id="Some-Basic"><a href="#Some-Basic" class="headerlink" title="Some Basic"></a>Some Basic</h2><p>Ruby 的语法很干净：</p><ul><li>不需要语句结束的分号</li><li>注释由<code>#</code>开始,行尾结束</li><li>缩进排版不重要</li><li>不必声明变量</li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p><strong>方法</strong>/<code>method</code> 由<code>def</code>关键字定义，后接方法名和括号中的参数，用end结束方法。<br>(实际上,定义中的括号是可选的)<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_goodnight</span><span class="params">(name)</span></span></span><br><span class="line">  result = <span class="string">"Good night, "</span> + name</span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"># time for bed...</span></span><br><span class="line">puts say_goodnight(<span class="string">"John-Boy"</span>)</span><br><span class="line">puts say_goodnight(<span class="string">"Marry-Ellen"</span>)</span><br><span class="line"></span><br><span class="line">=&gt; Good night, John-Boy</span><br><span class="line">=&gt; Good night, Marry-Ellen</span><br></pre></td></tr></table></figure></p><p><code>puts</code> 方法输出一行+回车</p><h3 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h3><p><strong>字面量/literals</strong>，及一组单引号或双引号之间的字符序列:</p><ul><li>Ruby对单引号处理的较少</li><li>对双引号处理的较多<ul><li>处理转义序列 ：<code>\n</code></li><li>处理 <strong>内插表达式</strong>/<code>expression interpolation</code>：<code>#{表达式}</code></li><li>如果表达式是一个 全局实例or类变量，则不需要大括号</li></ul></li></ul><h3 id="内插表达式"><a href="#内插表达式" class="headerlink" title="内插表达式"></a>内插表达式</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_goodnight</span><span class="params">(name)</span></span></span><br><span class="line">  result = <span class="string">"Good night, <span class="subst">#&#123;name&#125;</span>"</span></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">puts say_goodnight(<span class="string">"Pa"</span>)</span><br><span class="line"></span><br><span class="line">=&gt; Good night, Pa</span><br></pre></td></tr></table></figure><p>可以把任意的复杂表达式放在<code>#{...}</code>结构中。<br>一下代码调用了字符串的capitalize方法，把首字母转为大写<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_goodnight</span><span class="params">(name)</span></span></span><br><span class="line">  result = <span class="string">"Good night, <span class="subst">#&#123;name.capitalize&#125;</span>"</span></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">puts say_goodnight(<span class="string">"uncle"</span>)</span><br><span class="line"></span><br><span class="line">=&gt; Good night, Uncle</span><br></pre></td></tr></table></figure></p><hr><h1 id="—-5-Stand-Types-—–"><a href="#—-5-Stand-Types-—–" class="headerlink" title="— 5. Stand Types —–"></a>— 5. Stand Types —–</h1><blockquote><p>Ruby 中的基本类型：<br><strong>数字</strong>/<code>number</code>、<strong>字符串</strong>/<code>string</code>、<strong>区间</strong>/<code>range</code>和 <strong>正则表达式</strong>/<code>regular expression</code></p></blockquote><h2 id="Numbers"><a href="#Numbers" class="headerlink" title="Numbers"></a>Numbers</h2><p>Ruby 支持整数和浮点数。</p><blockquote><p>整数可以是任何的长度，其最大值取决于系统的最大可用内存。</p></blockquote><p>一定范围内的整数 [$-20^30$ ~ $20^30-1$ or $-20^62$ ~ $2^62-1$] 是 <code>Fixnum</code> 类的对象，而这个范围之外的整数储存在 <code>Bignum</code> 类中。</p><p><strong>进制的表示</strong></p><p>一些可选的 <strong>前导符</strong>：</p><ul><li><code>0</code> 表示八进制</li><li><code>0d</code> 表示十进制[默认]</li><li><code>0x</code> 表示十六进制</li><li><code>0b</code> 表示二进制 </li></ul><p><strong>一些字符的整数值</strong></p><ul><li>控制字符 <code>?\C-x</code><br>  即 <code>Ctrl+x</code></li><li>元字符   <code>?\M-x</code><br>  即 <code>Alt+x</code></li><li>元字符和控制字符的组合 <code>?\M-\C-x</code><br>  即 <code>Ctrl+Alt+x</code></li><li>反斜杠   <code>?\\</code></li></ul><p><strong>小数与幂</strong></p><blockquote><p>带小数点的数字和幂的字面量被转换为浮点对象。<br>Ex: 1.0e3<br>    not <del>1.e3</del> &lt;- Ruby会调用 <code>Fixnum</code> 类的 <code>e3</code>方法</p></blockquote><p>所有数字都是对象，并且可以相应各种消息。</p><p><strong>整数的迭代器</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.times &#123;print <span class="string">"x "</span>&#125;                <span class="comment">#=&gt;x x x =&gt; 3</span></span><br><span class="line"><span class="number">1</span>.upto(<span class="number">5</span>) &#123;<span class="params">|i|</span> print i, <span class="string">" "</span>&#125;        <span class="comment">#=&gt;1 2 3 4 5 =&gt; 1</span></span><br><span class="line"><span class="number">99</span>.downto(<span class="number">95</span>) &#123;<span class="params">|i|</span> print i, <span class="string">" "</span>&#125;    <span class="comment">#=&gt;99 98 97 96 95 =&gt; 99</span></span><br><span class="line"><span class="number">50</span>.step(<span class="number">80</span>, <span class="number">5</span>)&#123;<span class="params">|i|</span> print i, <span class="string">" "</span>&#125;    <span class="comment">#=&gt;50 55 60 65 70 75 80 =&gt; 50</span></span><br></pre></td></tr></table></figure><blockquote><p>包含数字的字符串不能隐式转换为数字。</p></blockquote><p>Ex: A+B Program<br><figure class="highlight plain"><figcaption><span>Input</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">5 6</span><br><span class="line">7 8</span><br></pre></td></tr></table></figure></p><p>直接相加不行<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ARGF.each <span class="keyword">do</span> <span class="params">|line|</span></span><br><span class="line">  v1, v2 = line.split <span class="comment"># split line on space</span></span><br><span class="line">  print v1 + v2, <span class="string">" "</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#=&gt;34 56 78</span></span><br></pre></td></tr></table></figure></p><p>要将字符转化为整数。可用 <code>str.to_i</code> 或 <code>Integer(str)</code> 方法<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ARGF.each <span class="keyword">do</span> <span class="params">|line|</span></span><br><span class="line">  v1, v2 = line.split <span class="comment"># split line on space</span></span><br><span class="line">  print v1.to_i + v2.to_i, <span class="string">" "</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#=&gt;7 11 15</span></span><br></pre></td></tr></table></figure></p><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><hr><h1 id="—-15-Ruby-shell-—–"><a href="#—-15-Ruby-shell-—–" class="headerlink" title="— 15. Ruby shell —–"></a>— 15. Ruby shell —–</h1><h2 id="Tab-Completion"><a href="#Tab-Completion" class="headerlink" title="Tab Completion"></a>Tab Completion</h2><p>ref:</p><ul><li><a href="http://ruby-doc.org/stdlib-2.0.0/libdoc/irb/rdoc/IRB.html" target="_blank" rel="noopener">Module: IRB (Ruby 2.0.0)</a></li><li><a href="https://gist.github.com/marioaquino/738897/3dfea80e81cc86fc82a386b3d0162f0c8df4c9bb" target="_blank" rel="noopener">marioaquino/.irbrc</a></li><li><a href="http://cookoo.iteye.com/blog/28781" target="_blank" rel="noopener">加强版irb</a></li></ul><h2 id="ri-in-irb"><a href="#ri-in-irb" class="headerlink" title="ri in irb"></a>ri in irb</h2><p>在 <code>~/.irbrc</code>中添加<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ri</span><span class="params">(*names)</span></span>  </span><br><span class="line">  system(<span class="string">%&#123;ri.bat <span class="subst">#&#123;names.map&#123; <span class="params">|name|</span> name.to_s&#125;</span>.join(" ")&#125;</span>&#125;)  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>可以实现在<code>irb</code>中直接调用<code>ri</code></p><h3 id="ri-amp-rdoc"><a href="#ri-amp-rdoc" class="headerlink" title="ri &amp; rdoc"></a>ri &amp; rdoc</h3><p>为了愉快的使用<code>ri</code>首先要生成<code>rdoc</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem rdoc --all --ri --no-rdoc</span><br></pre></td></tr></table></figure></p><p>然而只生成了部分文档，还得再找找方法 </p><p><a href="http://stackoverflow.com/questions/15697209/getting-ruby-documentation-from-command-line" target="_blank" rel="noopener">Getting Ruby documentation from command line? [duplicate]</a></p><p>看来需要更新/下载<code>rdoc</code>,执行<code>gem install rdoc-data</code>和<code>rdoc-data --install</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">I:\Ruby&gt;gem install rdoc-data</span><br><span class="line">Fetching: rdoc-data-4.1.0.gem (100%)</span><br><span class="line">rdoc-data is only required for C ruby 1.8.7 or 1.9.1.</span><br><span class="line"></span><br><span class="line">rdoc-data is required for JRuby.</span><br><span class="line"></span><br><span class="line">To install ri data for RDoc 4.0+ run:</span><br><span class="line"></span><br><span class="line">  rdoc-data --install</span><br><span class="line"></span><br><span class="line">Successfully installed rdoc-data-4.1.0</span><br><span class="line">Parsing documentation for rdoc-data-4.1.0</span><br><span class="line">Installing ri documentation for rdoc-data-4.1.0</span><br><span class="line">Done installing documentation for rdoc-data after 0 seconds</span><br></pre></td></tr></table></figure><p>测试 <code>ri String</code> 和 <code>ri Proc</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">I:\Ruby&gt;ri String</span><br><span class="line">String &lt; Object</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Includes:</span><br><span class="line">Comparable (from ruby core)</span><br><span class="line"></span><br><span class="line">(from ruby core)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.... many lines ....</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">I:\Ruby&gt;ri Proc</span><br><span class="line">Proc &lt; Object</span><br><span class="line"></span><br><span class="line">(from ruby core)</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Proc objects are blocks of code that have been bound to a set of local</span><br><span class="line">variables. Once bound, the code may be called in different contexts and still</span><br><span class="line">access those variables.</span><br></pre></td></tr></table></figure></p><h2 id="gen-server’-bug"><a href="#gen-server’-bug" class="headerlink" title="gen server’ bug"></a>gen server’ bug</h2><p>在检查文档状态时发现了个小bug</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I:\Ruby&gt;gem server</span><br><span class="line">Server started at http://[::]:8808</span><br><span class="line">Server started at http://0.0.0.0:8808</span><br></pre></td></tr></table></figure><p>事实上应该是 <code>http://localhost:8808</code></p><p>搜了一下是已存在的bug<br><a href="https://github.com/rubygems/rubygems/issues/1303" target="_blank" rel="noopener"><code>gem server</code> seems to not REALLY be doing what it says the defaults are</a></p><p>##</p><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      <categories>
          
          <category> Books </category>
          
          <category> 编程 </category>
          
          <category> Programming Ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>texlive2016 更新问题</title>
      <link href="/texlive2016-%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/"/>
      <url>/texlive2016-%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>手贱，在图形界面更新了所有的可更新宏包。</p><p>然后编译文档就炸了。<br><img src="/texlive2016-更新问题/tex1.jpg" title="编译伪helloworld爆炸"></p><p>报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">! Missing \endcsname inserted. &lt;to be read again&gt; </span><br><span class="line">\def  l.252 ...   \UnicodeEncodingName &#123;&#125;&#123;&quot;007E&#125;</span><br><span class="line">?</span><br></pre></td></tr></table></figure></p><p>google之，找到<br><a href="https://tex.stackexchange.com/questions/357690/missing-endcsname-inserted-to-be-read-again-def-l-252-unicodeencodin" target="_blank" rel="noopener">! Missing \endcsname inserted. <to be="" read="" again=""> \def l.252 … \UnicodeEncodingName {}{“007E}</to></a></p><p>内面要求在 <code>texlive\2016\texmf-dist\scripts\texlive</code>下执行 <code>fmtutil-sys -all</code> 试过了并不好使</p><p>报错<br><img src="/texlive2016-更新问题/err1.jpg" title="fmtutil-sys爆炸"><br><img src="/texlive2016-更新问题/err2.png" title="fmtutil-sys爆炸"></p><p>然后各种关键词搜来搜去，就是找不到有效的解决方法。</p><p>some ref:</p><ul><li><a href="https://tex.stackexchange.com/questions/358404/fontspec-error-on-basictex-missing-endcsname-inserted" target="_blank" rel="noopener">fontspec error on BasicTeX (missing \endcsname inserted)</a><br>  |- 这一篇提到了版本问题。说latex2e的版本太老了。</li></ul><p>我去翻了翻日志发现latex2e的版本确实是没更新，估计是缓存的锅。然后就准备删掉缓存。</p><p>查texlive手册，知：</p><blockquote><p><code>TEXMFVAR</code> 这个目录是给 <code>texconfig、updmap 和 fmtutil</code> 存储 (缓存) 格式文件、生成 map 文件这类运行时个人数据的。 </p><p><code>TEXMFSYSVAR</code> 给 <code>texconfig-sys、updmap-sys 和 fmtutil-sys 还有 tlmgr</code> 这几个命令存储、缓存运行时使用的格式文件和生成的 map 文件，对整个系统都有效。</p><p><code>TEXMFCACHE</code> <code>ConTeXt MkIV 和 LuaLaTeX</code> 用来保存 (缓存的) 运行时数据的目录树；缺省为 <code>TEXMFSYSVAR</code>，如果该目录不可写，则使用 <code>TEXMFVAR</code>。</p></blockquote><p>然后我就在 <strong>备份</strong> 之后删了<code>TEXMFVAR</code>目录</p><p>重新运行 <code>fmtutil-sys -all</code> 成功。<br><img src="/texlive2016-更新问题/su.png"></p><p>但编译文件是提示找不到字体缓存，尝试 <code>fc-cache</code><br>报错，提示 找不到缓存<br><img src="/texlive2016-更新问题/err4.png"></p><p>遂恢复字体缓存及其配置文件<br><img src="/texlive2016-更新问题/fc.png"></p><p>然后在重建缓存 <code>fc-cache</code> 成功</p><p>最后生成map及Hash文件 【可选】<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">updmap-sys</span><br><span class="line"></span><br><span class="line">texhash</span><br></pre></td></tr></table></figure></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">F:\<span class="title">study</span>\<span class="title">texlive</span>\2016\<span class="title">texmf</span>-<span class="title">dist</span>\<span class="title">scripts</span>\<span class="title">texlive</span>&gt;<span class="title">updmap</span>-<span class="title">sys</span></span></span><br><span class="line"><span class="function"><span class="title">updmap</span> <span class="title">will</span> <span class="title">read</span> <span class="title">the</span> <span class="title">following</span> <span class="title">updmap.cfg</span> <span class="title">files</span> (<span class="title">in</span> <span class="title">precedence</span> <span class="title">order</span>):</span></span><br><span class="line"><span class="function">  <span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">dist</span>/<span class="title">web2c</span>/<span class="title">updmap.cfg</span></span></span><br><span class="line"><span class="function"><span class="title">updmap</span> <span class="title">may</span> <span class="title">write</span> <span class="title">changes</span> <span class="title">to</span> <span class="title">the</span> <span class="title">following</span> <span class="title">updmap.cfg</span> <span class="title">file</span>:</span></span><br><span class="line"><span class="function">  <span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">config</span>/<span class="title">web2c</span>/<span class="title">updmap.cfg</span></span></span><br><span class="line"><span class="function"><span class="title">dvips</span> <span class="title">output</span> <span class="title">dir</span>: "<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">fonts</span>/<span class="title">map</span>/<span class="title">dvips</span>/<span class="title">updmap</span>"</span></span><br><span class="line"><span class="function"><span class="title">pdftex</span> <span class="title">output</span> <span class="title">dir</span>: "<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">fonts</span>/<span class="title">map</span>/<span class="title">pdftex</span>/<span class="title">updmap</span>"</span></span><br><span class="line"><span class="function"><span class="title">dvipdfmx</span> <span class="title">output</span> <span class="title">dir</span>: "<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">fonts</span>/<span class="title">map</span>/<span class="title">dvipdfmx</span>/<span class="title">updmap</span>"</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">updmap</span> <span class="title">is</span> <span class="title">creating</span> <span class="title">new</span> <span class="title">map</span> <span class="title">files</span></span></span><br><span class="line"><span class="function"><span class="title">using</span> <span class="title">the</span> <span class="title">following</span> <span class="title">configuration</span>:</span></span><br><span class="line"><span class="function">  <span class="title">LW35</span> <span class="title">font</span> <span class="title">names</span>                  : <span class="title">URWkb</span> (<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">dist</span>/<span class="title">web2c</span>/<span class="title">updmap.cfg</span>)</span></span><br><span class="line"><span class="function">  <span class="title">prefer</span> <span class="title">outlines</span>                  : <span class="title">true</span> (<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">dist</span>/<span class="title">web2c</span>/<span class="title">updmap.cfg</span>)</span></span><br><span class="line"><span class="function">  <span class="title">texhash</span> <span class="title">enabled</span>                  : <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">download</span> <span class="title">standard</span> <span class="title">fonts</span> (<span class="title">dvips</span>)  : <span class="title">true</span> (<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">dist</span>/<span class="title">web2c</span>/<span class="title">updmap.cfg</span>)</span></span><br><span class="line"><span class="function">  <span class="title">download</span> <span class="title">standard</span> <span class="title">fonts</span> (<span class="title">pdftex</span>) : <span class="title">true</span> (<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">dist</span>/<span class="title">web2c</span>/<span class="title">updmap.cfg</span>)</span></span><br><span class="line"><span class="function">  <span class="title">jaEmbed</span> <span class="title">replacement</span> <span class="title">string</span>       : <span class="title">ipaex</span> (<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">dist</span>/<span class="title">web2c</span>/<span class="title">updmap.cfg</span>)</span></span><br><span class="line"><span class="function">  <span class="title">jaVariant</span> <span class="title">replacement</span> <span class="title">string</span>     : &lt;<span class="title">empty</span>&gt; (<span class="title">default</span>)</span></span><br><span class="line"><span class="function">  <span class="title">scEmbed</span> <span class="title">replacement</span> <span class="title">string</span>       : <span class="title">noEmbed</span> (<span class="title">default</span>)</span></span><br><span class="line"><span class="function">  <span class="title">tcEmbed</span> <span class="title">replacement</span> <span class="title">string</span>       : <span class="title">noEmbed</span> (<span class="title">default</span>)</span></span><br><span class="line"><span class="function">  <span class="title">koEmbed</span> <span class="title">replacement</span> <span class="title">string</span>       : <span class="title">noEmbed</span> (<span class="title">default</span>)</span></span><br><span class="line"><span class="function">  <span class="title">create</span> <span class="title">a</span> <span class="title">mapfile</span> <span class="title">for</span> <span class="title">pxdvi</span>       : <span class="title">false</span> (<span class="title">default</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Scanning</span> <span class="title">for</span> <span class="title">LW35</span> <span class="title">support</span> <span class="title">files</span>  [  3 <span class="title">files</span>]</span></span><br><span class="line"><span class="function"><span class="title">Scanning</span> <span class="title">for</span> <span class="title">MixedMap</span> <span class="title">entries</span>    [ 44 <span class="title">files</span>]</span></span><br><span class="line"><span class="function"><span class="title">Scanning</span> <span class="title">for</span> <span class="title">KanjiMap</span> <span class="title">entries</span>    [ 11 <span class="title">files</span>]</span></span><br><span class="line"><span class="function"><span class="title">Scanning</span> <span class="title">for</span> <span class="title">Map</span> <span class="title">entries</span>         [265 <span class="title">files</span>]</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Generating</span> <span class="title">output</span> <span class="title">for</span> <span class="title">dvipdfmx</span>...</span></span><br><span class="line"><span class="function"><span class="title">Generating</span> <span class="title">output</span> <span class="title">for</span> <span class="title">ps2pk</span>...</span></span><br><span class="line"><span class="function"><span class="title">Generating</span> <span class="title">output</span> <span class="title">for</span> <span class="title">dvips</span>...</span></span><br><span class="line"><span class="function"><span class="title">Generating</span> <span class="title">output</span> <span class="title">for</span> <span class="title">pdftex</span>...</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Files</span> <span class="title">generated</span>:</span></span><br><span class="line"><span class="function">  <span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">fonts</span>/<span class="title">map</span>/<span class="title">dvips</span>/<span class="title">updmap</span>:</span></span><br><span class="line"><span class="function">       16049 2017-04-23 15:24:49 <span class="title">builtin35.map</span></span></span><br><span class="line"><span class="function">       21523 2017-04-23 15:24:49 <span class="title">download35.map</span></span></span><br><span class="line"><span class="function">     2113917 2017-04-23 15:24:51 <span class="title">psfonts_pk.map</span></span></span><br><span class="line"><span class="function">     2379298 2017-04-23 15:24:50 <span class="title">psfonts_t1.map</span></span></span><br><span class="line"><span class="function">     2373949 2017-04-23 15:24:49 <span class="title">ps2pk.map</span></span></span><br><span class="line"><span class="function">     2379298 2017-04-23 15:24:50 <span class="title">psfonts.map</span> = <span class="title">psfonts_t1.map</span></span></span><br><span class="line"><span class="function">  <span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">fonts</span>/<span class="title">map</span>/<span class="title">pdftex</span>/<span class="title">updmap</span>:</span></span><br><span class="line"><span class="function">     2373956 2017-04-23 15:24:53 <span class="title">pdftex_dl14.map</span></span></span><br><span class="line"><span class="function">     2372291 2017-04-23 15:24:52 <span class="title">pdftex_ndl14.map</span></span></span><br><span class="line"><span class="function">     2373956 2017-04-23 15:24:53 <span class="title">pdftex.map</span> = <span class="title">pdftex_dl14.map</span></span></span><br><span class="line"><span class="function">  <span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">fonts</span>/<span class="title">map</span>/<span class="title">dvipdfmx</span>/<span class="title">updmap</span>:</span></span><br><span class="line"><span class="function">        8055 2017-04-23 15:24:48 <span class="title">kanjix.map</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Transcript</span> <span class="title">written</span> <span class="title">on</span> "<span class="title">f</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">web2c</span>/<span class="title">updmap.log</span>".</span></span><br><span class="line"><span class="function"><span class="title">updmap</span>: <span class="title">Updating</span> <span class="title">ls</span>-<span class="title">R</span> <span class="title">files</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">F</span>:\<span class="title">study</span>\<span class="title">texlive</span>\2016\<span class="title">texmf</span>-<span class="title">dist</span>\<span class="title">scripts</span>\<span class="title">texlive</span>&gt;<span class="title">texhash</span></span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Updating</span> <span class="title">F</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">config</span>/<span class="title">ls</span>-<span class="title">R</span>...</span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Updated</span> <span class="title">F</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">config</span>/<span class="title">ls</span>-<span class="title">R</span>.</span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Updating</span> <span class="title">F</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">ls</span>-<span class="title">R</span>...</span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Updated</span> <span class="title">F</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">var</span>/<span class="title">ls</span>-<span class="title">R</span>.</span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Updating</span> <span class="title">F</span>:/<span class="title">study</span>/<span class="title">texlive</span>/<span class="title">texmf</span>-<span class="title">local</span>/<span class="title">ls</span>-<span class="title">R</span>...</span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Updated</span> <span class="title">F</span>:/<span class="title">study</span>/<span class="title">texlive</span>/<span class="title">texmf</span>-<span class="title">local</span>/<span class="title">ls</span>-<span class="title">R</span>.</span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Updating</span> <span class="title">F</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">dist</span>/<span class="title">ls</span>-<span class="title">R</span>...</span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Updated</span> <span class="title">F</span>:/<span class="title">study</span>/<span class="title">texlive</span>/2016/<span class="title">texmf</span>-<span class="title">dist</span>/<span class="title">ls</span>-<span class="title">R</span>.</span></span><br><span class="line"><span class="function"><span class="title">texhash</span>: <span class="title">Done</span>.</span></span><br></pre></td></tr></table></figure><p>至此，texlive修复完毕</p>]]></content>
      
      
      
        <tags>
            
            <tag> texlive </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>可爱的小姐姐~ Ruby!</title>
      <link href="/%E5%8F%AF%E7%88%B1%E7%9A%84%E5%B0%8F%E5%A7%90%E5%A7%90-Ruby/"/>
      <url>/%E5%8F%AF%E7%88%B1%E7%9A%84%E5%B0%8F%E5%A7%90%E5%A7%90-Ruby/</url>
      
        <content type="html"><![CDATA[<p>Seven Languages in Seven Weeks: Ruby, Day 1-3 FULL</p><img src="/可爱的小姐姐-Ruby/ruby.jpg" title="Just For Fun ! —— Ruby"><a id="more"></a><blockquote><p>有糖相伴好下药。 ——Mary Poppins</p></blockquote><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><p><a href="https://www.ruby-lang.org/zh_cn/downloads/" target="_blank" rel="noopener">下载 Ruby</a></p><p>每个流行的平台都有多种工具可用于安装 Ruby：</p><ul><li>Linux/UNIX 平台，可以使用第三方工具（如 rbenv 或 RVM）或使用系统中的包管理系统。</li><li>OS X 平台，可以使用第三方工具（如 rbenv 或 RVM）。</li><li>Windows 平台，可以使用 <a href="https://rubyinstaller.org/downloads/" target="_blank" rel="noopener">RubyInstaller</a>。</li></ul><h1 id="———-Day-1-———"><a href="#———-Day-1-———" class="headerlink" title="——— Day 1 ———"></a>——— Day 1 ———</h1><h1 id="Ruby’properties"><a href="#Ruby’properties" class="headerlink" title="Ruby’properties"></a>Ruby’properties</h1><ul><li>Ruby is object oriented</li><li>Ruby is duck typed</li><li>Ruby is productive</li></ul><h1 id="Notes："><a href="#Notes：" class="headerlink" title="Notes："></a>Notes：</h1><h2 id="Ruby初体验"><a href="#Ruby初体验" class="headerlink" title="Ruby初体验"></a>Ruby初体验</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):001:0&gt;</span> puts <span class="string">'hello, world'</span></span><br><span class="line">hello, world</span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):002:0&gt;</span> languages = <span class="string">'Ruby'</span></span><br><span class="line">=&gt; <span class="string">"Ruby"</span></span><br><span class="line"><span class="meta">irb(main):003:0&gt;</span> puts <span class="string">"hello, <span class="subst">#&#123;languages&#125;</span>"</span></span><br><span class="line">hello, Ruby</span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):004:0&gt;</span> languages = <span class="string">'my Ruby'</span></span><br><span class="line">=&gt; <span class="string">"my Ruby"</span></span><br><span class="line"><span class="meta">irb(main):005:0&gt;</span> puts <span class="string">"hello, <span class="subst">#&#123;languages&#125;</span>"</span></span><br><span class="line">hello, my Ruby</span><br><span class="line">=&gt; nil</span><br></pre></td></tr></table></figure><p>Note:</p><ul><li>Ruby 是解释执行的</li><li>Ruby 不需要预先声明变量</li><li>每条 Ruby 语句都有返回值</li></ul><h2 id="Ruby-的编程模型"><a href="#Ruby-的编程模型" class="headerlink" title="Ruby 的编程模型"></a>Ruby 的编程模型</h2><p>Point: Ruby 是一门纯面向对象的语言。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):006:0&gt;</span> <span class="number">4</span></span><br><span class="line">=&gt; <span class="number">4</span></span><br><span class="line"><span class="meta">irb(main):007:0&gt;</span> <span class="number">4</span>.class</span><br><span class="line">=&gt; Integer</span><br><span class="line"><span class="meta">irb(main):008:0&gt;</span> <span class="number">4</span>+<span class="number">8</span></span><br><span class="line">=&gt; <span class="number">12</span></span><br><span class="line"><span class="meta">irb(main):009:0&gt;</span> <span class="number">4</span>.methods</span><br><span class="line">=&gt; [<span class="symbol">:%</span>, <span class="symbol">:&amp;</span>, <span class="symbol">:*</span>, <span class="symbol">:+</span>, <span class="symbol">:-</span>, <span class="symbol">:/</span>, <span class="symbol">:&lt;</span>, <span class="symbol">:&gt;</span>, <span class="symbol">:^</span>, <span class="symbol">:|</span>, <span class="symbol">:~</span>, <span class="symbol">:-@</span>, <span class="symbol">:**</span>, <span class="symbol">:&lt;=&gt;</span>, <span class="symbol">:&lt;&lt;</span>, <span class="symbol">:&gt;&gt;</span>, <span class="symbol">:&lt;=</span>, <span class="symbol">:&gt;=</span>, <span class="symbol">:==</span>, <span class="symbol">:===</span>, <span class="symbol">:[]</span>, <span class="symbol">:inspect</span>, <span class="symbol">:size</span>, <span class="symbol">:succ</span>, <span class="symbol">:to_int</span>, <span class="symbol">:to_s</span>, <span class="symbol">:to_i</span>, <span class="symbol">:to_f</span>, <span class="symbol">:next</span>, <span class="symbol">:div</span>, <span class="symbol">:upto</span>, <span class="symbol">:chr</span>,</span><br><span class="line"><span class="symbol">:ord</span>, <span class="symbol">:coerce</span>, <span class="symbol">:divmod</span>, <span class="symbol">:fdiv</span>, <span class="symbol">:modulo</span>, <span class="symbol">:remainder</span>, <span class="symbol">:abs</span>, <span class="symbol">:magnitude</span>, <span class="symbol">:integer?</span>, <span class="symbol">:floor</span>, <span class="symbol">:ceil</span>, <span class="symbol">:round</span>, <span class="symbol">:truncate</span>, <span class="symbol">:odd?</span>, <span class="symbol">:even?</span>, <span class="symbol">:downto</span>, <span class="symbol">:times</span>, <span class="symbol">:pred</span>, <span class="symbol">:bit_length</span>, <span class="symbol">:digits</span>, <span class="symbol">:to_r</span>, <span class="symbol">:numerator</span>, <span class="symbol">:denominator</span>, <span class="symbol">:rationalize</span>, <span class="symbol">:gcd</span>, <span class="symbol">:lcm</span>, <span class="symbol">:gcdlcm</span>, <span class="symbol">:+@</span>, <span class="symbol">:eql?</span>, <span class="symbol">:singleton_method_added</span>, <span class="symbol">:i</span>, <span class="symbol">:real?</span>, <span class="symbol">:zero?</span>, <span class="symbol">:nonzero?</span>, <span class="symbol">:finite?</span>, <span class="symbol">:infinite?</span>, <span class="symbol">:step</span>, <span class="symbol">:positive?</span>, <span class="symbol">:negative?</span>, <span class="symbol">:quo</span>, <span class="symbol">:arg</span>, <span class="symbol">:rectangular</span>, <span class="symbol">:rect</span>, <span class="symbol">:polar</span>, <span class="symbol">:real</span>, <span class="symbol">:imaginary</span>, <span class="symbol">:imag</span>, <span class="symbol">:abs2</span>, <span class="symbol">:angle</span>, <span class="symbol">:phase</span>, <span class="symbol">:conjugate</span>, <span class="symbol">:conj</span>, <span class="symbol">:to_c</span>, <span class="symbol">:between?</span>, <span class="symbol">:clamp</span>, <span class="symbol">:instance_of?</span>, <span class="symbol">:kind_of?</span>, <span class="symbol">:is_a?</span>, <span class="symbol">:tap</span>,</span><br><span class="line"><span class="symbol">:public_send</span>, <span class="symbol">:define_singleton_method</span>, <span class="symbol">:method</span>, <span class="symbol">:public_method</span>, <span class="symbol">:remove_instance_variable</span>, <span class="symbol">:instance_variable_set</span>, <span class="symbol">:singleton_method</span>, <span class="symbol">:extend</span>, <span class="symbol">:to_enum</span>, <span class="symbol">:enum_for</span>, <span class="symbol">:=~</span>, <span class="symbol">:</span>!~, <span class="symbol">:respond_to?</span>, <span class="symbol">:freeze</span>, <span class="symbol">:object_id</span>, <span class="symbol">:send</span>, <span class="symbol">:display</span>, <span class="symbol">:nil?</span>, <span class="symbol">:hash</span>, <span class="symbol">:class</span>, <span class="symbol">:singleton_class</span>, <span class="symbol">:clone</span>, <span class="symbol">:dup</span>, <span class="symbol">:itself</span>, <span class="symbol">:taint</span>, <span class="symbol">:tainted?</span>, <span class="symbol">:untaint</span>, <span class="symbol">:untrust</span>, <span class="symbol">:untrusted?</span>, <span class="symbol">:trust</span>, <span class="symbol">:frozen?</span>,</span><br><span class="line"><span class="symbol">:methods</span>, <span class="symbol">:singleton_methods</span>, <span class="symbol">:protected_methods</span>, <span class="symbol">:private_methods</span>, <span class="symbol">:public_methods</span>, <span class="symbol">:instance_variable_get</span>, <span class="symbol">:instance_variables</span>, <span class="symbol">:instance_variable_defined?</span>, <span class="symbol">:</span>!, <span class="symbol">:</span>!=, <span class="symbol">:__send__</span>, <span class="symbol">:equal?</span>, <span class="symbol">:instance_eval</span>, <span class="symbol">:instance_exec</span>, <span class="symbol">:__id__</span>]</span><br></pre></td></tr></table></figure><p>Note:</p><ul><li>Ruby 中一切皆对象</li><li><code>.methods</code> 可返回方法数组</li><li>可用<code>.</code>调用对象具有的任意方法</li></ul><h2 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):012:0&gt;</span> x = <span class="number">4</span></span><br><span class="line">=&gt; <span class="number">4</span></span><br><span class="line"><span class="meta">irb(main):013:0&gt;</span> x &lt; <span class="number">5</span></span><br><span class="line">=&gt; true</span><br><span class="line"><span class="meta">irb(main):014:0&gt;</span> x &gt; <span class="number">4</span></span><br><span class="line">=&gt; false</span><br><span class="line"><span class="meta">irb(main):015:0&gt;</span> false.class</span><br><span class="line">=&gt; FalseClass</span><br><span class="line"><span class="meta">irb(main):016:0&gt;</span> true.class</span><br><span class="line">=&gt; TrueClass</span><br></pre></td></tr></table></figure><p>Note: </p><ul><li>Ruby 中的 <code>true</code>和<code>false</code>都是一等对象(first-class object)</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):001:0&gt;</span> x = <span class="number">4</span></span><br><span class="line">=&gt; <span class="number">4</span></span><br><span class="line"><span class="meta">irb(main):002:0&gt;</span> puts <span class="string">'This appears to be false.'</span> <span class="keyword">unless</span> x == <span class="number">4</span></span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):003:0&gt;</span> puts <span class="string">'This appears to be true.'</span> if x == <span class="number">4</span></span><br><span class="line">This appears to be <span class="literal">true</span>.</span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):004:0&gt;</span> if x == <span class="number">4</span></span><br><span class="line"><span class="meta">irb(main):005:1&gt;</span>   puts <span class="string">'This appears to be true.'</span></span><br><span class="line"><span class="meta">irb(main):006:1&gt;</span>   end</span><br><span class="line">This appears to be <span class="literal">true</span>.</span><br><span class="line">=&gt; nil</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">irb(main):014:0&gt;</span> <span class="keyword">unless</span> x == <span class="number">4</span></span><br><span class="line"><span class="meta">irb(main):015:1&gt;</span>   puts <span class="string">'This appears to be false.'</span></span><br><span class="line"><span class="meta">irb(main):016:1&gt;</span>   else</span><br><span class="line">irb(main)<span class="symbol">:</span><span class="number">017</span><span class="symbol">:</span><span class="number">1</span>*     puts <span class="string">'This appears to be true.'</span></span><br><span class="line"><span class="meta">irb(main):018:1&gt;</span>   end</span><br><span class="line">This appears to be <span class="literal">true</span>.</span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):019:0&gt;</span> puts <span class="string">'This appears to be true.'</span></span><br><span class="line">This appears to be <span class="literal">true</span>.</span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):021:0&gt;</span> puts <span class="string">'This appears to be true.'</span> if not true</span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):022:0&gt;</span> puts <span class="string">'This appears to be true.'</span> if !true</span><br><span class="line">=&gt; nil</span><br></pre></td></tr></table></figure><p>Note:</p><p>使用<code>if</code>或<code>unless</code>时，既可以用块形式</p><ul><li><code>if condition, statements, end</code><br>也可用单行形式</li><li><code>statements if condition</code></li><li><code>order.calculate_tax unless order.nil?</code></li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):026:0&gt;</span> x = x+<span class="number">1</span> while x &lt; <span class="number">10</span></span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):027:0&gt;</span> x</span><br><span class="line">=&gt; <span class="number">10</span></span><br><span class="line"><span class="meta">irb(main):028:0&gt;</span> x = x-<span class="number">1</span> until x == <span class="number">1</span></span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):029:0&gt;</span> x</span><br><span class="line">=&gt; <span class="number">1</span></span><br><span class="line"><span class="meta">irb(main):030:0&gt;</span> while x &lt; <span class="number">10</span></span><br><span class="line"><span class="meta">irb(main):031:1&gt;</span>   x = x+<span class="number">1</span></span><br><span class="line"><span class="meta">irb(main):032:1&gt;</span>   puts x</span><br><span class="line"><span class="meta">irb(main):033:1&gt;</span>   end</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line">=&gt; nil</span><br></pre></td></tr></table></figure><p>判断语句<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):034:0&gt;</span> puts <span class="string">'Should be true'</span> if <span class="number">1</span></span><br><span class="line">Should be <span class="literal">true</span></span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):035:0&gt;</span> puts <span class="string">'Should be true'</span> if <span class="string">'random_string'</span></span><br><span class="line">(irb)<span class="symbol">:</span><span class="number">35</span>: <span class="symbol">warning:</span> string literal <span class="keyword">in</span> condition</span><br><span class="line">Should be <span class="literal">true</span></span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):036:0&gt;</span> puts <span class="string">'Should be true'</span> if <span class="number">0</span></span><br><span class="line">Should be <span class="literal">true</span></span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):037:0&gt;</span> puts <span class="string">'Should be true'</span> if true</span><br><span class="line">Should be <span class="literal">true</span></span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):038:0&gt;</span> puts <span class="string">'Should be true'</span> if false</span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):039:0&gt;</span> puts <span class="string">'Should be true'</span> if nil</span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):040:0&gt;</span> puts <span class="string">'Should be true'</span> if <span class="string">''</span></span><br><span class="line">(irb)<span class="symbol">:</span><span class="number">40</span>: <span class="symbol">warning:</span> string literal <span class="keyword">in</span> condition</span><br><span class="line">Should be <span class="literal">true</span></span><br><span class="line">=&gt; nil</span><br><span class="line"><span class="meta">irb(main):041:0&gt;</span> puts <span class="string">'Should be true'</span> if <span class="string">""</span></span><br><span class="line">(irb)<span class="symbol">:</span><span class="number">41</span>: <span class="symbol">warning:</span> string literal <span class="keyword">in</span> condition</span><br><span class="line">Should be <span class="literal">true</span></span><br><span class="line">=&gt; nil</span><br></pre></td></tr></table></figure></p><p>Note:</p><ul><li>除了<code>nil</code>和<code>false</code>之外，其他值都代表<code>true</code>。C和C++程序员可得小心了，<strong>0也是true！</strong></li></ul><p><strong>短路求值</strong><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):043:0&gt;</span> true and false</span><br><span class="line">=&gt; false</span><br><span class="line"><span class="meta">irb(main):044:0&gt;</span> true or false</span><br><span class="line">=&gt; true</span><br><span class="line"><span class="meta">irb(main):047:0&gt;</span> false <span class="params">||</span> true</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line"><span class="meta">irb(main):053:0&gt;</span> true &amp;&amp; This_will_cause_an_error</span><br><span class="line"><span class="symbol">NameError:</span> uninitialized constant This_will_cause_an_error</span><br><span class="line">        from (irb)<span class="symbol">:</span><span class="number">53</span></span><br><span class="line">        from <span class="symbol">F:</span>/env/Ruby24-x64/bin/irb.<span class="symbol">cmd:</span><span class="number">19</span><span class="symbol">:in</span> <span class="string">`&lt;main&gt;'</span></span><br><span class="line"><span class="string">irb(main):054:0&gt; false &amp;&amp; This_will_cause_an_error</span></span><br><span class="line"><span class="string">=&gt; false</span></span><br><span class="line"><span class="string">irb(main):056:0&gt; true || This_will_cause_an_error</span></span><br><span class="line"><span class="string">=&gt; true</span></span><br><span class="line"><span class="string">irb(main):057:0&gt; true | This_will_cause_an_error</span></span><br><span class="line"><span class="string">NameError: uninitialized constant This_will_cause_an_error</span></span><br><span class="line"><span class="string">        from (irb):57</span></span><br><span class="line"><span class="string">        from F:/env/Ruby24-x64/bin/irb.cmd:19:in `</span>&lt;main&gt;<span class="string">'</span></span><br><span class="line"><span class="string">irb(main):058:0&gt; true | false</span></span><br><span class="line"><span class="string">=&gt; true</span></span><br></pre></td></tr></table></figure></p><p>Note:</p><ul><li><code>and &amp;&amp; or ||</code> [短路求值]<ul><li>整个表达式全部求值 <code>&amp; |</code></li></ul></li></ul><h2 id="鸭子类型"><a href="#鸭子类型" class="headerlink" title="鸭子类型"></a>鸭子类型</h2><p>类型安全(type safety)<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h1><ul><li>Ruby是一门解释型语言。一切皆为对象，且易于获取对象的任何信息，如对象的各方法及所属类。</li><li>它是鸭子类型的，且行为通常和强类型语言毫无二致，尽管一些学者会争论其中差别。</li><li>它也是崇尚自由精神的语言，允许你做几乎一切事情，包括修改NilClass或String这样的核心类。</li></ul><h1 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h1><p><strong>Find</strong>：</p><ul><li>Ruby API文档。<br>  |- <a href="http://ruby-doc.org/" target="_blank" rel="noopener">Help and documentation for the Ruby programming language.</a><br>  |- <a href="https://www.ruby-lang.org/zh_cn/documentation/" target="_blank" rel="noopener">documentation</a></li><li>Programming Ruby ：The Pragmatic Programmer’s Guide<br>  |- <a href="http://ruby-doc.com/docs/ProgrammingRuby/" target="_blank" rel="noopener">Programming Ruby</a></li><li>替换字符串某一部分的方法。<br>  |- <a href="https://ruby-doc.org/core-1.9.3/String.html#method-i-sub" target="_blank" rel="noopener">String-sub</a></li><li>有关Ruby正则表达式的资料。<br>  |- <a href="https://ruby-doc.org/core-1.9.3/Regexp.html" target="_blank" rel="noopener">Regexp</a></li><li>有关Ruby区间（range）的资料。<br>  |- <a href="https://ruby-doc.org/core-1.9.3/Range.html" target="_blank" rel="noopener">Range</a></li></ul><p><strong>Do</strong>:</p><ol><li>打印字符串”Hello, world.”。  </li><li>在字符串”Hello, Ruby.”中，找出”Ruby.”所在下标。</li><li>打印你的名字十遍。</li><li>打印字符串”This is sentence number 1.”，其中的数字1会一直变化到10。</li><li>从文件运行Ruby程序。</li><li>加分题：如果你感觉意犹未尽，还可以写一个选随机数的程序。该程序让玩家猜随机数是多少，并告诉玩家是猜大了还是猜小了。<br>（提示：rand(10)可产生0～9的随机数，gets可读取键盘输入的字符串，你要把输入字符串转换成整数。）</li></ol><h2 id="1-“Hello-world-”"><a href="#1-“Hello-world-”" class="headerlink" title="1. “Hello, world.”"></a>1. “Hello, world.”</h2><figure class="highlight ruby"><figcaption><span>Hello, world.</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):001:0&gt;</span> puts(<span class="string">"Hello,  world."</span>)</span><br><span class="line">Hello,  world.</span><br><span class="line">=&gt; nil</span><br></pre></td></tr></table></figure><p>直接输入字符串，看上去 <code>Ruby</code> 输出了字符串，其实那是返回值。<br><del>你大概写了一个假的 <code>Hello, world</code></del><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):002:0&gt;</span> <span class="string">"Hello World"</span></span><br><span class="line">=&gt; <span class="string">"Hello World"</span></span><br></pre></td></tr></table></figure></p><h2 id="2-找下标"><a href="#2-找下标" class="headerlink" title="2. 找下标"></a>2. 找下标</h2><h3 id="index-方法"><a href="#index-方法" class="headerlink" title="index 方法"></a><code>index</code> 方法</h3><blockquote><p>index(substring [, offset]) → fixnum or nil<br> index(regexp [, offset]) → fixnum or nil</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):048:0&gt;</span> str = <span class="string">"Hello, Ruby."</span></span><br><span class="line">=&gt; <span class="string">"Hello, Ruby."</span></span><br><span class="line"><span class="meta">irb(main):049:0&gt;</span> str.index(<span class="string">"Ruby."</span>)</span><br><span class="line">=&gt; <span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="=~ 方法"></a><code>=~</code> 方法</h3><p>正则表达式匹配：</p><blockquote><p>str =~ obj → fixnum or nil</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):052:0&gt;</span> str =~ <span class="regexp">/[Ruby.]/</span></span><br><span class="line">=&gt; <span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="3-重复打印"><a href="#3-重复打印" class="headerlink" title="3. 重复打印"></a>3. 重复打印</h2><h3 id="each-方法"><a href="#each-方法" class="headerlink" title="each 方法"></a><code>each</code> 方法</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):003:0&gt;</span> <span class="function"><span class="keyword">def</span> <span class="title">h</span></span></span><br><span class="line"><span class="meta">irb(main):004:1&gt;</span> puts <span class="string">"Hello, wo!"</span></span><br><span class="line"><span class="meta">irb(main):005:1&gt;</span> end</span><br><span class="line">=&gt; <span class="symbol">:h</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">irb(main):013:0&gt;</span> (<span class="number">1</span>..<span class="number">10</span>).each do h end</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">=&gt; <span class="number">1</span>..<span class="number">10</span></span><br></pre></td></tr></table></figure><p>循环也可以换行<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):021:0&gt;</span> (<span class="number">1</span>..<span class="number">10</span>).each do <span class="params">|i|</span></span><br><span class="line">irb(main)<span class="symbol">:</span><span class="number">022</span><span class="symbol">:</span><span class="number">1</span>*   h()</span><br><span class="line"><span class="meta">irb(main):023:1&gt;</span> end</span><br></pre></td></tr></table></figure></p><h3 id="更优雅的-方法"><a href="#更优雅的-方法" class="headerlink" title="更优雅的 *方法"></a>更优雅的 <code>*</code>方法</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):026:0&gt;</span> <span class="string">"Hello, wo!"</span> * <span class="number">10</span></span><br><span class="line">=&gt; <span class="string">"Hello, wo!Hello, wo!Hello, wo!Hello, wo!Hello, wo!Hello, wo!Hello, wo!Hello, wo!Hello, wo!Hello, wo!"</span></span><br><span class="line"><span class="meta">irb(main):028:0&gt;</span> puts <span class="string">"Hello, wo!\n"</span> * <span class="number">10</span></span><br><span class="line">Hello, wo!</span><br><span class="line">Hello, wo!</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="4-循环"><a href="#4-循环" class="headerlink" title="4. 循环"></a>4. 循环</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):030:0&gt;</span> (<span class="number">1</span>..<span class="number">10</span>).each do <span class="params">|i|</span></span><br><span class="line">irb(main)<span class="symbol">:</span><span class="number">031</span><span class="symbol">:</span><span class="number">1</span>*   puts <span class="string">"This is sentence number <span class="subst">#&#123;i&#125;</span>."</span></span><br><span class="line"><span class="meta">irb(main):032:1&gt;</span> end</span><br><span class="line">This is sentence number <span class="number">1</span>.</span><br><span class="line">This is sentence number <span class="number">2</span>.</span><br><span class="line">This is sentence number <span class="number">3</span>.</span><br><span class="line">This is sentence number <span class="number">4</span>.</span><br><span class="line">This is sentence number <span class="number">5</span>.</span><br><span class="line">This is sentence number <span class="number">6</span>.</span><br><span class="line">This is sentence number <span class="number">7</span>.</span><br><span class="line">This is sentence number <span class="number">8</span>.</span><br><span class="line">This is sentence number <span class="number">9</span>.</span><br><span class="line">This is sentence number <span class="number">10</span>.</span><br><span class="line">=&gt; <span class="number">1</span>..<span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="5-amp-6-猜数字-rb"><a href="#5-amp-6-猜数字-rb" class="headerlink" title="5.&amp;6. 猜数字.rb"></a>5.&amp;6. 猜数字.rb</h2><figure class="highlight ruby"><figcaption><span>Guess-Number.rb </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Guess num between [0..9]</span></span><br><span class="line">num = rand(<span class="number">10</span>)</span><br><span class="line">puts <span class="string">"Let's guess number !\nHave a guess!\n"</span> </span><br><span class="line">loop <span class="keyword">do</span></span><br><span class="line">    tmp = gets.to_i</span><br><span class="line">    puts <span class="string">"Too High"</span> <span class="keyword">if</span> num &lt; tmp</span><br><span class="line">    puts <span class="string">"Too Low"</span> <span class="keyword">if</span> num &gt; tmp</span><br><span class="line">    <span class="keyword">break</span> <span class="keyword">if</span> num == gets.to_i </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">puts <span class="string">"Yes! rand number is <span class="subst">#&#123;num&#125;</span>"</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><figcaption><span>result</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">I:</span>\Desktop\Programming\Ruby&gt;ruby <span class="string">"Guess Number.rb"</span></span><br><span class="line">Let<span class="string">'s guess number !</span></span><br><span class="line"><span class="string">Have a guess!</span></span><br><span class="line"><span class="string">5</span></span><br><span class="line"><span class="string">Too High</span></span><br><span class="line"><span class="string">4</span></span><br><span class="line"><span class="string">Yes! rand number is 4</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">I:\Desktop\Programming\Ruby&gt;ruby "Guess Number.rb"</span></span><br><span class="line"><span class="string">Let'</span>s guess number !</span><br><span class="line">Have a guess!</span><br><span class="line"><span class="number">5</span></span><br><span class="line">Too Low</span><br><span class="line"><span class="number">9</span></span><br><span class="line">Yes! rand number is <span class="number">9</span></span><br></pre></td></tr></table></figure><p>[2017-04-22]</p><hr><h1 id="———-Day-2-———"><a href="#———-Day-2-———" class="headerlink" title="——— Day 2 ———"></a>——— Day 2 ———</h1><h1 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>Ruby 用命令行就可以定义函数</li><li>每个函数都会返回结果。如果你没有显式指定某个返回值，函数就将返回退出函数前最后处理的表达式的值。</li><li>像所有其他事物一样，函数也是个对象。</li></ul><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ul><li>如果访问任何未定义的数组元素，Ruby会直接返回nil</li><li>数组元素不必具有相同类型</li></ul><h2 id="散列表"><a href="#散列表" class="headerlink" title="散列表"></a>散列表</h2><ul><li>键=&gt;值</li><li>符号（symbol）<br>  符号是前面带有冒号的标识符，类似于:symbol的形式<br>  尽管两个同值字符串在物理上不同，但相同的符号却是同一物理对象<br>  类似严格指针/ Alias</li></ul><h2 id="代码块和yield"><a href="#代码块和yield" class="headerlink" title="代码块和yield"></a>代码块和yield</h2><ul><li>代码块是没有名字的函数。它可以作为参数传递给函数或方法<br>  可以采用{/}或do/end两种界定代码块的形式</li><li>Ruby的一般惯例是：代码块只占一行时用大括号，代码块占多行时用do/end。</li><li>在Ruby中，参数名之前加一个“&amp;”，表示将代码块作为闭包传递给函数。</li></ul><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p><strong>Ruby的命名一些惯例和规则</strong>:</p><ul><li>实例变量（一个对象有一个值）前必须加上@</li><li>而类变量（一个类有一个值） 前必须加上@@</li><li>实例变量和方法名以小写字母开头， 并采用下划线命名法， 如underscore_style。</li><li>常量采用全大写形式，如ALL_CAPS。</li><li>用于逻辑测试的函数和方法一般要加上问号，如if test?。</li></ul><p><strong>attr 关键字可用来定义实例变量</strong>:</p><ul><li>attr定义实例变量和访问变量的同名方法，<br>  实际上，attr也可以定义设置方法，只需将true作为第二个参数传入即可，如attr_accessor :children, true。</li><li>而attr_accessor定义实例变量、访问方法和设置方法。</li></ul><h1 id="summary-1"><a href="#summary-1" class="headerlink" title="summary"></a>summary</h1><ul><li>集合<ul><li>数组</li><li>散列表</li></ul></li><li>Ruby关注的是程序员的效率，应用程序的效率是次要的。</li><li>枚举</li><li>单继承、面向对象</li></ul><h1 id="Todo-1"><a href="#Todo-1" class="headerlink" title="Todo"></a>Todo</h1><p><strong>Find</strong>:</p><ul><li><p>分别找到用代码块和不用代码块读取文件的方法，用代码块有什么好处？<br>  |- 不用代码块</p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file = File.new(<span class="string">"testfile"</span>, <span class="string">"r"</span>)</span><br><span class="line"><span class="comment"># ... do something</span></span><br><span class="line">file.close</span><br></pre></td></tr></table></figure><p>  |- 用代码块</p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">File.open(<span class="string">"testfile"</span>, <span class="string">"r"</span>) <span class="keyword">do</span> <span class="params">|file|</span></span><br><span class="line">    <span class="comment"># ... do somrthing</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>  参看[Programming Ruby - P128]，书上说：</p><blockquote><p>用代码块，如果在处理文件中发生异常，open方法可以捕捉并处理这个异常。而不用代码块，可能无法关闭文件对象。</p></blockquote></li><li><p>如何把散列表转换成数组？数组能转换成散列表吗？<br>  |- 散列转数组：</p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"a"</span>=&gt;<span class="string">"1"</span>, <span class="string">"b"</span>=&gt;<span class="string">"2"</span>, <span class="string">"c"</span>=&gt;<span class="string">"3"</span>&#125;.to_a</span><br><span class="line"><span class="comment">#=&gt; [["a", "1"], ["b", "2"], ["c", "3"]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认生成二维数组，可以用 `flatten` 方法转换为一维数组</span></span><br><span class="line">&#123;<span class="string">"a"</span>=&gt;<span class="string">"1"</span>, <span class="string">"b"</span>=&gt;<span class="string">"2"</span>, <span class="string">"c"</span>=&gt;<span class="string">"3"</span>&#125;.to_a.flatten</span><br><span class="line"><span class="comment">#=&gt; ["a", "1", "b", "2", "c", "3"]</span></span><br></pre></td></tr></table></figure><p>  搜索后发现还可以用zip <a href="https://ruby-china.org/topics/24622" target="_blank" rel="noopener">Ruby 数组转 hash · Ruby China</a></p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">irb(main):035:0&gt;</span> &#123;<span class="string">"a"</span>=&gt;<span class="string">"1"</span>, <span class="string">"b"</span>=&gt;<span class="string">"2"</span>, <span class="string">"c"</span>=&gt;<span class="string">"3"</span>&#125;.zip</span><br><span class="line">=&gt; [[[<span class="string">"a"</span>, <span class="string">"1"</span>]], [[<span class="string">"b"</span>, <span class="string">"2"</span>]], [[<span class="string">"c"</span>, <span class="string">"3"</span>]]]</span><br><span class="line"><span class="meta">irb(main):036:0&gt;</span> &#123;<span class="string">"a"</span>=&gt;<span class="string">"1"</span>, <span class="string">"b"</span>=&gt;<span class="string">"2"</span>, <span class="string">"c"</span>=&gt;<span class="string">"3"</span>&#125;.zip.flatten</span><br><span class="line">=&gt; [<span class="string">"a"</span>, <span class="string">"1"</span>, <span class="string">"b"</span>, <span class="string">"2"</span>, <span class="string">"c"</span>, <span class="string">"3"</span>]</span><br></pre></td></tr></table></figure><p>  |- 数组转散列：</p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">arr = <span class="string">%w[a 1 b 2 c 3]</span></span><br><span class="line">hash_table = Hash[*arr]</span><br><span class="line"></span><br><span class="line"><span class="comment"># at one line</span></span><br><span class="line"></span><br><span class="line">hash_table = Hash[*<span class="string">%w[a 1 b 2 c 3]</span>]</span><br></pre></td></tr></table></figure></li><li><p>你能循环遍历散列表吗？<br>  |- <code>{a: 1, b: 2, c: 3}.each {|k, v| puts &quot;#{k}=&gt;#{v}&quot;}</code></p></li><li>Ruby的数组能当作栈来用，它还能用作哪些常用的数据结构？<br>  |- 栈/<code>Stack</code>、集合/<code>Set</code>、队列/<code>Queue</code>、双向队列/<code>Dequeue</code>、先进先出队列/<code>fifo</code></li></ul><p><strong>Do</strong></p><ol><li>有一个数组，包含16个数字。仅用each方法打印数组中的内容，一次打印4个数字。然后，用可枚举模块的each_slice方法重做一遍。</li><li><p>我们前面实现了一个有趣的树类Tree，但它不具有简洁的用户接口，来设置一棵新树，为它写一个初始化方法，接受散列表和数组嵌套的结构。<br> |- 写好之后，你可以这样设置新树：</p> <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">'grandpa'</span> =&gt; &#123; </span><br><span class="line">    <span class="string">'dad'</span> =&gt; &#123;</span><br><span class="line">      <span class="string">'child 1'</span> =&gt; &#123;&#125;, </span><br><span class="line">      <span class="string">'child 2'</span> =&gt; &#123;&#125; </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'uncle'</span>=&gt; &#123;</span><br><span class="line">      <span class="string">'child 3'</span> =&gt; &#123;&#125;, </span><br><span class="line">      <span class="string">'child 4'</span> =&gt; &#123;&#125; </span><br><span class="line">    &#125; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>写一个简单的grep程序，把文件中出现某词组的行全都打印出来。这需要使用简单的正则表达式匹配，并从文件中读取各行。<br> |- （这在Ruby中超乎想象地简单。）如果你愿意的话，还可以加上行号。   </p></li></ol><p>[2017-04-23]</p><h2 id="1-each与枚举"><a href="#1-each与枚举" class="headerlink" title="1. each与枚举"></a>1. each与枚举</h2><p>这破题太坑，查了下手册，发现 <code>each</code> 并不能指定步长， <code>setp()</code> 可以。</p><p>然后就有了以下解法：(&lt;- 其实是投机取巧，<code>array</code> 并没有 <code>step</code> 方法)<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>..<span class="number">16</span>).step(<span class="number">4</span>).each&#123;<span class="params">|i|</span> print i, <span class="string">" "</span>, i.<span class="keyword">next</span>, <span class="string">" "</span>, i.<span class="keyword">next</span>.<span class="keyword">next</span>, <span class="string">" "</span>, i.<span class="keyword">next</span>.<span class="keyword">next</span>.<span class="keyword">next</span>, <span class="string">"\n"</span>&#125;</span><br></pre></td></tr></table></figure></p><p>之后又上网查了下，发现果然是大坑，一般的实现都用了判断语句：</p><p>ref：</p><ul><li><a href="https://ruby-china.org/topics/24514" target="_blank" rel="noopener">如何仅用 each 实现 each_slice 的功能？ · Ruby China</a></li><li><a href="https://www.oschina.net/question/1156611_142414" target="_blank" rel="noopener">Ruby数组的each方法使用 - 开源中国社区</a></li></ul><p><strong>较优雅的解法</strong><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>..<span class="number">16</span>).to_a.each &#123;<span class="params">|i|</span> print i, <span class="string">" "</span>; print <span class="string">"\n"</span> <span class="keyword">unless</span> i%<span class="number">4</span> !=<span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2-树与方法"><a href="#2-树与方法" class="headerlink" title="2. 树与方法"></a>2. 树与方法</h2><p>想到大概要用递归，但是还是图样，参考</p><p><a href="http://www.cnblogs.com/iceCream/archive/2012/12/02/2855493.html" target="_blank" rel="noopener">七周七语言：Ruby Day 2 - 冰激淋 - 博客园</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span></span></span><br><span class="line">  <span class="keyword">attr_accessor</span> <span class="symbol">:children</span>, <span class="symbol">:node_name</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(hash)</span></span></span><br><span class="line">    hash.each <span class="keyword">do</span> <span class="params">|name, children|</span></span><br><span class="line">      @node_name = name</span><br><span class="line">      @children = children.map &#123;<span class="params">|key, value|</span> Tree.new(key =&gt; value)&#125;</span><br><span class="line">    <span class="keyword">end</span>    </span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">visit_all</span><span class="params">(&amp;block)</span></span></span><br><span class="line">    visit &amp;block</span><br><span class="line">    children.each &#123;<span class="params">|c|</span> c.visit_all &amp;block&#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">visit</span><span class="params">(&amp;block)</span></span></span><br><span class="line">    block.call <span class="keyword">self</span></span><br><span class="line">  <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">ruby_tree = Tree.new(&#123;<span class="string">'grandpa'</span> =&gt; &#123;<span class="string">'dad'</span> =&gt; &#123;<span class="string">'child 1'</span> =&gt; &#123;&#125;, <span class="string">'child 2'</span> =&gt; &#123;&#125;&#125;, <span class="string">'uncle'</span> =&gt; &#123;<span class="string">'child 3'</span> =&gt; &#123;&#125;, <span class="string">'child 4'</span> =&gt; &#123;&#125; &#125;&#125;&#125;)</span><br><span class="line"></span><br><span class="line">puts <span class="string">"visiting a node"</span></span><br><span class="line">ruby_tree.visit &#123;<span class="params">|node|</span> puts node.node_name&#125;</span><br><span class="line">puts</span><br><span class="line"></span><br><span class="line">puts <span class="string">"Visiting entire tree"</span></span><br><span class="line">ruby_tree.visit_all &#123;<span class="params">|node|</span> puts node.node_name&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><figcaption><span>输出</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS <span class="symbol">I:</span>\Desktop\Programming\Ruby\<span class="number">7</span>d7lang&gt; .\tree.rb</span><br><span class="line">visiting a node</span><br><span class="line">Ruby</span><br><span class="line"></span><br><span class="line">Visiting entire tree</span><br><span class="line">Ruby</span><br><span class="line">Reia</span><br><span class="line">MacRuby</span><br></pre></td></tr></table></figure><h2 id="3-grep"><a href="#3-grep" class="headerlink" title="3. grep"></a>3. grep</h2><p>用了文件块，实现了带行号输出，测试文件 <a href="https://www.ruby-lang.org/en/about/license.txt" target="_blank" rel="noopener">Ruby’ license</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep-word.rb</span></span><br><span class="line"><span class="comment"># codeblock + gets</span></span><br><span class="line">word = <span class="string">"give"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grep</span><span class="params">(line, keyword=<span class="string">"Ruby"</span>)</span></span></span><br><span class="line">    line.gsub(keyword) &#123;<span class="params">|match|</span> <span class="string">%Q(!!<span class="subst">#&#123;match&#125;</span>!!)</span>&#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">File.open(<span class="string">"ruby-license.txt"</span>, <span class="string">"r"</span>) <span class="keyword">do</span> <span class="params">|file|</span></span><br><span class="line">  i = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> line = file.gets</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> line != grep(line, word)</span><br><span class="line">      print <span class="string">"Line "</span>, i, <span class="string">": "</span>, grep(line, word) </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>也可以用 <code>each_line</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep-word-ver2.rb</span></span><br><span class="line"><span class="comment"># code block +　`each_line` Method</span></span><br><span class="line">key = <span class="string">"give"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grep</span><span class="params">(line, keyword=<span class="string">"Ruby"</span>)</span></span></span><br><span class="line">  line.gsub(keyword,<span class="string">%Q(!!<span class="subst">#&#123;keyword&#125;</span>!!)</span>) <span class="keyword">unless</span> line !~ <span class="regexp">/<span class="subst">#&#123;keyword&#125;</span>/</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">File.open(<span class="string">"ruby-license.txt"</span>, <span class="string">"r"</span>) <span class="keyword">do</span> <span class="params">|file|</span></span><br><span class="line">  i = <span class="number">0</span></span><br><span class="line">  file.each_line <span class="keyword">do</span> <span class="params">|line|</span> </span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    print <span class="string">"Line "</span>, i, <span class="string">": "</span>, grep(line, key) <span class="keyword">unless</span> !grep(line, key)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><strong>IO.foreach</strong></p><p>迭代器 + <code>block</code> = <code>IO.foreach</code></p><p>该方法以数据源的名字为参数，以只读模式打开它，并以文件中的每一行为参数调用迭代器。</p><p>用正则让匹配更精确，转义序列配上背景颜色。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep-word-ver3.rb</span></span><br><span class="line"><span class="comment"># code block +　IO.foreach + Regexp + colorize</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grep</span><span class="params">(filename=<span class="string">"testfile"</span>, re=<span class="regexp">/Ruby/</span>)</span></span></span><br><span class="line">  i = <span class="number">0</span></span><br><span class="line">  IO.foreach(filename) <span class="keyword">do</span> <span class="params">|line|</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> line =~ re</span><br><span class="line">      puts <span class="string">%Q(Line <span class="subst">#&#123;i&#125;</span>: <span class="subst">#&#123;$`&#125;</span>\033[42m<span class="subst">#&#123;$&amp;&#125;</span>\033[0m<span class="subst">#&#123;$'&#125;</span>)</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span>            </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grep(<span class="string">"ruby-license.txt"</span>, <span class="regexp">/[ ]&#123;1&#125;with[ ]&#123;1&#125;/</span>)</span><br></pre></td></tr></table></figure></p><img src="/可爱的小姐姐-Ruby/color.png" title="彩色输出效果"><p>彩色转义序列参考 <a href="http://starzhou.com/blogs/ruby_colorize_console" target="_blank" rel="noopener">ruby输出多背景、颜色、效果的字符串</a></p><p>[2017-04-29]</p><hr><h1 id="———-Day-3-———"><a href="#———-Day-3-———" class="headerlink" title="——— Day 3 ———"></a>——— Day 3 ———</h1><h1 id="Note-1"><a href="#Note-1" class="headerlink" title="Note"></a>Note</h1><h2 id="元编程"><a href="#元编程" class="headerlink" title="元编程"></a>元编程</h2><p><strong>Ruby与元编程（metaprogramming）</strong></p><p>元编程，说白了就是“写能写程序的程序”</p><p><strong>几种可用在元编程当中的技术</strong>:</p><ul><li>开放类<br>  它可以随时改变任何类的定义，常用于给类添加行为</li><li>method_missing<br>  这样做也要付出代价：我们写的类调试起来会比过去困难得多，因为Ruby再也不会告诉你找不到某个方法！</li><li>模块</li></ul><h1 id="summary-2"><a href="#summary-2" class="headerlink" title="summary"></a>summary</h1><ul><li>用Ruby定义自己的语法</li><li>动态地改变类</li></ul><h1 id="Todo-2"><a href="#Todo-2" class="headerlink" title="Todo"></a>Todo</h1><p><strong>Do</strong></p><ol><li><p>修改前面的CSV应用程序，使它可以用each方法返回CsvRow对象。然后，在CsvRow对象上，对某个给定标题，用method_missing方法返回标题所在列的值。</p><ul><li><p>| 比如，对于包含以下内容的文件：</p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">one, two</span><br><span class="line">lions, tigers</span><br></pre></td></tr></table></figure></li><li><p>| API可以向下面这样操作</p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">csv = RubyCsv.new</span><br><span class="line">csv.each &#123;<span class="params">|row|</span> puts row.one&#125;</span><br></pre></td></tr></table></figure></li><li><p>| 这会打印出”lions”</p></li></ul></li></ol><p>[2017-04-23]</p><h2 id="CSV程序"><a href="#CSV程序" class="headerlink" title="CSV程序"></a>CSV程序</h2><p>testfile</p><figure class="highlight plain"><figcaption><span>rubycsv.txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">one, two</span><br><span class="line">lions, tigers</span><br></pre></td></tr></table></figure><p>想了半天没思路，去官方论坛找了找，也没有人给答案。</p><p>找了两个ref：</p><ul><li><a href="https://github.com/kikito/7-languages-in-7-weeks/blob/master/1-ruby/day-3/acts_as_csv.rb" target="_blank" rel="noopener">7-languages-in-7-weeks/1-ruby/day-3/acts_as_csv.rb</a></li><li><a href="http://www.ybrikman.com/writing/2012/01/31/seven-languages-in-seven-weeks-ruby-day_31/" target="_blank" rel="noopener">Ruby, Day 3: Problems CSV application</a><br>  这个怀疑代码是抄的，<code>respond_to?</code>方法的参数与函数本体对不上。</li></ul><p>大致看了一下，要新加入一个 <code>each</code> 方法和一个 <code>CscRow</code> 类。</p><p>最后参照第一个ref, 改写出了答案<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">ActsAsCsv</span></span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">included</span><span class="params">(base)</span></span></span><br><span class="line">    base.extend ClassMethods</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">  <span class="class"><span class="keyword">module</span> <span class="title">ClassMethods</span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">acts_as_csv</span></span></span><br><span class="line">      <span class="keyword">include</span> InstanceMethods</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">module</span> <span class="title">InstanceMethods</span></span></span><br><span class="line">    <span class="keyword">attr_accessor</span> <span class="symbol">:headers</span>, <span class="symbol">:csv_contents</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initialize</span></span></span><br><span class="line">      read</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read</span></span></span><br><span class="line">      @csv_contents = []</span><br><span class="line">      filename = <span class="keyword">self</span>.<span class="keyword">class</span>.to_s.downcase + <span class="string">'.txt'</span></span><br><span class="line">      file = File.new(filename)</span><br><span class="line">      @headers = file.gets.chomp.split(<span class="string">', '</span>)</span><br><span class="line">      </span><br><span class="line">      file.each <span class="keyword">do</span> <span class="params">|row|</span></span><br><span class="line">        @csv_contents &lt;&lt; row.chomp.split(<span class="string">', '</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">each</span><span class="params">(&amp;block)</span></span></span><br><span class="line">      @csv_contents.each &#123;<span class="params">|contents|</span> block.call(CsvRow.new(headers, contents))&#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CsvRow</span></span></span><br><span class="line">      </span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(headers, row)</span></span></span><br><span class="line">        @headers = headers</span><br><span class="line">        @row = row</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">=begin</span></span><br><span class="line"><span class="comment">      # 暂不清楚作用， 注释掉不影响程序</span></span><br><span class="line"><span class="comment">      def respond_to?(name)</span></span><br><span class="line"><span class="comment">        <span class="doctag">@headers</span>.index(name.to_s)</span></span><br><span class="line"><span class="comment">      end</span></span><br><span class="line"><span class="comment">=end</span></span><br><span class="line">      </span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">method_missing</span> <span class="title">name</span>, <span class="title">*</span><span class="title">args</span></span></span><br><span class="line">        index = @headers.index(name.to_s)   </span><br><span class="line">        @row[index] <span class="keyword">if</span> index</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      </span><br><span class="line">    <span class="keyword">end</span> <span class="comment"># class CvsRow END</span></span><br><span class="line">    </span><br><span class="line">  <span class="keyword">end</span> <span class="comment"># module InstanceMethods END</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">end</span> <span class="comment"># module ActsAsCsv END</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RubyCsv</span></span></span><br><span class="line">  <span class="keyword">include</span> ActsAsCsv</span><br><span class="line">  acts_as_csv</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">m = RubyCsv.new</span><br><span class="line">puts m.headers.inspect</span><br><span class="line">puts m.csv_contents.inspect</span><br><span class="line">m.each &#123;<span class="params">|row|</span> puts row.one, row.two&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[&quot;one&quot;, &quot;two&quot;]</span><br><span class="line">[[&quot;lions&quot;, &quot;tigers&quot;]]</span><br><span class="line">lions</span><br><span class="line">tigers</span><br></pre></td></tr></table></figure><p>[2017-04-29]</p><hr><h1 id="–-More-about-Ruby-–"><a href="#–-More-about-Ruby-–" class="headerlink" title="– More about Ruby –"></a>– More about Ruby –</h1><h1 id="Ruby-的核心优势"><a href="#Ruby-的核心优势" class="headerlink" title="Ruby 的核心优势"></a>Ruby 的核心优势</h1><blockquote><p>Ruby的纯面向对象可以让你用一致的方式来处理对象。  </p></blockquote><p>鸭子类型根据对象可提供的方法，而不是对象的继承层次，实现了更切合实际的多态设计。  </p><blockquote></blockquote><p>Ruby的模块和开放类，使程序员能把行为紧密结合到语法上，这大大超越了类中定义的传统方法和实例变量。</p><ol><li>脚本<br> glue code<br> 数以千计的gem或预打包插件</li><li>Web开发<br> Rails  </li></ol><h1 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h1><ol><li>性能</li><li>并发和面向对象编程<br> 最好的情况下，Ruby会产生大量的资源竞争；<br> 最坏的情况下，面向对象语言几乎无法在并发环境下调试程序，也无法可靠地测试程序。</li><li>类型安全</li></ol><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      <categories>
          
          <category> Books </category>
          
          <category> 编程 </category>
          
          <category> 编程七周谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>编程七日(周)谈</title>
      <link href="/%E7%BC%96%E7%A8%8B%E4%B8%83%E6%97%A5-%E5%91%A8-%E8%B0%88/"/>
      <url>/%E7%BC%96%E7%A8%8B%E4%B8%83%E6%97%A5-%E5%91%A8-%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<p>在图灵社区闲逛，顺手搜了下Haskell，发现有这个tag的只有两本书：</p><ul><li>魔力Haskell</li><li>七周七语言：理解多种编程范型</li></ul><p>然后就发现了这本有趣的书。</p><img src="/编程七日-周-谈/haskell.png" title="tag-Haskell"><a id="more"></a><ul><li>目录树 <a href="https://mubu.com/doc/3Sgmg6K5N0" target="_blank" rel="noopener">编程七日谈</a></li><li>本书官方论坛 <a href="https://forums.pragprog.com/forums/147" target="_blank" rel="noopener">The Pragmatic Bookshelf | Seven Languages in Seven Weeks</a></li><li>【ALL】<a href="http://blog.wakatta.jp/blog/2011/10/11/seven-languages-in-seven-weeks/" target="_blank" rel="noopener">Seven Languages in Seven Weeks - Wakatta!</a></li><li>【ALL-code】<a href="https://github.com/kikito/7-languages-in-7-weeks" target="_blank" rel="noopener">7 Languages in 7 weeks</a></li><li>【Ruby - Clojure Day 2】 <a href="http://www.cnblogs.com/iceCream/category/444992.html" target="_blank" rel="noopener">Seven Languages In Seven Weeks - 随笔分类 - 冰激淋 - 博客园</a></li><li>【Ruby - erlang day 2】<a href="http://www.ybrikman.com/writing/tags/#Seven%20Languages%20in%20Seven%20Weeks" target="_blank" rel="noopener">Seven Languages in Seven Weeks</a></li></ul><h1 id="Week-0"><a href="#Week-0" class="headerlink" title="Week 0"></a>Week 0</h1><blockquote><p>获得任何新技能的第一步，是先别想着独立解决什么，而是重复一遍前人已竟之事，这是掌握一门技能最快的方法。</p></blockquote><blockquote><p>当你真正融入Scala社区之后，你就会明白，为什么对于函数式语言程序员来说，Scala是异端邪说，而对于Java开发者来说，Scala是天降福音。</p></blockquote><h1 id="Week-1-Ruby"><a href="#Week-1-Ruby" class="headerlink" title="Week 1 - Ruby !"></a>Week 1 - Ruby !</h1><a href="/可爱的小姐姐-Ruby/" title="可爱的小姐姐~ Ruby!">可爱的小姐姐~ Ruby!</a><ul><li><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><p>  |- <a href="../可爱的小姐姐-Ruby/#———-Day-1-———">Day 1-初识Ruby</a></p></li><li><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>  |- <a href="../可爱的小姐姐-Ruby/#———-Day-2-———">Day 2-品尝语法糖</a></p></li><li><h2 id="Day-3"><a href="#Day-3" class="headerlink" title="Day 3"></a>Day 3</h2><p>  |- <a href="../可爱的小姐姐-Ruby/#———-Day-3-———">Day 3-</a></p></li></ul><h1 id="Week-7-Haskell"><a href="#Week-7-Haskell" class="headerlink" title="Week 7 - Haskell"></a>Week 7 - Haskell</h1><ul><li><h2 id="Day-1-1"><a href="#Day-1-1" class="headerlink" title="Day 1"></a>Day 1</h2>  | - </li></ul>]]></content>
      
      
      <categories>
          
          <category> Books </category>
          
          <category> 编程 </category>
          
          <category> 编程七周谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>TodoList 坑</title>
      <link href="/TodoList-%E5%9D%91/"/>
      <url>/TodoList-%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>整理下已开的坑<a href="http://mubu.io/doc/1o5MOHEvi0" target="_blank" rel="noopener">TodoList</a>，开坑的目的，以及各坑之间的关系。</p><a id="more"></a><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>WSL(Windows Subsystem for Linux) 小记</title>
      <link href="/WSL-Windows-Subsystem-for-Linux-%E5%B0%8F%E8%AE%B0/"/>
      <url>/WSL-Windows-Subsystem-for-Linux-%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>又看见 dalao star 了新的项目<a href="https://github.com/alwsl/alwsl" target="_blank" rel="noopener">alwsl</a>，看了一眼，是在WSL(Windows Subsystem for Linux) 中装ArchLinux的脚本，然后我就开始折腾WSL了。</p><a id="more"></a><p>ref:</p><ul><li><a href="http://www.jianshu.com/p/a8989c23f766" target="_blank" rel="noopener">进入 WSL（或者说 Bash on Ubuntu on Windows ）环境的多种方法比较</a></li></ul><p>本来看到了alwsl我还考虑了一下装Ubuntu还是Arch，然后看到他的issue里说libc都炸了，估计还是有bug，遂按照正常的套路装Ubuntu。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>cmd/powershell 下输入 <code>bash</code>，然后按<code>y</code>，自动从应用商店开始下载，国内有点慢。</p><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
        <tags>
            
            <tag> WSL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LaTeX 笔记</title>
      <link href="/LaTeX-%E7%AC%94%E8%AE%B0/"/>
      <url>/LaTeX-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="数字排版"><a href="#数字排版" class="headerlink" title="数字排版"></a>数字排版</h2><hr><p>标记语言    PDL   RIP          输出设备</p><hr><p>troff 系列  PS    硬件RIP       激光照排机<br>SGML 系列   PDF   固件RIP       直接制版机</p><h2 id="TEX-系列-DVI-软件RIP-打印机"><a href="#TEX-系列-DVI-软件RIP-打印机" class="headerlink" title="TEX 系列    DVI   软件RIP       打印机"></a>TEX 系列    DVI   软件RIP       打印机</h2><figure class="highlight plain"><figcaption><span>Hello World!</span><a href="https://github.io" target="_blank" rel="noopener">2.1-hello_world_cn.tex</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[UTF8,a4paper]&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">你好 LaTeX!</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><h2 id="TeX-文件的结构"><a href="#TeX-文件的结构" class="headerlink" title="TeX 文件的结构"></a>TeX 文件的结构</h2><h3 id="物理结构"><a href="#物理结构" class="headerlink" title="物理结构"></a>物理结构</h3><h4 id="序言与正文"><a href="#序言与正文" class="headerlink" title="序言与正文"></a>序言与正文</h4><figure class="highlight plain"><figcaption><span>文档基本格式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[options]&#123;class&#125; % 文档类声明</span><br><span class="line">\usepackage[options]&#123;package&#125; % 引入宏包</span><br><span class="line">...</span><br><span class="line">\begin&#123;document&#125; % 正文</span><br><span class="line">...</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><h4 id="文档类"><a href="#文档类" class="headerlink" title="文档类"></a>文档类</h4><p>常用的 <strong>文档类(documentclass)</strong> 有三种 <code>article, report, book</code> ，基本选项见下表：</p><p>:基本文档类选项 [加粗选项为默认]</p><hr><p>选项                     作用</p><hr><p><strong>10pt</strong>, 11pt, 12pt        正文字号。LATEX 会根据正文字号选择标题、<br>                            上下标等的字号。                    </p><p><strong>letterpaper</strong>, a4paper    纸张尺寸。</p><p><strong>notitlepage</strong>,            标题后是否另起新页。article 缺省notitlepage，<br><strong>titlepage</strong>, report       book 缺省用titlepage。</p><p><strong>onecolumn</strong>, twocolumn    栏数。</p><p><strong>oneside</strong>                 单面双面。article 和 report 缺省用单面，<br>, <strong>twoside</strong>               book 缺省用双面。    </p><p>landscape                   横向打印，缺省是纵向。</p><p><strong>openany</strong>                 此选项只用于report 和 book。report 缺省<br>, <strong>openright</strong>             openany，book 缺省openright。</p><p>draft                       草稿模式。有时某些行排得过满，draft 模式可<br>                            以在它们右边标上粗黑线提醒用户。</p><hr><h3 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><h4 id="标题、作者、日期"><a href="#标题、作者、日期" class="headerlink" title="标题、作者、日期"></a>标题、作者、日期</h4><p>各命令用法如下，<strong>注意<code>\maketitle</code> 命令要放在最后</strong>。</p><figure class="highlight plain"><figcaption><span>标题、作者和日期</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\title&#123;LaTeX Notes&#125;</span><br><span class="line">\author&#123;Alpha Huang&#125;</span><br><span class="line">\date&#123;\today&#125;</span><br><span class="line">\maketitle</span><br></pre></td></tr></table></figure><h4 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h4><p>article 和 report 可以有摘要，<strong>book 里没有摘要</strong>。<br>摘要环境用法如下：</p><figure class="highlight plain"><figcaption><span>生成摘要</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;abstract&#125;</span><br><span class="line">...</span><br><span class="line">\end&#123;abstract&#125;</span><br></pre></td></tr></table></figure><h4 id="结构层次"><a href="#结构层次" class="headerlink" title="结构层次"></a>结构层次</h4><p>LATEX 提供了七种层次结构命令，每个高级层次可以包含若干低级层次。<br><strong>article 中没有 chapter</strong>，而 report 和 book 则支持所有层次。</p><figure class="highlight plain"><figcaption><span>结构层次</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\part&#123;...&#125;             %Level -1</span><br><span class="line">\chapter&#123;...&#125;          %Level 0</span><br><span class="line">\section&#123;...&#125;          %Level 1</span><br><span class="line">\subsection&#123;...&#125;       %Level 2</span><br><span class="line">\subsubsection&#123;...&#125;    %Level 3</span><br><span class="line">\paragraph&#123;...&#125;        %Level 4</span><br><span class="line">\subparagraph&#123;...&#125;     %Level 5</span><br></pre></td></tr></table></figure><h4 id="生成各种目录"><a href="#生成各种目录" class="headerlink" title="生成各种目录"></a>生成各种目录</h4><p>可以用以下命令来生成目录、插图/表格目录。<br>这三种目录也都需要编译两遍。</p><figure class="highlight plain"><figcaption><span>生成目录、图/表目录</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\tableofcontents</span><br><span class="line">\listoffigures</span><br><span class="line">\listoftables</span><br></pre></td></tr></table></figure><p>比如下面的命令指定目录深度为2，也就是只显示subsection 及以上层次的目录。<br>注意: <strong>设定目录深度命令要放在列目录命令的前面</strong>。</p><figure class="highlight plain"><figcaption><span>生成目录</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\setcounter&#123;tocdepth&#125;&#123;2&#125; % 设定目录深度</span><br><span class="line">\tableofcontents % 列出目录</span><br></pre></td></tr></table></figure><p>如果我们不想让某些层次的标题出现在目录里，则可以给例2.2 中的命<br>令加上星号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\chapter*&#123;...&#125;</span><br><span class="line">\section*&#123;...&#125;</span><br><span class="line">\subsection*&#123;...&#125;</span><br><span class="line">\subsubsection*&#123;...&#125;</span><br></pre></td></tr></table></figure><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
        <tags>
            
            <tag> Note </tag>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Aspen Note</title>
      <link href="/Aspen-Note/"/>
      <url>/Aspen-Note/</url>
      
        <content type="html"><![CDATA[<p>Aspen 版本号比较乱</p><a id="more"></a><h2 id="Aspen-版本关系"><a href="#Aspen-版本关系" class="headerlink" title="Aspen 版本关系"></a>Aspen 版本关系</h2><p>可以用记事本打开你的bkp文件，第一行就是实际发行版本好，</p><figure class="highlight plain"><figcaption><span>plain</span><a href="http://bbs.mahoupao.net/forum.php?mod=viewthread&tid=49877&page=1#pid840770" target="_blank" rel="noopener">Aspen版本区别</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Aspen 10.0</span><br><span class="line">Aspen 11.1 </span><br><span class="line">Aspen 12</span><br><span class="line">Aspen 2004</span><br><span class="line">Aspen 2006</span><br><span class="line">Aspen 2006.1</span><br><span class="line">Aspen V7</span><br><span class="line">Aspen V7.1</span><br><span class="line">Aspen V7.2</span><br><span class="line">Aspen V7.3</span><br><span class="line">Aspen V7.3.2</span><br><span class="line">Aspen V8.0</span><br><span class="line">Aspen V8.1</span><br><span class="line">Aspen V8.2</span><br><span class="line">Aspen V8.3</span><br><span class="line">Aspen V8.4</span><br><span class="line">Aspen V8.6</span><br><span class="line">Aspen V8.8</span><br></pre></td></tr></table></figure><h2 id="Aspen-包含关系"><a href="#Aspen-包含关系" class="headerlink" title="Aspen 包含关系"></a>Aspen 包含关系</h2><p>Aspen plus 是Aspen one工程套件的一个组件，就像word和office的关系一样</p><ul><li>aspenONE Engineering<ul><li><strong>Aspen HYSYS</strong> for Hydrocarbons</li><li><strong>Aspen Plus</strong> for Chemicals and Polymers</li><li>Dynamics and Safety</li><li>Model Based Operations Support</li><li>Aspen Economic Evaluation</li><li>Aspen Exchanger Design &amp; Rating</li><li>Energy &amp; Utilities Optimization</li><li>Aspen Basic Engineering        </li></ul></li><li>aspenONE Advanced Process Control</li><li>aspenONE Manufacturing Execution Systems</li><li>aspenONE Petroleum Supply Chain</li><li>aspenONE Supply Chain Management</li></ul><h1 id="Aspen-相关书籍"><a href="#Aspen-相关书籍" class="headerlink" title="Aspen 相关书籍"></a>Aspen 相关书籍</h1><ul><li>《用户指南》(user guide)</li><li>《单元操作模型》(Unit Operation Models)</li><li>《物性方法和模型》(Physical Property Methods and Models)</li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>GCC 中的main 与 __main</title>
      <link href="/GCC-%E4%B8%AD%E7%9A%84main-%E4%B8%8E-main/"/>
      <url>/GCC-%E4%B8%AD%E7%9A%84main-%E4%B8%8E-main/</url>
      
        <content type="html"><![CDATA[<p>看RE4B, C3 中间有提到用gcc编译简单函数，试了下hello world，发现生成的汇编代码很奇怪，看上去想出现了死循环。</p><a id="more"></a><figure class="highlight c"><figcaption><span>c源码 3.1.c</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hello, world\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>得到的汇编代码 3.1.s</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.file&quot;3.1.c&quot;</span><br><span class="line">.def__main;.scl2;.type32;.endef</span><br><span class="line">.section .rdata,&quot;dr&quot;</span><br><span class="line">.LC0:</span><br><span class="line">.ascii &quot;hello, world\0&quot;</span><br><span class="line">.text</span><br><span class="line">.globlmain</span><br><span class="line">.defmain;.scl2;.type32;.endef</span><br><span class="line">main:</span><br><span class="line">pushq%rbp</span><br><span class="line">movq%rsp, %rbp</span><br><span class="line">subq$32, %rsp</span><br><span class="line">call__main</span><br><span class="line">leaq.LC0(%rip), %rcx</span><br><span class="line">callputs</span><br><span class="line">movl$0, %eax</span><br><span class="line">leave</span><br><span class="line">ret</span><br><span class="line">.ident&quot;GCC: (Rev3, Built by MSYS2 project) 5.2.0&quot;</span><br><span class="line">.defputs;.scl2;.type32;.endef</span><br></pre></td></tr></table></figure><p>main 函数中间有一句 <code>call    __main</code> 看上去很像死循环，到群里问，把左懒大大也给坑了一下</p><p>不过实际上通过<code>.def</code>宏可以看出，他们是两个不同的函数，置于为什么这样用还有待深究。</p><p>ref:</p><ul><li><a href="http://www.delorie.com/gnu/docs/gcc/gccint_149.html" target="_blank" rel="noopener">GNU Compiler Collection (GCC) Internals</a></li><li><a href="https://gcc.gnu.org/onlinedocs/gccint/Collect2.html#Collect2" target="_blank" rel="noopener">20 collect2</a></li><li><a href="http://stackoverflow.com/questions/19552816/gcc-on-windows-generating-garbage-windows-vs-linux/19553974#19553974" target="_blank" rel="noopener">gcc on windows generating garbage? windows vs linux</a><br>[2017-04-08]</li><li><a href="http://stackoverflow.com/questions/31166773/gcc-assembly-optimizations-why-are-these-equivalent" target="_blank" rel="noopener">GCC Assembly Optimizations - Why are these equivalent?</a></li><li><a href="http://stackoverflow.com/questions/1317081/gccs-assembly-output-of-an-empty-program-on-x86-win32/1317202#1317202" target="_blank" rel="noopener">GCC’s assembly output of an empty program on x86, win32</a></li></ul><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
        <tags>
            
            <tag> gcc </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《逆向工程权威指南(上)》纠错</title>
      <link href="/%E3%80%8A%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E4%B8%8A-%E3%80%8B%E7%BA%A0%E9%94%99/"/>
      <url>/%E3%80%8A%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E4%B8%8A-%E3%80%8B%E7%BA%A0%E9%94%99/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>根据两个bugfix【[P125\指令清单12.33]~<a href="https://github.com/dennis714/RE-for-beginners/commit/3bfe04ba68d595b34632476eb0adf1a949a57d47" target="_blank" rel="noopener">3bfe04b</a> &amp;&amp; [P216\17.7.2\第5段\第一行]~<a href="https://github.com/dennis714/RE-for-beginners/commit/e18eb770a0a1952ad1ca816286a37b138e62abbe" target="_blank" rel="noopener">e18eb77</a>】<br>，判断中文版所用的英文原版的日期在 2016-11-18 ~ 26 之间。</p><p>Table: bug or typo</p><table><thead><tr><th style="text-align:left">页码</th><th style="text-align:left">段落-行</th><th style="text-align:left">原文</th><th style="text-align:left">更正</th><th style="text-align:left">note</th></tr></thead><tbody><tr><td style="text-align:left">内容提要</td><td style="text-align:left">p2-l3</td><td style="text-align:left">软件狗</td><td style="text-align:left">加密狗</td><td style="text-align:left">typo, 术语不统一</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> bug or typo? </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo 魔改 &amp; Landscape++ 计划</title>
      <link href="/Hexo-%E9%AD%94%E6%94%B9-Landscape-%E8%AE%A1%E5%88%92/"/>
      <url>/Hexo-%E9%AD%94%E6%94%B9-Landscape-%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>Landscape-plus 没怎么更新，多说也要挂了。<br>我就想另起炉灶，开个坑叫 Landscape++</p><a id="more"></a><p>备选主题;</p><ul><li><a href="http://litten.me/" target="_blank" rel="noopener">hexo-theme-yilia</a></li><li><a href="http://www.ahonn.me/" target="_blank" rel="noopener">hexo-theme-even</a></li></ul><p>核心思想：<br>[2017-04-03] wo开心就好</p><p>需求： </p><ul><li style="list-style: none"><input type="checkbox"> 电脑端(半翻墙状态)能愉快的加载</li><li style="list-style: none"><input type="checkbox"> 能分清标题</li><li style="list-style: none"><input type="checkbox"> LaTeX 支持</li><li style="list-style: none"><input type="checkbox"> 访问控制？</li><li style="list-style: none"><input type="checkbox"> 移动端二维码</li></ul><p>TODO:</p><ul><li style="list-style: none"><input type="checkbox"> TOC <ul><li style="list-style: none"><input type="checkbox"> 目录放置在侧边栏</li><li style="list-style: none"><input type="checkbox"> 滚动跟随</li></ul></li><li style="list-style: none"><input type="checkbox"> 评论模块</li><li style="list-style: none"><input type="checkbox"> 侧边栏隐藏</li><li style="list-style: none"><input type="checkbox"> 标签云单独一页</li><li style="list-style: none"><input type="checkbox"> 归档页显示多行</li></ul><div style="display: none;"><br>{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}{% codeblock [title] [lang:language] [url] [link text] %}code snippet{% endcodeblock %}undefined{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}{% asset_img slug [title] %}<br></div>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello Haskell !</title>
      <link href="/Hello-Haskell/"/>
      <url>/Hello-Haskell/</url>
      
        <content type="html"><![CDATA[<p>本来我只是去知乎上找一个大佬 <a href="https://www.zhihu.com/people/marisa.moe" target="_blank" rel="noopener">@雾雨魔理沙</a> 的Github</p><p>然后吃了安利(其实很早就吃了</p><blockquote><p>“大事化小，小事化无，以无事取天下”。把很小的东西，一个一个组合起来就可以得到一个非常非常复杂的程序。视频最后他说到IO的定义，IO以真实世界的状态为参数，返回真实世界新的状态跟一个类型为a的值，你会产生幻觉，以为真实世界不过是函数里的一个参数。Haskell的目的就是要观察这个世界，要改变这个世界，创造新的价值。</p><p>—— <a href="https://www.zhihu.com/question/27355585/answer/36405568" target="_blank" rel="noopener">阅千人而惜知己</a></p></blockquote><a id="more"></a><hr><blockquote><p>禅宗haskell<br>学习haskell更多时候并不是学语法学库而是进行一种哲学思考。所谓禅。<br>学习haskell时更多的思考方式是是什么。当python 以 import anti-gravity 翱翔青空时，haskeller 盘坐在地思考何为飞翔、何可谓飞翔。这大概就是飞机与歼星舰的命运岔口。</p><p>初见IO定义（newtype IO a = IO (State# RealWorld -&gt; (# State# RealWorld, a #)) ），鲜有人不为所动。何为IO、何为世界、何为IO之界限、若以人为机器何为IO、人意识的边界何在、我何以为我、人何以为人、多线程之间之IO、远程脑部内存共享的双子。恍惚间仿佛坐在菩提树下。<br>Free 与 Cofree 初见并无感。当思考着越来越多是什么的问题、而不是如何做的问题时，便时常有些闪光似的顿悟。DSL 与 Interpreter 、Rose tree与Tree、Behavior 与 Event，皆为一组Cofree 与 Free。<br>当js、java之流亦挂FRP于嘴边时，Haskeller 在思考着何为FRP？FRP根据定义就是以随时间改变的量为primitive 进行编程。可，何所谓时间？时间仅仅是像库中所写的是正实数吗？时间可数吗？对于平行宇宙（非线性时间）来说FRP又意味着什么？于是这时回首读情态逻辑时态逻辑。突然光着身子从浴缸里跳出来，在纸上写道、Behavior a = Cofree Next a ; Event a = Free Next a。会当临绝顶般。所谓时间、不同模型间的差别、也就是Next这个Functor的差别。<br>抽象、洞悉着世界、时间与我。<br>学习Haskell、正如放下了锄头、仰望着浩渺星河。</p><p>—— <a href="https://www.zhihu.com/question/28284139/answer/86748228" target="_blank" rel="noopener">凉宫礼</a></p></blockquote><hr><blockquote><p>haskell想开始还是很容易的，但是想知道如何“学得差不多该收手了”就不是太容易了。在此我特别给出一个判断标准——一旦你弄懂了monad lifting，我觉得你就可以开始学别的了</p><p>—— <a href="http://zhihu.com/question/20193745/answer/22484139" target="_blank" rel="noopener">vczh</a></p></blockquote><p>ref:</p><ul><li><a href="https://www.zhihu.com/question/27355585" target="_blank" rel="noopener">精通 Haskell 是一种怎样的体验？</a></li><li><a href="https://www.zhihu.com/question/20193745" target="_blank" rel="noopener">如何学习 Haskell ？</a></li><li><a href="https://www.edx.org/course/introduction-functional-programming-delftx-fp101x-0" target="_blank" rel="noopener">Introduction to Functional Programming</a></li><li><a href="https://hackpad.com/ep/pad/static/PoPV1V9wVse" target="_blank" rel="noopener">函數程式設計的商業應用</a></li><li><a href="https://github.com/bitemyapp/learnhaskell/blob/master/guide-zh_CN.md" target="_blank" rel="noopener">这是我推荐的学习Haskell之路</a></li></ul><p>WTF?</p><ul><li><a href="https://www.zhihu.com/question/22291305" target="_blank" rel="noopener">如何解释 Haskell 中的单子？</a><br>简单的说单子(Monad)就是自函子范畴上的一个幺半群。<ul><li><a href="http://jiyinyiyong.github.io/monads-in-pictures/" target="_blank" rel="noopener">Functor, Applicative, 以及 Monad 的图片阐释</a></li></ul></li></ul><p>你大概需要一点数学：</p><p><strong>范畴论</strong></p><ul><li><a href="https://www.zhihu.com/question/20448295" target="_blank" rel="noopener">怎样学范畴论？</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Haskell </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git 仓库瘦身之.git文件夹清理</title>
      <link href="/Git-%E4%BB%93%E5%BA%93%E7%98%A6%E8%BA%AB%E4%B9%8B-git%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B8%85%E7%90%86/"/>
      <url>/Git-%E4%BB%93%E5%BA%93%E7%98%A6%E8%BA%AB%E4%B9%8B-git%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B8%85%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>clone某汉化组的repo，本来有墙，结果repo竟然有31M，源码是一堆tex文件，图片也没几张最大的一个文件是PDF，然后我就感觉很奇怪，怎么这个repo这么大。</p><a id="more"></a><p>ref：    </p><ol><li><a href="http://www.jianshu.com/p/7231b509c279" target="_blank" rel="noopener">为什么你的 Git 仓库变得如此臃肿</a></li><li><a href="https://segmentfault.com/q/1010000000171057" target="_blank" rel="noopener">.git 文件太大时怎样处理</a></li><li><a href="http://harttle.github.io/2016/03/22/purge-large-files-in-gitrepo.html" target="_blank" rel="noopener">寻找并删除Git记录中的大文件</a></li><li><a href="http://www.hollischuang.com/archives/1708" target="_blank" rel="noopener">记一次删除Git记录中的大文件的过程</a></li></ol><h1 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h1><p>先找了篇教程(第一篇)，知道了是因为<code>.git/objects</code>目录下缓存了过多的大文件。结合repo的原文件，可知是因为编译出的PDF文件每次都包含到repo中了，导致<code>.git</code>文件夹很大。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ du -d 1 -h</span><br><span class="line">27M     ./.git</span><br><span class="line">356K    ./Chaps</span><br><span class="line">1.0K    ./Parts</span><br><span class="line">3.9M    ./Pictures</span><br><span class="line">35M     .</span><br></pre></td></tr></table></figure><h1 id="repo瘦身"><a href="#repo瘦身" class="headerlink" title="repo瘦身"></a>repo瘦身</h1><h2 id="临时解决方法"><a href="#临时解决方法" class="headerlink" title="临时解决方法"></a>临时解决方法</h2><blockquote><p>ref:2</p></blockquote><ol><li>在<code>.gitignore</code>里面加上要排除的PDF</li><li>clone repo时 使用<code>--depth</code>指定clone深度<br> <code>git clone git@github.com:torvalds/linux.git --depth 1</code>     </li></ol><h2 id="彻底解决方案"><a href="#彻底解决方案" class="headerlink" title="彻底解决方案"></a>彻底解决方案</h2><p><strong>WARNING!</strong><br><em>如果你不是完全清楚你在做什么，那么</em><br><strong>你正在作死</strong></p><blockquote><p>WARNING! The rewritten history will have different object names for all the objects and will not converge with the original branch. You will not be able to easily push and distribute the rewritten branch on top of the original branch. <strong>Please do not use this command if you do not know the full implications, and avoid using it anyway</strong>, if a simple single commit would suffice to fix your problem. </p><p>——<br><a href="https://git-scm.com/docs/git-filter-branch" target="_blank" rel="noopener">Git - git-filter-branch Documentation</a></p></blockquote><p>后面会有命令，让git会遍历repo~所有分支~(所选分支)中所有的commit，删除大文件的记录。这极度危险，所以动手前请务必备份。</p><p><strong>进行危险操作前先备份</strong></p><h3 id="step-0-git-clone"><a href="#step-0-git-clone" class="headerlink" title="step 0 git clone"></a>step 0 git clone</h3><p><code>git clone git@github.com:ChzRuan/CallenThermo.git</code></p><h3 id="step-1-备份"><a href="#step-1-备份" class="headerlink" title="step 1 备份"></a>step 1 备份</h3><p>首先备份<br><code>git clone /i/GitHub/Callen-Thermo-CHS /i/backup</code></p><p>然后再备份中先尝试操作，并观察结果，达到预期后，再次备份，并修改真正的repo</p><p>切换目录<br><code>cd /i/backup/</code></p><h3 id="step-2-查看空间占用"><a href="#step-2-查看空间占用" class="headerlink" title="step 2 查看空间占用"></a>step 2 查看空间占用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ du -d 1 -h</span><br><span class="line">27M     ./.git</span><br><span class="line">356K    ./Chaps</span><br><span class="line">1.0K    ./Parts</span><br><span class="line">3.9M    ./Pictures</span><br><span class="line">35M     .</span><br></pre></td></tr></table></figure><p>进一步确认可知是<code>.git/objects</code>占了大头，源代码其实并不大</p><p>深究原因，最根本的在于git的存储方式</p><blockquote><p>Git与你熟悉的大部分版本控制系统的差别是很大的。也许你熟悉Subversion、CVS、Perforce、Mercurial 等等，他们使用 “增量文件系统” （Delta Storage systems）, 就是说它们存储每次提交(commit)之间的差异。Git正好与之相反，它会把你的每次提交的文件的全部内容（snapshot）都会记录下来。这会是在使用Git时的一个很重要的理念。</p><p>——<br><a href="https://github.com/liuhui998/gitbook/blob/master/text_zh/02_Git_Object_Db_Basics/0_%20Git_Object_Db_Basics.markdown#与svn的区别" target="_blank" rel="noopener">Git Book 中文版 - GIT对象模型</a></p></blockquote><p>当然为了保证传输效率，git会在碎片对象过多，或者你向远端服务器发起推送的时候，自动执行一次打包过程。在打包的过程中，git会使用增量编码方案（delta encoding），只保存对象的不同版本之间的差异，这会显著减小repo的大小。</p><p>对我们的目标repo，源文件中包含了编译产生的PDF文件，虽然git使用了增量编码来打包。但由于PDF文件是一个整体，git无法用增量编码来保存差异，而是每次都保存整个pdf文件，所以.git文件夹会越来越大。</p><p>找到了根本原因，下面就要着手解决一下。</p><hr><p><em>上面没<strong>备份</strong>的，现在还有救</em></p><h3 id="step-3-查找大文件"><a href="#step-3-查找大文件" class="headerlink" title="step 3 查找大文件"></a>step 3 查找大文件</h3><p>本例中已经确定大文件是 <code>CallenThermo.pdf</code> 可以直接进行下一步。<br>当然还要提一下通用的方法。</p><p>使用以下命令，查找排名前5的大文件</p><p><code>git rev-list --objects --all | grep &quot;$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -5 | awk &#39;{print$1}&#39;)&quot;</code></p><p>命令详解见 ref:3 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git rev-list --objects --all | grep &quot;$(git verify-pack -v .git/objects/pack/\*.idx | sort -k 3 -n | tail -5 | awk &apos;&#123;print$1&#125;&apos;)&quot;</span><br><span class="line">dd351b9649360a24d890ba8df7cad2b16e2b914d CallenThermo.pdf</span><br><span class="line">31b7802b6ac511e692be2a9ea6a3901d3c04b44d CallenThermo.pdf</span><br><span class="line">0b5af57cea13227839e888f6ad7208355bc3bbe8 CallenThermo.pdf</span><br><span class="line">592063e0dc668dede796a271528f96b872eef537 CallenThermo.pdf</span><br><span class="line">9ac4277398fbfdb99be84a16f149745d728b4b2e CallenThermo.pdf</span><br></pre></td></tr></table></figure><p>确认是<code>CallenThermo.pdf</code>的锅</p><h3 id="step-4-删除大文件"><a href="#step-4-删除大文件" class="headerlink" title="step 4 删除大文件"></a>step 4 删除大文件</h3><h4 id="删除单个大文件"><a href="#删除单个大文件" class="headerlink" title="删除单个大文件"></a>删除单个大文件</h4><p>使用以下命令，删除提交历史中所有的大文件记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --force --index-filter &apos;git rm -rf --cached --ignore-unmatch big-file-name&apos; --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure><p>命令中的 <code>big-file-name</code>请替换为大文件名，这里是<code>CallenThermo.pdf</code>.<br>执行命令后，你可以在输出中看见git正在遍历每一次commit，然后删除其中的大文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">emaining 1 predicted)    rm &apos;CallenThermo.pdf&apos;</span><br><span class="line">Rewrite a9a3ca2ea17ac55b3a769e7eced60059d2de5dd4 (113/116) (43 seconds passed, remaining 1 predicted)    rm &apos;CallenThermo.pdf&apos;</span><br><span class="line">Rewrite cc30f6cabb8a9bc981767138567f79df2593e108 (113/116) (43 seconds passed, remaining 1 predicted)    rm &apos;CallenThermo.pdf&apos;</span><br><span class="line">Rewrite a0b3a37eb34e51b903befa9f3c481c986fcf6e2e (116/116) (45 seconds passed, remaining 0 predicted)</span><br><span class="line">Ref &apos;refs/heads/dev-thin&apos; was rewritten</span><br><span class="line">Ref &apos;refs/heads/master&apos; was rewritten</span><br><span class="line">Ref &apos;refs/remotes/ChzRuan/master&apos; was rewritten</span><br><span class="line">Ref &apos;refs/remotes/origin/master&apos; was rewritten</span><br><span class="line">Ref &apos;refs/remotes/origin/dev&apos; was rewritten</span><br><span class="line">WARNING: Ref &apos;refs/remotes/origin/master&apos; is unchanged</span><br></pre></td></tr></table></figure><p>我本来为了‘安全’，建立了一个新的分支dev-thin。但从输出的最后几行可以出git修改了所有与repo相关的分支，这也是这个操作最危险的一点。</p><h4 id="删除多个大文件"><a href="#删除多个大文件" class="headerlink" title="删除多个大文件"></a>删除多个大文件</h4><p>取得单行的大文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rev-list --objects --all | grep &quot;$(git verify-pack -v .git/objects/pack/\*.idx | sort -k 3 -n | tail -5 | awk &apos;&#123;print$1&#125;&apos;)&quot; | awk &apos;&#123;print $2&#125;&apos; | tr &apos;\n&apos; &apos; &apos; &gt; large-file.txt</span><br></pre></td></tr></table></figure><p>再执行，以下命令，删除大文件记录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch -f --prune-empty --index-filter &quot;git rm -rf --cached --ignore-unmatch `cat large-file.txt`&quot; --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure></p><h3 id="step-5-清理repo"><a href="#step-5-清理repo" class="headerlink" title="step 5 清理repo"></a>step 5 清理repo</h3><p>一开始照着 ref：3 来操作时没有这一步，发现repo的大小几乎没变。<br>找了新的教程后，才成功给repo瘦身。</p><p>一次一行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .git/refs/original/</span><br><span class="line">git for-each-ref --format=&apos;delete %(refname)&apos; refs/original | git update-ref --stdin</span><br><span class="line"></span><br><span class="line">git reflog expire --expire=now --all</span><br><span class="line"></span><br><span class="line">git gc --prune=now</span><br></pre></td></tr></table></figure></p><h3 id="step-6-推送到远端"><a href="#step-6-推送到远端" class="headerlink" title="step 6 推送到远端"></a>step 6 推送到远端</h3><p>以强制覆盖的方式推送你的repo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --force --all</span><br></pre></td></tr></table></figure><p>这里的<code>--all</code>会将所有分支都推送到origin上。当然你也可以只推送master分支： <code>git push origin master --force</code>。</p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ du -d 1 -h</span><br><span class="line">7.2M    ./.git</span><br><span class="line">356K    ./Chaps</span><br><span class="line">1.0K    ./Parts</span><br><span class="line">3.9M    ./Pictures</span><br><span class="line">12M     .</span><br></pre></td></tr></table></figure><p>35M -&gt; 12M 缩减了约2/3，效果立竿见影</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Reverse Engineering 简介(安利向)</title>
      <link href="/Reverse-Engineering-%E7%AE%80%E4%BB%8B-%E5%AE%89%E5%88%A9%E5%90%91/"/>
      <url>/Reverse-Engineering-%E7%AE%80%E4%BB%8B-%E5%AE%89%E5%88%A9%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h1 id="0x1-什么是逆向工程"><a href="#0x1-什么是逆向工程" class="headerlink" title="0x1 什么是逆向工程"></a>0x1 什么是逆向工程</h1><p>根据<a href="https://en.wikipedia.org/" target="_blank" rel="noopener">维基百科</a>上的定义</p><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B" target="_blank" rel="noopener">逆向工程(Reverse engineering)</a><br>是一种技术过程，即对一项目标产品进行逆向分析及研究，从而演绎并得出该产品的处理流程、组织结构、功能性能规格等设计要素。<br>逆向工程源于商业及军事领域中的硬件分析。其主要目的是，在不能轻易获得必要的生产信息下，直接从成品的分析，推导出产品的设计原理。</p></blockquote><a id="more"></a><h2 id="逆向工程的分类"><a href="#逆向工程的分类" class="headerlink" title="逆向工程的分类"></a>逆向工程的分类</h2><p>一般按逆向工程的对象分类：</p><ul><li>机械设备 (machines)</li><li>软件 (software)<ul><li>源代码 (Source code) </li><li>二进制软件 (Binary software)</li><li>协议 (protocols)</li><li>…</li></ul></li><li>硬件及智能卡 (integrated circuits/smart cards)</li><li>军事 (military applications)</li><li>…</li></ul><p><strong>我们关注的逆向工程</strong><br>我们常用的，并且有能力进行分析的对象一般只有软件，对于软件逆向工程一般缩写为RCE(Reverse Code Engineering)</p><p><em>下文均使用RCE代指软件逆向工程，而不是RE，避免混淆</em></p><h2 id="逆向工程的动力"><a href="#逆向工程的动力" class="headerlink" title="逆向工程的动力"></a>逆向工程的动力</h2><p><em>这里只针对RCE</em></p><ul><li>学术／学习目的</li><li>获得无许可／未授权的副本 [破解]</li><li>软件升级或更新 [二次开发]</li><li>…</li></ul><p>对我们而言主要的动力就是这三条。我们日常中接触的比较多的是第二条，也就是各种破解补丁，但这次我们不谈这个，原因有二：1.违法 2.水平不够<br>。我们主要谈谈第一点，在学习逆向工程的过程中，你会学到大量的【计算机科学】相关的知识，从硬件到软件，从机器码到高级语言，从数学到物理[注1]。若果你有兴趣，还可以参加网络安全相关的竞赛即CTF(Capture The Flag)</p><p>[注1]：<a href="http://www.inforsec.org/wp/?p=1316" target="_blank" rel="noopener">云计算中跨虚拟机的Row Hammer攻击和权限提升</a> 属pwn，严格来说和逆向工程关系不大，但是他们找到了物理内存块的排布顺序，也算是一种逆向工程。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Reverse Engineering </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Metapost 入门指南</title>
      <link href="/Metapost-%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
      <url>/Metapost-%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p><strong>目前</strong> 只有Metapost 入门的一些资料合集(非教程)</p><p>联动 <a href="http://wenda.latexstudio.net/article/1022" target="_blank" rel="noopener">Metapost 入门资料(并不是教程)</a></p><a id="more"></a><h1 id="0x0-前言"><a href="#0x0-前言" class="headerlink" title="0x0 前言"></a>0x0 前言</h1><p>我参加数学建模美赛时，由于要根据数据画很多图(类似热力图，根据数值有颜色渐变)，正好用LaTeX写论文，就学习了下用mp+Python批量画图(其实是3M用的都不熟)。<br><strong>简单说没有刚需不是很推荐用mp</strong>，<br>主要是学习曲线较陡，毕竟写起来像伪代码。简单的图可以用几何画板、AxGlyph、Viso，计算结果绘图用3M(MATLAB、Maple、Mathmatica)自带的plot就好，同为LaTeX绘图的还有PGF/TikZ, <del>据说是mp的封装，要好写/理解一些</del>。</p><h1 id="0x1-入门资料"><a href="#0x1-入门资料" class="headerlink" title="0x1 入门资料"></a>0x1 入门资料</h1><h2 id="原版资料"><a href="#原版资料" class="headerlink" title="原版资料"></a>原版资料</h2><p>你可以把mp看做一个宏包，它在常见的发行版中都有，用texlive系列肯定是自带metapost的。</p><p>学一个宏包最好的资料就是他的说明文档，对mp来说有：</p><ul><li><a href="http://texdoc.net/texmf-dist/doc/metapost/base/mpman.pdf" target="_blank" rel="noopener">mpman</a> -<br> MetaPost：A User’s Manual</li><li><a href="http://texdoc.net/texmf-dist/doc/metapost/base/mpintro.pdf" target="_blank" rel="noopener">mpintro</a> -<br> A Beginner’s Guide to MetaPost for Creating High-Quality Graphics</li><li><a href="http://texdoc.net/texmf-dist/doc/metapost/base/mpgraph.pdf" target="_blank" rel="noopener">mpgraph</a> -<br> Drawing Graphs with MetaPost</li><li><a href="http://tug.org/metapost/src/manual/mpboxes.pdf" target="_blank" rel="noopener">mpboxes</a> -<br> Drawing Boxes with MetaPost</li><li><a href="http://tug.org/metapost/src/manual/mplibapi.pdf" target="_blank" rel="noopener">mplibapi</a> -<br> 这个讲的是API相关，暂时用不到</li></ul><p>你可以在 <code>texlive\2016\texmf-dist\doc\metapost\base</code> 下找到他们。</p><p><strong>英语不好也没关系，看图！</strong> 看到喜欢的图就去看他的代码，就算PDF里面没有也不要紧，官方文档自带TeX源代码啊，就在相同目录下 source-manual 和 source-tutorial </p><h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><p>说到图，推荐一波图</p><ul><li>【神器】<a href="http://www.tlhiv.org/mppreview/" target="_blank" rel="noopener">MetaPost Previewer</a> -<br> 在线预览mp代码，支持下载生成的图片</li><li><a href="http://tex.loria.fr/prod-graph/zoonekynd/metapost/metapost.html" target="_blank" rel="noopener">Metapost : exemple</a> -<br> 305 个mp例子，附代码</li><li><a href="http://www.ursoswald.ch/metapost/tutorial.html" target="_blank" rel="noopener">A Very Brief Tutorial</a> -<br> 一些mp图片，附代码</li></ul><h2 id="第三方教程"><a href="#第三方教程" class="headerlink" title="第三方教程"></a>第三方教程</h2><h3 id="Eng"><a href="#Eng" class="headerlink" title="Eng"></a>Eng</h3><ul><li><a href="http://www.latexstudio.net/archives/455" target="_blank" rel="noopener">Learning METAPOST by Doing</a> -<br> 介绍了METAPost的基本使用，附全部的示例代码</li><li><a href="https://www.tug.org/metapost.html" target="_blank" rel="noopener">MetaPost on the Web</a> -<br> 我仿佛听到有人说: “干货太少，我收藏夹还没满”</li></ul><h3 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h3><ul><li><a href="http://www.latexstudio.net/old/books/metapost/METAPOSTcn.pdf" target="_blank" rel="noopener">METAPOST 使用说明</a> -<br> PDF 中文</li><li><a href="http://www.ctex.org/documents/shredder/metapost.html" target="_blank" rel="noopener">MetaPost: 强大的图形语言</a> -<br> 在线 中文</li></ul><h1 id="0x2-可能的坑"><a href="#0x2-可能的坑" class="headerlink" title="0x2 可能的坑"></a>0x2 可能的坑</h1><p>有时候 mpost 编译出的图片是 .0 .1 之类的数字后缀，你可以把他重命名为 .eps 就可以在LaTeX里导入了。</p><p>如果图片过多，可以在 .mp 文件最前面加一行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filenametemplate &quot;%j-%c.eps&quot;; % 文件名-编号.eps</span><br></pre></td></tr></table></figure></p><p>这样就可以自动重命名了</p><p>另：<br>*.log 和 *.mpx 文件都是临时文件可以删掉</p><p>Bat编译脚本</p><p>另存为 get-fig_mps.bat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">mpost myfig.mp</span><br><span class="line">del  *.log  /s</span><br><span class="line">del  *.mpx  /s</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>其中 myfig.mp 是你的mp源代码文件名</p>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
          <category> Metapost </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metapost </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codewars&#39; Kata</title>
      <link href="/Codewars-Kata/"/>
      <url>/Codewars-Kata/</url>
      
        <content type="html"><![CDATA[<p>看到 <a href="www.codewars.com/r/S2zJGQ">Codewars</a> oj类似物，不过可以看到详细的报错，并在AC一次后看到别人的答案</p><p>开坑记录一下有趣的题, 顺便采用新结构 [堆栈类似物]</p><a id="more"></a><p><a href="https://www.codewars.com/users/0u0/completed_solutions" target="_blank" rel="noopener">我的解题集</a></p><h3 id="1ku"><a href="#1ku" class="headerlink" title="1ku"></a>1ku</h3><h3 id="2ku"><a href="#2ku" class="headerlink" title="2ku"></a>2ku</h3><h3 id="3ku"><a href="#3ku" class="headerlink" title="3ku"></a>3ku</h3><h3 id="4ku"><a href="#4ku" class="headerlink" title="4ku"></a>4ku</h3><p><a href="https://www.codewars.com/kata/roman-numerals-decoder" target="_blank" rel="noopener">Roman Numerals Decoder</a></p><p>根据以前找的js，改写一下带验证的函数<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Roman_Num_Decoder</span><span class="params">(s)</span></span></span><br><span class="line">  validator = <span class="regexp">/^M*(?:D?C&#123;0,3&#125;|C[MD])(?:L?X&#123;0,3&#125;|X[CL])(?:V?I&#123;0,3&#125;|I[XV])$/</span></span><br><span class="line">  token = <span class="regexp">/[MDLV]|C[MD]?|X[CL]?|I[XV]?/</span></span><br><span class="line">key = &#123; <span class="symbol">M:</span><span class="number">1000</span>,</span><br><span class="line">          <span class="symbol">CM:</span><span class="number">900</span>, <span class="symbol">D:</span><span class="number">500</span>, <span class="symbol">CD:</span><span class="number">400</span>, <span class="symbol">C:</span><span class="number">100</span>,</span><br><span class="line">          <span class="symbol">XC:</span><span class="number">90</span>,  <span class="symbol">L:</span><span class="number">50</span>,  <span class="symbol">XL:</span><span class="number">40</span>,  <span class="symbol">X:</span><span class="number">10</span>,</span><br><span class="line">          <span class="symbol">IX:</span><span class="number">9</span>,   <span class="symbol">V:</span><span class="number">5</span>,   <span class="symbol">IV:</span><span class="number">4</span>,   <span class="symbol">I:</span><span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  s.upcase.split(<span class="string">' '</span>).map <span class="keyword">do</span> <span class="params">|rnum|</span></span><br><span class="line">    <span class="keyword">if</span> validator.match(rnum)</span><br><span class="line">      rnum.scan(token).</span><br><span class="line">      reduce(<span class="number">0</span>) &#123;<span class="params">|sum, rn|</span> sum+=key[rn.to_sym]&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      puts <span class="string">"Not valid Roman Numbers!\n"</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">'CI XCVII CXV CXXI XCIX CXVI CII CXXIII CXVI CIV CV CXV XCV CV CXV XCV CX CXI CXVI XCV CXVI CIV CI XCV CII CVIII XCVII CIII CXXV XXXII CV XXXII CVII CX CXI CXIX XXXII CXVI CIV CV CXV XXXII CII CVIII XCVII CIII XXXII CV CXV XXXII CXIX CI CV CXIV C XXXII CV XXXII CVI CXVII CXV CXVI XXXII XCIX XCVII CX XXXIX CXVI XXXII CXII CXVII CXVI XXXII CIX CXXI XXXII CII CV CX CIII CI CXIV XXXII CXI CX XXXII CXIX CIV CXXI'</span></span><br><span class="line">p Roman_Num_Decoder(s)</span><br></pre></td></tr></table></figure></p><p>题目要求的无检验<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Roman_Num_Decoder</span><span class="params">(s)</span></span></span><br><span class="line">  token = <span class="regexp">/[MDLV]|C[MD]?|X[CL]?|I[XV]?/</span></span><br><span class="line">key = &#123; <span class="symbol">M:</span><span class="number">1000</span>,</span><br><span class="line">          <span class="symbol">CM:</span><span class="number">900</span>, <span class="symbol">D:</span><span class="number">500</span>, <span class="symbol">CD:</span><span class="number">400</span>, <span class="symbol">C:</span><span class="number">100</span>,</span><br><span class="line">          <span class="symbol">XC:</span><span class="number">90</span>,  <span class="symbol">L:</span><span class="number">50</span>,  <span class="symbol">XL:</span><span class="number">40</span>,  <span class="symbol">X:</span><span class="number">10</span>,</span><br><span class="line">          <span class="symbol">IX:</span><span class="number">9</span>,   <span class="symbol">V:</span><span class="number">5</span>,   <span class="symbol">IV:</span><span class="number">4</span>,   <span class="symbol">I:</span><span class="number">1</span>&#125;</span><br><span class="line">  </span><br><span class="line">  s.</span><br><span class="line">    upcase.</span><br><span class="line">    scan(token).</span><br><span class="line">    reduce(<span class="number">0</span>) &#123;<span class="params">|sum, rn|</span> sum+=key[rn.to_sym]&#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">'CI XCVII CXV CXXI XCIX CXVI CII CXXIII CXVI CIV CV CXV XCV CV CXV XCV CX CXI CXVI XCV CXVI CIV CI XCV CII CVIII XCVII CIII CXXV XXXII CV XXXII CVII CX CXI CXIX XXXII CXVI CIV CV CXV XXXII CII CVIII XCVII CIII XXXII CV CXV XXXII CXIX CI CV CXIV C XXXII CV XXXII CVI CXVII CXV CXVI XXXII XCIX XCVII CX XXXIX CXVI XXXII CXII CXVII CXVI XXXII CIX CXXI XXXII CII CV CX CIII CI CXIV XXXII CXI CX XXXII CXIX CIV CXXI'</span></span><br><span class="line"></span><br><span class="line">s.split(<span class="string">' '</span>).each <span class="keyword">do</span> <span class="params">|rn|</span></span><br><span class="line">  print Roman_Num_Decoder(rn), <span class="string">', '</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">print <span class="string">"\n"</span></span><br></pre></td></tr></table></figure></p><h3 id="5ku"><a href="#5ku" class="headerlink" title="5ku"></a>5ku</h3><p><a href="https://www.codewars.com/kata/simple-fun-number-299-look-and-say-and-sum" target="_blank" rel="noopener">“Simple Fun #299: Look And Say And Sum” Translation</a></p><p><strong>Solution</strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> Haskell.Codewars.LookAndSayAndSum <span class="keyword">where</span></span><br><span class="line"><span class="keyword">import</span> Data.List (<span class="title">group</span>)</span><br><span class="line"><span class="keyword">import</span> Data.Char (<span class="title">digitToInt</span>)</span><br><span class="line"></span><br><span class="line"><span class="title">lookAndSay'</span> :: <span class="type">Integer</span> -&gt; <span class="type">Integer</span></span><br><span class="line"><span class="title">lookAndSay'</span> n = read (concatMap count (group (show n)))</span><br><span class="line">  <span class="keyword">where</span> </span><br><span class="line">    count run = show (length run) ++ take <span class="number">1</span> run</span><br><span class="line"></span><br><span class="line"><span class="title">toDigits</span> = map (fromIntegral . digitToInt) . show</span><br><span class="line"></span><br><span class="line"><span class="title">lookAndSaySum</span> :: <span class="type">Int</span> -&gt; <span class="type">Int</span></span><br><span class="line"><span class="title">lookAndSaySum</span> n = foldr (+) <span class="number">0</span> (toDigits (iterate lookAndSay' <span class="number">1</span> !! (n - <span class="number">1</span>)) )</span><br></pre></td></tr></table></figure><p><strong>Test Case</strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Test.Hspec</span><br><span class="line"><span class="keyword">import</span> Haskell.Codewars.LookAndSayAndSum (<span class="title">lookAndSaySum</span>)</span><br><span class="line"><span class="keyword">import</span> System.Random</span><br><span class="line"></span><br><span class="line"><span class="title">sol</span> :: <span class="type">Int</span> -&gt; <span class="type">Int</span></span><br><span class="line"><span class="title">sol</span> n = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">23</span>,<span class="number">32</span>,<span class="number">44</span>,<span class="number">56</span>,<span class="number">76</span>,<span class="number">102</span>,<span class="number">132</span>,<span class="number">174</span>,<span class="number">227</span>,<span class="number">296</span>,<span class="number">383</span>,<span class="number">505</span>,<span class="number">679</span>,<span class="number">892</span>,<span class="number">1151</span>,<span class="number">1516</span>,<span class="number">1988</span>,<span class="number">2602</span>,<span class="number">3400</span>,<span class="number">4410</span>,<span class="number">5759</span>,<span class="number">7519</span>,<span class="number">9809</span>,<span class="number">12810</span>,<span class="number">16710</span>,<span class="number">21758</span>,<span class="number">28356</span>,<span class="number">36955</span>,<span class="number">48189</span>,<span class="number">62805</span>,<span class="number">81803</span>,<span class="number">106647</span>,<span class="number">139088</span>,<span class="number">181301</span>,<span class="number">236453</span>,<span class="number">308150</span>,<span class="number">401689</span>,<span class="number">523719</span>,<span class="number">682571</span>,<span class="number">889807</span>,<span class="number">1159977</span>,<span class="number">1511915</span>,<span class="number">1970964</span>,<span class="number">2569494</span>,<span class="number">3349648</span>,<span class="number">4366359</span>,<span class="number">5691884</span>] !! n</span><br><span class="line"></span><br><span class="line"><span class="title">randint</span> :: <span class="type">IO</span> <span class="type">Int</span></span><br><span class="line"><span class="title">randint</span> = randomRIO (<span class="number">1</span>,<span class="number">55</span>)</span><br><span class="line"></span><br><span class="line"><span class="title">main</span> :: <span class="type">IO</span> ()</span><br><span class="line"><span class="title">main</span> = hspec $ <span class="keyword">do</span></span><br><span class="line">  describe <span class="string">"Unit tests"</span> $ <span class="keyword">do</span></span><br><span class="line">    it <span class="string">"Basic tests"</span> $ <span class="keyword">do</span></span><br><span class="line">      lookAndSaySum <span class="number">1</span> `shouldBe` <span class="number">1</span></span><br><span class="line">      lookAndSaySum <span class="number">2</span> `shouldBe` <span class="number">2</span></span><br><span class="line">      lookAndSaySum <span class="number">3</span> `shouldBe` <span class="number">3</span></span><br><span class="line">      lookAndSaySum <span class="number">4</span> `shouldBe` <span class="number">5</span></span><br><span class="line">      lookAndSaySum <span class="number">5</span> `shouldBe` <span class="number">8</span></span><br><span class="line">    it <span class="string">"Radnom tests"</span> $ <span class="keyword">do</span></span><br><span class="line">      rint &lt;- sequence (replicate <span class="number">5</span> randint) </span><br><span class="line">      map lookAndSaySum rint `shouldBe` map sol rint</span><br></pre></td></tr></table></figure><p><a href="https://www.codewars.com/kata/first-variation-on-caesar-cipher" target="_blank" rel="noopener">First Variation on Caesar Cipher</a></p><p>5ku的题果然不是那么简单的<br>先写一个凯撒函数<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movingShift</span><span class="params">(s, shift)</span></span></span><br><span class="line">  s.gsub!(<span class="regexp">/[A-Z]/</span>) <span class="keyword">do</span> <span class="params">|c|</span> </span><br><span class="line">    tmp = c.ord.+(shift%<span class="number">27</span>).<span class="string">%('Z'.ord+1)</span></span><br><span class="line">    tmp += <span class="string">'A'</span>.ord <span class="keyword">unless</span> tmp &gt;= c.ord</span><br><span class="line">    tmp.chr</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  s.gsub!(<span class="regexp">/[a-z]/</span>) <span class="keyword">do</span> <span class="params">|c|</span> </span><br><span class="line">    tmp = c.ord.+(shift%<span class="number">27</span>).<span class="string">%('z'.ord+1)</span></span><br><span class="line">    tmp += <span class="string">'a'</span>.ord <span class="keyword">unless</span> tmp &gt;= c.ord</span><br><span class="line">    tmp.chr</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demovingShift</span><span class="params">(arr, shift)</span></span></span><br><span class="line">  movingShift(arr.join, <span class="number">26</span>-shift)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p u = <span class="string">"I should have known that you would have a perfect answer for me!!!"</span></span><br><span class="line">p v = movingShift(u, <span class="number">1</span>)</span><br><span class="line">p demovingShift(v, <span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><p><strong>Simplify</strong><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movingShift</span><span class="params">(s, shift)</span></span></span><br><span class="line">  t = s.chars.join    <span class="comment"># deep clone 保证输入字符串s不变</span></span><br><span class="line">  t.gsub!(<span class="regexp">/\w/</span>) <span class="keyword">do</span> <span class="params">|c|</span> </span><br><span class="line">    isUC = c.ord &lt; <span class="number">91</span></span><br><span class="line">    tmp = c.ord.+(shift%<span class="number">26</span>).<span class="string">%((isUC ? 'Z' : 'z')</span>.ord+<span class="number">1</span>)</span><br><span class="line">    tmp += (isUC ? <span class="string">'A'</span> : <span class="string">'a'</span>).ord <span class="keyword">unless</span> tmp &gt;= c.ord</span><br><span class="line">    tmp.chr</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>按题意修改程序，并格式化输出<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movingShift</span><span class="params">(s, shift)</span></span></span><br><span class="line">  s.chars.map.with_index <span class="keyword">do</span> <span class="params">|c, i|</span></span><br><span class="line">    <span class="keyword">if</span> c =~ <span class="regexp">/\w/</span></span><br><span class="line">      isUC = c.ord &lt; <span class="number">91</span></span><br><span class="line">      tmp = c.ord.+((i+shift)%<span class="number">26</span>).<span class="string">%((isUC ? 'Z' : 'z')</span>.ord+<span class="number">1</span>)</span><br><span class="line">      tmp += (isUC ? <span class="string">'A'</span> : <span class="string">'a'</span>).ord <span class="keyword">unless</span> tmp &gt;= c.ord</span><br><span class="line">      tmp.chr</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      c</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span>.each_slice(s.length/<span class="number">5</span>+<span class="number">1</span>).to_a.map&#123;<span class="params">|a|</span> a.join&#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demovingShift</span><span class="params">(arr, shift)</span></span></span><br><span class="line">  arr.join.chars.map.with_index <span class="keyword">do</span> <span class="params">|c, i|</span></span><br><span class="line">    <span class="keyword">if</span> c =~ <span class="regexp">/\w/</span></span><br><span class="line">      movingShift(c, <span class="number">26</span>-shift-i)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      c</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span>.join</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>解决数字干扰问题，并添加奇怪的输出格式支持<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movingShift</span><span class="params">(s, shift)</span></span></span><br><span class="line">  len = s.length</span><br><span class="line">  @obj = <span class="literal">nil</span></span><br><span class="line">  s.chars.map.with_index <span class="keyword">do</span> <span class="params">|c, i|</span></span><br><span class="line">    <span class="keyword">if</span> c =~ <span class="regexp">/[a-z]/i</span></span><br><span class="line">      isUC = c.ord &lt; <span class="number">91</span></span><br><span class="line">      tmp = c.ord.+((i+shift)%<span class="number">26</span>).<span class="string">%((isUC ? 'Z' : 'z')</span>.ord+<span class="number">1</span>)</span><br><span class="line">      tmp += (isUC ? <span class="string">'A'</span> : <span class="string">'a'</span>).ord <span class="keyword">unless</span> tmp &gt;= c.ord</span><br><span class="line">      tmp.chr</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      c</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span>.</span><br><span class="line">  each_slice(len%<span class="number">5</span> == <span class="number">0</span> ? len/<span class="number">5</span>: len/<span class="number">5</span>+<span class="number">1</span>).</span><br><span class="line">  to_a.map&#123;<span class="params">|a|</span> a.join&#125;.</span><br><span class="line">  tap&#123;<span class="params">|obj|</span> @obj = obj&#125;.            <span class="comment"># 从链式调用中 ‘抽样’</span></span><br><span class="line">  +(@obj.length == <span class="number">5</span> ? [] : [<span class="string">''</span>])   <span class="comment"># 保证返回的数组有5个元素</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demovingShift</span><span class="params">(arr, shift)</span></span></span><br><span class="line">  arr.join.chars.map.with_index <span class="keyword">do</span> <span class="params">|c, i|</span></span><br><span class="line">    <span class="keyword">if</span> c =~ <span class="regexp">/[a-z]/i</span></span><br><span class="line">      movingShift(c, <span class="number">26</span>-shift-i)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      c</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span>.join</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h3 id="6ku"><a href="#6ku" class="headerlink" title="6ku"></a>6ku</h3><p><a href="https://www.codewars.com/kata/dubstep/ruby" target="_blank" rel="noopener">Dubstep</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">song_decoder</span><span class="params">(song)</span></span></span><br><span class="line">  song.gsub(<span class="regexp">/(WUB)+/</span>, <span class="string">' '</span>).strip</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>GET 新函数<code>strip</code>,去除字符串前后空白字符.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strip → new_str click to toggle source</span><br><span class="line">Returns a copy of str with leading and trailing whitespace removed.</span><br></pre></td></tr></table></figure></p><p><a href="https://www.codewars.com/kata/5626b561280a42ecc50000d1" target="_blank" rel="noopener">Take a Number And Sum Its Digits Raised To The Consecutive Powers And ….¡Eureka!!</a></p><p>GET：</p><ul><li>知道了<code>enumerate</code> &lt;- 不记得枚举，最后写了个循环</li></ul><p>My Solution - Reduce ver<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_dig_pow</span><span class="params">(a, b)</span>:</span> </span><br><span class="line">    <span class="keyword">return</span> filter(</span><br><span class="line">        <span class="keyword">lambda</span> g:</span><br><span class="line">            reduce(</span><br><span class="line">                <span class="keyword">lambda</span> y,x: y+int(str(g)[x])**(x+<span class="number">1</span>), range(<span class="number">0</span>, len(str(g))), <span class="number">0</span></span><br><span class="line">            ) == g</span><br><span class="line">        , range(a, b+<span class="number">1</span>))</span><br></pre></td></tr></table></figure></p><p>enumerate ver<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_dig_pow</span><span class="params">(a, b)</span>:</span> </span><br><span class="line">    <span class="keyword">return</span> filter(</span><br><span class="line">        <span class="keyword">lambda</span> g:</span><br><span class="line">            sum(</span><br><span class="line">                int(d) ** (i+<span class="number">1</span>) </span><br><span class="line">                <span class="keyword">for</span> i, d <span class="keyword">in</span> enumerate(str(a))</span><br><span class="line">            ) == a</span><br><span class="line">        , range(a, b+<span class="number">1</span>))</span><br></pre></td></tr></table></figure></p><h3 id="7ku"><a href="#7ku" class="headerlink" title="7ku"></a>7ku</h3><p>a.map{|arr| arr.map{|a| avg = a.reduce(:+)./3; [avg, avg, avg] }}</p><p><a href="https://www.codewars.com/kata/578553c3a1b8d5c40300037c" target="_blank" rel="noopener">Ones and Zeros</a></p><p>GET:</p><ul><li><code>join</code>的玩法</li></ul><p>Reduce ver<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_array_to_number</span><span class="params">(arr)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(reduce(<span class="keyword">lambda</span> y,x:y+str(x), arr, <span class="string">''</span>), <span class="number">2</span>)</span><br></pre></td></tr></table></figure></p><p>join ver<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_array_to_number</span><span class="params">(arr)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(<span class="string">""</span>.join(map(str, arr)), <span class="number">2</span>)</span><br></pre></td></tr></table></figure></p><p><a href="https://www.codewars.com/kata/55f8a9c06c018a0d6e000132" target="_blank" rel="noopener">Regex validate PIN code</a></p><p>GET:</p><ul><li>正则表达式姿势<br><code>^[0-9]{4}$</code>+<code>^[0-9]{6}$</code>==<code>^(\d{4}|\d{6})$</code></li></ul><p><a href="https://www.codewars.com/kata/56747fd5cb988479af000028" target="_blank" rel="noopener">Get the Middle Character</a></p><p>GET:</p><ul><li>复习了Python 的整除</li></ul><p><a href="https://www.codewars.com/kata/558fc85d8fd1938afb000014" target="_blank" rel="noopener">Sum of two lowest positive integers</a></p><p>GET：</p><ul><li>sort&amp;sorted 的用法</li></ul><blockquote><p>a = [5,2,1,9,6]        </p><p>>&gt;&gt; sorted(a)                  #将a从小到大排序,不影响a本身结构<br>[1, 2, 5, 6, 9] </p><p>>&gt;&gt; sorted(a,reverse = True)   #将a从大到小排序,不影响a本身结构<br>[9, 6, 5, 2, 1] </p><p>>&gt;&gt; a.sort()                   #将a从小到大排序,影响a本身结构<br>>&gt;&gt; a<br>[1, 2, 5, 6, 9] </p><p>>&gt;&gt; a.sort(reverse = True)     #将a从大到小排序,影响a本身结构<br>>&gt;&gt; a<br>[9, 6, 5, 2, 1] </p></blockquote><h3 id="8ku"><a href="#8ku" class="headerlink" title="8ku"></a>8ku</h3><p><a href="https://www.codewars.com/kata/57356c55867b9b7a60000bd7" target="_blank" rel="noopener">Basic Mathematical Operations</a></p><p>Get:</p><ul><li><code>switch-case</code>替代方案</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">basic_op</span><span class="params">(operator, value1, value2)</span>:</span></span><br><span class="line">    ops = &#123;<span class="string">'+'</span>: <span class="keyword">lambda</span> a, b: a + b, </span><br><span class="line">           <span class="string">'-'</span>: <span class="keyword">lambda</span> a, b: a - b,</span><br><span class="line">           <span class="string">'*'</span>: <span class="keyword">lambda</span> a, b: a * b,</span><br><span class="line">           <span class="string">'/'</span>: <span class="keyword">lambda</span> a, b: a / b&#125;</span><br><span class="line">    <span class="keyword">return</span> ops[operator](value1, value2)</span><br></pre></td></tr></table></figure><p><a href="https://www.codewars.com/kata/55d24f55d7dd296eb9000030" target="_blank" rel="noopener">Grasshopper - Summation</a></p><p>GET:</p><ul><li><code>reduce&amp;lambda表达式</code> 初体验</li></ul><p><a href="https://www.codewars.com/kata/56bc28ad5bdaeb48760009b0" target="_blank" rel="noopener">Remove First and Last Character</a></p><p>GET:</p><ul><li>切片技巧</li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shiyanbar CTF write up</title>
      <link href="/shiyanbar-CTF-write-up/"/>
      <url>/shiyanbar-CTF-write-up/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="2002-Spamcarver-实验吧"><a href="#2002-Spamcarver-实验吧" class="headerlink" title="2002-Spamcarver-实验吧"></a>2002-<a href="http://www.shiyanbar.com/ctf/2002" target="_blank" rel="noopener">Spamcarver-实验吧</a></h2><p>Stegsolve 看了一下，没发现什么。</p><p>binwalk 看一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">% binwalk spamcarver.jpg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">64001         0xFA01          End of Zip archive</span><br></pre></td></tr></table></figure></p><p>改成<code>.zip</code>解压 (最好在linux下进行)</p><blockquote><p>Win上删不掉解压出的文件，可以试试 <a href="http://www.xuetr.com/?p=191" target="_blank" rel="noopener">PC Hunter V1.52发布，支持Win10(15063)</a><br>如果Win10 PChunter驱动加载失败，可以换 <a href="http://www.gmer.net/" target="_blank" rel="noopener">GMER - Rootkit Detector and Remover</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">======================================================================</span><br><span class="line">===== ***** 删除之前保存好其他工作，做好_蓝屏_重启的准备 ******** ========  ======================================================================</span><br></pre></td></tr></table></figure><p>解压出的文件用binwalk看一下，发现是jpeg，改名打开(win上打开)，得到flag</p><img src="/shiyanbar-CTF-write-up/2002-Spamcarver-flag.jpg" title="Flag"><p>[2017-11-09 14:24:26]</p><blockquote><p>flag{7adf6f07e0810003c585a7be97868a90}</p></blockquote><p>Other writeup:</p><ul><li><a href="https://github.com/ctfs/write-ups-2013/tree/master/pico-ctf-2013/spamcarver" target="_blank" rel="noopener">write-ups-2013/pico-ctf-2013/spamcarver at master · ctfs/write-ups-2013</a></li></ul><hr><h2 id="2001-NAVSAT-实验吧"><a href="#2001-NAVSAT-实验吧" class="headerlink" title="2001-NAVSAT-实验吧"></a>2001-<a href="http://www.shiyanbar.com/ctf/2001" target="_blank" rel="noopener">NAVSAT-实验吧</a></h2><p>ref:</p><ul><li><a href="http://bobao.360.cn/ctf/detail/203.html" target="_blank" rel="noopener">【CTF 攻略】CTF比赛中关于zip的总结 - 安全客 - 有思想的安全新媒体</a></li><li><a href="https://ctf-wiki.github.io/ctf-wiki/misc/archive/zip.html" target="_blank" rel="noopener">Zip 格式 — CTF Wiki 文档</a></li><li><a href="http://blog.csdn.net/ETF6996/article/details/51946250" target="_blank" rel="noopener">zip伪加密 - CSDN博客</a></li></ul><p>尝试 <code>unzip</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; unzip recovery.zip</span><br><span class="line">Archive:  recovery.zip</span><br><span class="line">file #1:  bad zipfile offset (local header sig):  0</span><br><span class="line">inflating: Mag7-BW/Chart-15.pdf</span><br></pre></td></tr></table></figure></p><p>报错说zip头的签名没了，只解压出一个pdf。<br>看一下pdf也没有有价值的信息。</p><p><code>zipinfo</code>看一下，发现key.txt预计flag就在里面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; zipinfo recovery.zip</span><br><span class="line">Archive:  recovery.zip</span><br><span class="line">Zip file size: 283883 bytes, number of entries: 3</span><br><span class="line">-rw-rw-r--  3.0 unx       27 tx stor 13-Apr-15 03:09 Mag7-BW/key.txt</span><br><span class="line">-rw-r--r--  3.0 unx   341644 bx defN 05-Feb-08 11:49 Mag7-BW/Chart-15.pdf</span><br><span class="line">drwxr-xr-x  3.0 unx        0 bx stor 13-Apr-15 03:13 Mag7-BW/</span><br><span class="line">3 files, 341671 bytes uncompressed, 283391 bytes compressed:  17.1%</span><br></pre></td></tr></table></figure></p><p>看一下文件头<br><img src="/shiyanbar-CTF-write-up/2001-NAVSAT-hex1.png" title="File header"></p><p>确认是文件头有问题，把文件头改成 <code>50 4B 03 04</code></p><blockquote><p>zip文件格式参考： <a href="https://ctf-wiki.github.io/ctf-wiki/misc/archive/zip.html" target="_blank" rel="noopener">Zip 格式 — CTF Wiki 文档</a><br>工具推荐：在线HexEditor <a href="https://hexed.it/" target="_blank" rel="noopener">HexEd.it</a></p></blockquote><p>解压得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; unzip recovery.zip</span><br><span class="line">Archive:  recovery.zip</span><br><span class="line">extracting: Mag7-BW/key.txt         </span><br><span class="line">replace Mag7-BW/Chart-15.pdf? [y]es, [n]o, [A]ll, [N]one, [r]ename: A</span><br><span class="line">inflating: Mag7-BW/Chart-15.pdf    </span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&gt; cat key.txt</span><br><span class="line">Key: Next stop Tau Eridani</span><br></pre></td></tr></table></figure></p><p>[2017-11-09 10:20:32]</p><blockquote><p>flag{Next stop Tau Eridani}</p></blockquote><p>Other writeup:</p><ul><li><a href="https://github.com/ctfs/write-ups-2013/tree/master/pico-ctf-2013/navsat" target="_blank" rel="noopener">write-ups-2013/pico-ctf-2013/navsat at master · ctfs/write-ups-2013</a></li></ul><h2 id="2000-In-Hex-No-One-Can-Hear-You-Complain-实验吧"><a href="#2000-In-Hex-No-One-Can-Hear-You-Complain-实验吧" class="headerlink" title="2000- In Hex, No One Can Hear You Complain-实验吧"></a>2000- <a href="http://www.shiyanbar.com/ctf/2000" target="_blank" rel="noopener">In Hex, No One Can Hear You Complain-实验吧</a></h2><p>binwalk 一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">~/Desktop❯ binwalk kane.docx</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             Zip archive data, at least v2.0 to extract, compressed size: 287, uncompressed size: 987, name: [Content_Types].xml</span><br><span class="line">336           0x150           Zip archive data, at least v2.0 to extract, compressed size: 217, uncompressed size: 573, name: _rels/.rels</span><br><span class="line">594           0x252           Zip archive data, at least v2.0 to extract, compressed size: 218, uncompressed size: 358, name: docProps/app.xml</span><br><span class="line">858           0x35A           Zip archive data, at least v2.0 to extract, compressed size: 282, uncompressed size: 507, name: docProps/core.xml</span><br><span class="line">1187          0x4A3           Zip archive data, at least v2.0 to extract, compressed size: 432, uncompressed size: 3240, name: word/_rels/document.xml.rels</span><br><span class="line">1677          0x68D           Zip archive data, at least v2.0 to extract, compressed size: 1490, uncompressed size: 12277, name: word/document.xml</span><br><span class="line">3214          0xC8E           Zip archive data, at least v2.0 to extract, compressed size: 223, uncompressed size: 595, name: word/fontTable.xml</span><br><span class="line">3485          0xD9D           Zip archive data, at least v2.0 to extract, compressed size: 23084, uncompressed size: 26718, name: word/media/key.png</span><br><span class="line">26617         0x67F9          Zip archive data, at least v2.0 to extract, compressed size: 586, uncompressed size: 2055, name: word/styles.xml</span><br><span class="line">27821         0x6CAD          End of Zip archive</span><br></pre></td></tr></table></figure></p><p>看见 key.png 直接解压</p><img src="/shiyanbar-CTF-write-up/2000-docz.png"><p>[2017-11-09 14:29:49]</p><blockquote><p>flag{docx_why_not_docz}</p></blockquote><hr><h2 id="1999-stegas-300-实验吧"><a href="#1999-stegas-300-实验吧" class="headerlink" title="1999- stegas 300-实验吧"></a>1999- <a href="http://www.shiyanbar.com/ctf/1999" target="_blank" rel="noopener">stegas 300-实验吧</a></h2><p>AU看一下波形<br><img src="/shiyanbar-CTF-write-up/1999-stegas-wav.png"></p><hr><h2 id="1998-CFG-to-C-实验吧"><a href="#1998-CFG-to-C-实验吧" class="headerlink" title="1998- CFG to C-实验吧"></a>1998- <a href="http://www.shiyanbar.com/ctf/1998" target="_blank" rel="noopener">CFG to C-实验吧</a></h2><p>直接看代码可借。</p><p>OR gcc 编译一下，然后IDA看：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">modulo</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b % a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">loop</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (a &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        a--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">control</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">for_loop</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">         a = c + i;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span> </span>&#123;</span><br><span class="line">  modulo(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">  loop(<span class="number">5</span>);</span><br><span class="line">  control(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">  for_loop(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/shiyanbar-CTF-write-up/1998-CFG2C-f-modulo.png" title="Func modulo"><img src="/shiyanbar-CTF-write-up/1998-CFG2C-f-loop.png" title="Func loop"><img src="/shiyanbar-CTF-write-up/1998-CFG2C-f-control.png" title="Func control"><img src="/shiyanbar-CTF-write-up/1998-CFG2C-f-for_loop.png" title="Func for_loop"><p>[2017-11-09 14:58:13]</p><blockquote><p>BCDA</p></blockquote><hr><h2 id="1997-Byte-Code-实验吧"><a href="#1997-Byte-Code-实验吧" class="headerlink" title="1997- Byte Code-实验吧"></a>1997- <a href="http://www.shiyanbar.com/ctf/1997" target="_blank" rel="noopener">Byte Code-实验吧</a></h2><blockquote><p>You need to authenticate with the guard to gain access to the loading bay! Enter the root password from the vault application to retrieve the <strong>passkey</strong>! This class file is the executable for the vault application.</p></blockquote><p>JAD 反编译一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.</span></span><br><span class="line"><span class="comment">// Jad home page: http://www.kpdus.com/jad.html</span></span><br><span class="line"><span class="comment">// Decompiler options: packimports(3)</span></span><br><span class="line"><span class="comment">// Source File Name:   Authenticator.java</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Console;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Authenticator</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Authenticator</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        key = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">10</span>];</span><br><span class="line">        key[<span class="number">0</span>] = <span class="string">'A'</span>;</span><br><span class="line">        key[<span class="number">1</span>] = <span class="string">'o'</span>;</span><br><span class="line">        key[<span class="number">2</span>] = <span class="string">'J'</span>;</span><br><span class="line">        key[<span class="number">3</span>] = <span class="string">'k'</span>;</span><br><span class="line">        key[<span class="number">4</span>] = <span class="string">'V'</span>;</span><br><span class="line">        key[<span class="number">5</span>] = <span class="string">'h'</span>;</span><br><span class="line">        key[<span class="number">6</span>] = <span class="string">'L'</span>;</span><br><span class="line">        key[<span class="number">7</span>] = <span class="string">'w'</span>;</span><br><span class="line">        key[<span class="number">8</span>] = <span class="string">'U'</span>;</span><br><span class="line">        key[<span class="number">9</span>] = <span class="string">'R'</span>;</span><br><span class="line">        <span class="comment">// key = "AoJkVhLwUR"</span></span><br><span class="line">        Console console = System.console();</span><br><span class="line">        <span class="keyword">for</span>(String s = <span class="string">""</span>;</span><br><span class="line">            !s.equals(<span class="string">"ThisIsth3mag1calString4458"</span>);</span><br><span class="line">            s = console.readLine(<span class="string">"Enter password:"</span>, <span class="keyword">new</span> Object[<span class="number">0</span>]));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; key.length; i++)</span><br><span class="line">            System.out.print(key[i]);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">char</span> key[];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[2017-11-09 15:22:52]</p><blockquote><p>AoJkVhLwUR</p></blockquote><h2 id="1822-凯撒和某某加密"><a href="#1822-凯撒和某某加密" class="headerlink" title="1822 凯撒和某某加密"></a>1822 凯撒和某某加密</h2><p>[2017-03-15 13:15:04]</p><blockquote><p>flag{_Just_4_fun_0.0_}</p></blockquote><hr><h2 id="1788-Guess-Next-Session-实验吧"><a href="#1788-Guess-Next-Session-实验吧" class="headerlink" title="1788- Guess Next Session-实验吧"></a>1788- <a href="http://www.shiyanbar.com/ctf/1788" target="_blank" rel="noopener">Guess Next Session-实验吧</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">if (isset ($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">    if ($_GET[&apos;password&apos;] == $_SESSION[&apos;password&apos;])</span><br><span class="line">        die (&apos;Flag: &apos;.$flag);</span><br><span class="line">    else</span><br><span class="line">        print &apos;&lt;p&gt;Wrong guess.&lt;/p&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand((microtime() ^ rand(1, 10000)) % rand(1, 10000) + rand(1, 10000));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>CTF{Cl3ar_th3_S3ss1on}</p></blockquote><h2 id="1787-FALSE-实验吧"><a href="#1787-FALSE-实验吧" class="headerlink" title="1787- FALSE-实验吧"></a>1787- <a href="http://www.shiyanbar.com/ctf/1787" target="_blank" rel="noopener">FALSE-实验吧</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Your password can not be your name!&lt;/p&gt;'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password.&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;Login first!&lt;/p&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输入数组sha1函数会报错</p><p>Payload = false.php?name[]=0&amp;password[]=</p><p>[2017-11-09 16:43:35]</p><blockquote><p>CTF{t3st_th3_Sha1}</p></blockquote><hr><h2 id="34-一段奇怪的代码-实验吧"><a href="#34-一段奇怪的代码-实验吧" class="headerlink" title="34- 一段奇怪的代码-实验吧"></a>34- <a href="http://www.shiyanbar.com/ctf/34" target="_blank" rel="noopener">一段奇怪的代码-实验吧</a></h2><p>VBscript.Encode</p><p>[2017-11-09 16:38:43]</p><blockquote><p>VbSciptEncodE</p></blockquote><hr><h2 id="7-这里没有key-实验吧"><a href="#7-这里没有key-实验吧" class="headerlink" title="7- 这里没有key-实验吧"></a>7- <a href="http://www.shiyanbar.com/ctf/7" target="_blank" rel="noopener">这里没有key-实验吧</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- #@~^TgAAAA==&apos;[6*liLa6++p&apos;aXvfiLaa6i[[avWi[[a*p[[6*!I&apos;[6cp&apos;aXvXILa6fp[:6+Wp[:XvWi[[6+XivRIAAA==^#~@ --&gt;</span><br></pre></td></tr></table></figure><p>Tool:- <a href="http://www.cnblogs.com/52cik/p/vbs-encode-decode.html" target="_blank" rel="noopener">VBscript.Encode 解码器 - 楼教主 - 博客园</a></p><p>[2017-11-09 16:37:10]</p><blockquote><p>Encode@decode</p></blockquote><hr><h2 id="4-考考你的程序功底-实验吧"><a href="#4-考考你的程序功底-实验吧" class="headerlink" title="4- 考考你的程序功底-实验吧"></a>4- <a href="http://www.shiyanbar.com/ctf/4" target="_blank" rel="noopener">考考你的程序功底-实验吧</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">arr=[</span><br><span class="line">  [ <span class="number">8</span>, <span class="number">2</span>,<span class="number">22</span>,<span class="number">97</span>,<span class="number">38</span>,<span class="number">15</span>, <span class="number">0</span>,<span class="number">40</span>, <span class="number">0</span>,<span class="number">75</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>,<span class="number">78</span>,<span class="number">52</span>,<span class="number">12</span>,<span class="number">50</span>,<span class="number">77</span>,<span class="number">91</span>, <span class="number">8</span>],</span><br><span class="line">  [<span class="number">49</span>,<span class="number">49</span>,<span class="number">99</span>,<span class="number">40</span>,<span class="number">17</span>,<span class="number">81</span>,<span class="number">18</span>,<span class="number">57</span>,<span class="number">60</span>,<span class="number">87</span>,<span class="number">17</span>,<span class="number">40</span>,<span class="number">98</span>,<span class="number">43</span>,<span class="number">69</span>,<span class="number">48</span>, <span class="number">4</span>,<span class="number">56</span>,<span class="number">62</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">81</span>,<span class="number">49</span>,<span class="number">31</span>,<span class="number">73</span>,<span class="number">55</span>,<span class="number">79</span>,<span class="number">14</span>,<span class="number">29</span>,<span class="number">93</span>,<span class="number">71</span>,<span class="number">40</span>,<span class="number">67</span>,<span class="number">53</span>,<span class="number">88</span>,<span class="number">30</span>, <span class="number">3</span>,<span class="number">49</span>,<span class="number">13</span>,<span class="number">36</span>,<span class="number">65</span>],</span><br><span class="line">  [<span class="number">52</span>,<span class="number">70</span>,<span class="number">95</span>,<span class="number">23</span>, <span class="number">4</span>,<span class="number">60</span>,<span class="number">11</span>,<span class="number">42</span>,<span class="number">69</span>,<span class="number">24</span>,<span class="number">68</span>,<span class="number">56</span>, <span class="number">1</span>,<span class="number">32</span>,<span class="number">56</span>,<span class="number">71</span>,<span class="number">37</span>, <span class="number">2</span>,<span class="number">36</span>,<span class="number">91</span>],</span><br><span class="line">  [<span class="number">22</span>,<span class="number">31</span>,<span class="number">16</span>,<span class="number">71</span>,<span class="number">51</span>,<span class="number">67</span>,<span class="number">63</span>,<span class="number">89</span>,<span class="number">41</span>,<span class="number">92</span>,<span class="number">36</span>,<span class="number">54</span>,<span class="number">22</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">28</span>,<span class="number">66</span>,<span class="number">33</span>,<span class="number">13</span>,<span class="number">80</span>],</span><br><span class="line">  [<span class="number">24</span>,<span class="number">47</span>,<span class="number">32</span>,<span class="number">60</span>,<span class="number">99</span>, <span class="number">3</span>,<span class="number">45</span>, <span class="number">2</span>,<span class="number">44</span>,<span class="number">75</span>,<span class="number">33</span>,<span class="number">53</span>,<span class="number">78</span>,<span class="number">36</span>,<span class="number">84</span>,<span class="number">20</span>,<span class="number">35</span>,<span class="number">17</span>,<span class="number">12</span>,<span class="number">50</span>],</span><br><span class="line">  [<span class="number">32</span>,<span class="number">98</span>,<span class="number">81</span>,<span class="number">28</span>,<span class="number">64</span>,<span class="number">23</span>,<span class="number">67</span>,<span class="number">10</span>,<span class="number">26</span>,<span class="number">38</span>,<span class="number">40</span>,<span class="number">67</span>,<span class="number">59</span>,<span class="number">54</span>,<span class="number">70</span>,<span class="number">66</span>,<span class="number">18</span>,<span class="number">38</span>,<span class="number">64</span>,<span class="number">70</span>],</span><br><span class="line">  [<span class="number">67</span>,<span class="number">26</span>,<span class="number">20</span>,<span class="number">68</span>, <span class="number">2</span>,<span class="number">62</span>,<span class="number">12</span>,<span class="number">20</span>,<span class="number">95</span>,<span class="number">63</span>,<span class="number">94</span>,<span class="number">39</span>,<span class="number">63</span>, <span class="number">8</span>,<span class="number">40</span>,<span class="number">91</span>,<span class="number">66</span>,<span class="number">49</span>,<span class="number">94</span>,<span class="number">21</span>],</span><br><span class="line">  [<span class="number">24</span>,<span class="number">55</span>,<span class="number">58</span>, <span class="number">5</span>,<span class="number">66</span>,<span class="number">73</span>,<span class="number">99</span>,<span class="number">26</span>,<span class="number">97</span>,<span class="number">17</span>,<span class="number">78</span>,<span class="number">78</span>,<span class="number">96</span>,<span class="number">83</span>,<span class="number">14</span>,<span class="number">88</span>,<span class="number">34</span>,<span class="number">89</span>,<span class="number">63</span>,<span class="number">72</span>],</span><br><span class="line">  [<span class="number">21</span>,<span class="number">36</span>,<span class="number">23</span>, <span class="number">9</span>,<span class="number">75</span>, <span class="number">0</span>,<span class="number">76</span>,<span class="number">44</span>,<span class="number">20</span>,<span class="number">45</span>,<span class="number">35</span>,<span class="number">14</span>, <span class="number">0</span>,<span class="number">61</span>,<span class="number">33</span>,<span class="number">97</span>,<span class="number">34</span>,<span class="number">31</span>,<span class="number">33</span>,<span class="number">95</span>],</span><br><span class="line">  [<span class="number">78</span>,<span class="number">17</span>,<span class="number">53</span>,<span class="number">28</span>,<span class="number">22</span>,<span class="number">75</span>,<span class="number">31</span>,<span class="number">67</span>,<span class="number">15</span>,<span class="number">94</span>, <span class="number">3</span>,<span class="number">80</span>, <span class="number">4</span>,<span class="number">62</span>,<span class="number">16</span>,<span class="number">14</span>, <span class="number">9</span>,<span class="number">53</span>,<span class="number">56</span>,<span class="number">92</span>],</span><br><span class="line">  [<span class="number">16</span>,<span class="number">39</span>, <span class="number">5</span>,<span class="number">42</span>,<span class="number">96</span>,<span class="number">35</span>,<span class="number">31</span>,<span class="number">47</span>,<span class="number">55</span>,<span class="number">58</span>,<span class="number">88</span>,<span class="number">24</span>, <span class="number">0</span>,<span class="number">17</span>,<span class="number">54</span>,<span class="number">24</span>,<span class="number">36</span>,<span class="number">29</span>,<span class="number">85</span>,<span class="number">57</span>],</span><br><span class="line">  [<span class="number">86</span>,<span class="number">56</span>, <span class="number">0</span>,<span class="number">48</span>,<span class="number">35</span>,<span class="number">71</span>,<span class="number">89</span>, <span class="number">7</span>, <span class="number">5</span>,<span class="number">44</span>,<span class="number">44</span>,<span class="number">37</span>,<span class="number">44</span>,<span class="number">60</span>,<span class="number">21</span>,<span class="number">58</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">17</span>,<span class="number">58</span>],</span><br><span class="line">  [<span class="number">19</span>,<span class="number">80</span>,<span class="number">81</span>,<span class="number">68</span>, <span class="number">5</span>,<span class="number">94</span>,<span class="number">47</span>,<span class="number">69</span>,<span class="number">28</span>,<span class="number">73</span>,<span class="number">92</span>,<span class="number">13</span>,<span class="number">86</span>,<span class="number">52</span>,<span class="number">17</span>,<span class="number">77</span>, <span class="number">4</span>,<span class="number">89</span>,<span class="number">55</span>,<span class="number">40</span>],</span><br><span class="line">  [<span class="number">04</span>,<span class="number">52</span>, <span class="number">8</span>,<span class="number">83</span>,<span class="number">97</span>,<span class="number">35</span>,<span class="number">99</span>,<span class="number">16</span>, <span class="number">7</span>,<span class="number">97</span>,<span class="number">57</span>,<span class="number">32</span>,<span class="number">16</span>,<span class="number">26</span>,<span class="number">26</span>,<span class="number">79</span>,<span class="number">33</span>,<span class="number">27</span>,<span class="number">98</span>,<span class="number">66</span>],</span><br><span class="line">  [<span class="number">88</span>,<span class="number">36</span>,<span class="number">68</span>,<span class="number">87</span>,<span class="number">57</span>,<span class="number">62</span>,<span class="number">20</span>,<span class="number">72</span>, <span class="number">3</span>,<span class="number">46</span>,<span class="number">33</span>,<span class="number">67</span>,<span class="number">46</span>,<span class="number">55</span>,<span class="number">12</span>,<span class="number">32</span>,<span class="number">63</span>,<span class="number">93</span>,<span class="number">53</span>,<span class="number">69</span>],</span><br><span class="line">  [<span class="number">04</span>,<span class="number">42</span>,<span class="number">16</span>,<span class="number">73</span>,<span class="number">38</span>,<span class="number">25</span>,<span class="number">39</span>,<span class="number">11</span>,<span class="number">24</span>,<span class="number">94</span>,<span class="number">72</span>,<span class="number">18</span>, <span class="number">8</span>,<span class="number">46</span>,<span class="number">29</span>,<span class="number">32</span>,<span class="number">40</span>,<span class="number">62</span>,<span class="number">76</span>,<span class="number">36</span>],</span><br><span class="line">  [<span class="number">20</span>,<span class="number">69</span>,<span class="number">36</span>,<span class="number">41</span>,<span class="number">72</span>,<span class="number">30</span>,<span class="number">23</span>,<span class="number">88</span>,<span class="number">34</span>,<span class="number">62</span>,<span class="number">99</span>,<span class="number">69</span>,<span class="number">82</span>,<span class="number">67</span>,<span class="number">59</span>,<span class="number">85</span>,<span class="number">74</span>, <span class="number">4</span>,<span class="number">36</span>,<span class="number">16</span>],</span><br><span class="line">  [<span class="number">20</span>,<span class="number">73</span>,<span class="number">35</span>,<span class="number">29</span>,<span class="number">78</span>,<span class="number">31</span>,<span class="number">90</span>, <span class="number">1</span>,<span class="number">74</span>,<span class="number">31</span>,<span class="number">49</span>,<span class="number">71</span>,<span class="number">48</span>,<span class="number">86</span>,<span class="number">81</span>,<span class="number">16</span>,<span class="number">23</span>,<span class="number">57</span>, <span class="number">5</span>,<span class="number">54</span>],</span><br><span class="line">  [<span class="number">01</span>,<span class="number">70</span>,<span class="number">54</span>,<span class="number">71</span>,<span class="number">83</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">69</span>,<span class="number">16</span>,<span class="number">92</span>,<span class="number">33</span>,<span class="number">48</span>,<span class="number">61</span>,<span class="number">43</span>,<span class="number">52</span>, <span class="number">1</span>,<span class="number">89</span>,<span class="number">19</span>,<span class="number">67</span>,<span class="number">48</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>70600674</p><p>[2017-11-09 15:55:29]</p><blockquote><p>IL0V3Pr0Gr4m@#!!</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>easyCTF2017</title>
      <link href="/easyCTF2017/"/>
      <url>/easyCTF2017/</url>
      
        <content type="html"><![CDATA[<h3 id="IRC"><a href="#IRC" class="headerlink" title="IRC"></a>IRC</h3><p>#easyctf2017: EasyCTF 2017 - Flag is easyctf{irc_d0esn7_apist0rm_:)}</p><blockquote><p>easyctf{irc_d0esn7_apist0rm_:)}</p></blockquote><a id="more"></a><h3 id="Flip-My-Letters"><a href="#Flip-My-Letters" class="headerlink" title="Flip My Letters"></a>Flip My Letters</h3><p>看提示是按字母表逆序替换<br><img src="/easyCTF2017/Flip_My_Letters.png"></p><blockquote><p>easyctf{i_dont_even_need_an_ascii_table}</p></blockquote><p>###　Clear and Concise Commentary on Caesar Cipher<br>都说了是Caesar Cipher</p><blockquote><p>easyctf{yougotit}</p></blockquote><h3 id="Hexable"><a href="#Hexable" class="headerlink" title="Hexable"></a>Hexable</h3><p>notepad++直接打开<br><img src="/easyCTF2017/Hexable.png"></p><blockquote><p>easyctf{T00rtUMhk0eTOp}</p></blockquote><h3 id="Phunky-Python-I"><a href="#Phunky-Python-I" class="headerlink" title="Phunky Python I"></a>Phunky Python I</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">672676048626705557</span> <span class="comment"># REDACTED</span></span><br><span class="line">digs = [<span class="number">672676048626705658</span>, <span class="number">672676048626705654</span>, <span class="number">672676048626705672</span>, <span class="number">672676048626705678</span>, <span class="number">672676048626705656</span>, <span class="number">672676048626705673</span>, <span class="number">672676048626705659</span>]</span><br><span class="line">out = <span class="string">""</span></span><br><span class="line">bar=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> foo <span class="keyword">in</span> reversed(<span class="string">'easyctf'</span>):</span><br><span class="line">    bar.append(ord(foo))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> reversed(digs):</span><br><span class="line">    <span class="comment">#x = letter - bar[0]</span></span><br><span class="line">    out = chr(letter - x) + out</span><br><span class="line"><span class="keyword">print</span> out</span><br></pre></td></tr></table></figure><blockquote><p>672676048626705557</p></blockquote><h3 id="Cookie-Blog"><a href="#Cookie-Blog" class="headerlink" title="Cookie Blog"></a>Cookie Blog</h3><img src="/easyCTF2017/Cookie_Blog.png"><blockquote><p>easyctf{yum_c00kies!!!}</p></blockquote><h3 id="Mane-Event"><a href="#Mane-Event" class="headerlink" title="Mane Event"></a>Mane Event</h3><p>看见 <code>new camera</code>果断去看 EXIF 果然有flag<br><img src="/easyCTF2017/Mane_Event.png"></p><blockquote><p>easyctf{pride_in_african_engin33ring}</p></blockquote><p>###　Petty Difference<br>直接diff出来一堆东西，没法看</p><p>还是cmp好用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">$ cmp -cl file1.txt file2.txt</span><br><span class="line">  482 175 &#125;    154 l</span><br><span class="line"> 1638  64 4    146 f</span><br><span class="line"> 1796 137 _    142 b</span><br><span class="line"> 2240 147 g    172 z</span><br><span class="line"> 3157 156 n     71 9</span><br><span class="line"> 3303  61 1     65 5</span><br><span class="line"> 3568 153 k    145 e</span><br><span class="line"> 3892  60 0    157 o</span><br><span class="line"> 3911  60 0    142 b</span><br><span class="line"> 4501 154 l    143 c</span><br><span class="line"> 5204 137 _    162 r</span><br><span class="line"> 5582  63 3    164 t</span><br><span class="line"> 6107 162 r    161 q</span><br><span class="line"> 6563  63 3    141 a</span><br><span class="line"> 7043 167 w    144 d</span><br><span class="line"> 7196 137 _    164 t</span><br><span class="line"> 8269 165 u     67 7</span><br><span class="line"> 8866  60 0    153 k</span><br><span class="line"> 9164 171 y    144 d</span><br><span class="line"> 9965 137 _    170 x</span><br><span class="line">10771  63 3    172 z</span><br><span class="line">11220 143 c     60 0</span><br><span class="line">11283 156 n    144 d</span><br><span class="line">11285  63 3    143 c</span><br><span class="line">11666 162 r    151 i</span><br><span class="line">13337  63 3    163 s</span><br><span class="line">14816 146 f    167 w</span><br><span class="line">15168 146 f    173 &#123;</span><br><span class="line">15180  61 1    170 x</span><br><span class="line">15366 144 d     65 5</span><br><span class="line">15656 137 _    153 k</span><br><span class="line">16168  63 3    151 i</span><br><span class="line">17651 150 h    153 k</span><br><span class="line">17761 164 t     64 4</span><br><span class="line">18186 137 _    160 p</span><br><span class="line">18261  63 3    165 u</span><br><span class="line">18592 142 b    145 e</span><br><span class="line">18739 137 _    162 r</span><br><span class="line">19676 171 y    151 i</span><br><span class="line">20033  64 4    151 i</span><br><span class="line">20228 155 m    145 e</span><br><span class="line">20246 137 _    142 b</span><br><span class="line">23511 163 s    155 m</span><br><span class="line">24001  61 1    141 a</span><br><span class="line">24487 150 h    166 v</span><br><span class="line">24845 164 t    167 w</span><br><span class="line">25291 173 &#123;    156 n</span><br><span class="line">25411 146 f    170 x</span><br><span class="line">25491 164 t    144 d</span><br><span class="line">25502 143 c    166 v</span><br><span class="line">25673 171 y    167 w</span><br><span class="line">26410 163 s    145 e</span><br><span class="line">27127 141 a    170 x</span><br><span class="line">27132 145 e     71 9</span><br></pre></td></tr></table></figure><p>用正则搞了半天，才把flag提出来</p><blockquote><p>easyctf{th1s_m4y_b3_th3_d1ff3r3nc3_y0u_w3r3_l00k1ng_4}</p></blockquote><h3 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA 1"></a>RSA 1</h3><h3 id="Bizarro"><a href="#Bizarro" class="headerlink" title="Bizarro"></a>Bizarro</h3><p>图片题上神器 Stegsolve<br><img src="/easyCTF2017/Bizarro-1.png"> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CI XCVII CXV CXXI XCIX CXVI CII CXXIII CXVI CIV CV CXV XCV CV CXV XCV CX CXI CXVI XCV CXVI CIV CI XCV CII CVIII XCVII CIII CXXV XXXII CV XXXII CVII CX CXI CXIX XXXII CXVI CIV CV CXV XXXII CII CVIII XCVII CIII XXXII CV CXV XXXII CXIX CI CV CXIV C XXXII CV XXXII CVI CXVII CXV CXVI XXXII XCIX XCVII CX XXXIX CXVI XXXII CXII CXVII CXVI XXXII CIX CXXI XXXII CII CV CX CIII CI CXIV XXXII CXI CX XXXII CXIX CIV CXXI</span><br></pre></td></tr></table></figure><p>目测罗马数字 <a href="http://www.onlineconversion.com/roman_numerals_advanced.htm" target="_blank" rel="noopener">Advanced Roman Numerals Converter</a></p><p>半手工替换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101 97 115 121 99 116 102 123 116 104 105 115 95 105 115 95 110 111 116 95 116 104 101 95 102 108 97 103 125 32 105 32 107 110 111 119 32 116 104 105 115 32 102 108 97 103 32 105 115 32 119 101 105 114 100 32 105 32 106 117 115 116 32 99 97 110 39 116 32 112 117 116 32 109 121 32 102 105 110 103 101 114 32 111 110 32 119 104 121</span><br></pre></td></tr></table></figure></p><p>这个有对齐要求 -&gt; <a href="http://www.unit-conversion.info/texttools/ascii/" target="_blank" rel="noopener">ASCII to text converter</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101 097 115 121 099 116 102 123 116 104 105 115 095 105 115 095 110 111 116 095 116 104 101 095 102 108 097 103 125 032 105 032 107 110 111 119 032 116 104 105 115 032 102 108 097 103 032 105 115 032 119 101 105 114 100 032 105 032 106 117 115 116 032 099 097 110 039 116 032 112 117 116 032 109 121 032 102 105 110 103 101 114 032 111 110 032 119 104 121</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">easyctf&#123;this_is_not_the_flag&#125; </span><br><span class="line">i know this flag is weird i just can&apos;t put my finger on why</span><br></pre></td></tr></table></figure><p>nope ?什么鬼</p><h4 id="JavaScript-Roman-Numeral-Converter"><a href="#JavaScript-Roman-Numeral-Converter" class="headerlink" title="JavaScript Roman Numeral Converter"></a>JavaScript Roman Numeral Converter</h4><p>用现成的 <a href="http://blog.stevenlevithan.com/archives/javascript-roman-numeral-converter" target="_blank" rel="noopener">JavaScript Roman Numeral Converter</a>避免出错</p><figure class="highlight js"><figcaption><span>romanize</span><a href="https://repl.it/CLmf/27" target="_blank" rel="noopener">deromanize.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deromanize</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span>str = str.toUpperCase(),</span><br><span class="line">validator = <span class="regexp">/^M*(?:D?C&#123;0,3&#125;|C[MD])(?:L?X&#123;0,3&#125;|X[CL])(?:V?I&#123;0,3&#125;|I[XV])$/</span>,</span><br><span class="line">token = <span class="regexp">/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g</span>,</span><br><span class="line">key = &#123;<span class="attr">M</span>:<span class="number">1000</span>,<span class="attr">CM</span>:<span class="number">900</span>,<span class="attr">D</span>:<span class="number">500</span>,<span class="attr">CD</span>:<span class="number">400</span>,<span class="attr">C</span>:<span class="number">100</span>,<span class="attr">XC</span>:<span class="number">90</span>,<span class="attr">L</span>:<span class="number">50</span>,<span class="attr">XL</span>:<span class="number">40</span>,<span class="attr">X</span>:<span class="number">10</span>,<span class="attr">IX</span>:<span class="number">9</span>,<span class="attr">V</span>:<span class="number">5</span>,<span class="attr">IV</span>:<span class="number">4</span>,<span class="attr">I</span>:<span class="number">1</span>&#125;,</span><br><span class="line">num = <span class="number">0</span>, m;</span><br><span class="line"><span class="keyword">if</span> (!(str &amp;&amp; validator.test(str)))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span> (m = token.exec(str))</span><br><span class="line">num += key[m[<span class="number">0</span>]];</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deroman</span>(<span class="params"> roman </span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> roman = roman.toUpperCase().split(<span class="string">' '</span>),</span><br><span class="line">      num = [];</span><br><span class="line">  roman.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    num += deromanize(e);</span><br><span class="line">    num += <span class="string">' '</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">deroman(<span class="string">'CI XCVII CXV CXXI XCIX CXVI CII CXXIII CXVI CIV CV CXV XCV CV CXV XCV CX CXI CXVI XCV CXVI CIV CI XCV CII CVIII XCVII CIII CXXV XXXII CV XXXII CVII CX CXI CXIX XXXII CXVI CIV CV CXV XXXII CII CVIII XCVII CIII XXXII CV CXV XXXII CXIX CI CV CXIV C XXXII CV XXXII CVI CXVII CXV CXVI XXXII XCIX XCVII CX XXXIX CXVI XXXII CXII CXVII CXVI XXXII CIX CXXI XXXII CII CV CX CIII CI CXIV XXXII CXI CX XXXII CXIX CIV CXXI'</span>)</span><br></pre></td></tr></table></figure><p>解出来和我手工解得一样</p><h3 id="Let-Me-Be-Frank"><a href="#Let-Me-Be-Frank" class="headerlink" title="Let Me Be Frank"></a>Let Me Be Frank</h3><p>先尝试单表，发现有重复替换，怀疑维吉尼亚，半手工破解成功</p> <blockquote><p>easyctf{better_thank_the_french_for_this_one}</p></blockquote><h3 id="Hash-On-Hash"><a href="#Hash-On-Hash" class="headerlink" title="Hash On Hash"></a>Hash On Hash</h3><p>目测MD5<br>查了一下第一行是<code>MD5(I)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Im far too lazy to put anything meaningful here. Instead, here&apos;s some information about what you just solved.The MD5 algorithm is a widely used hash function producing a 128-bit hash value. Although MD5 was initially designed to be used as a cryptographic hash function, it has been found to suffer from extensive vulnerabilities. It can still be used as a checksum to verify data integrity, but only against unintentional corruption.Like most hash functions, MD5 is neither encryption nor encoding. It can be cracked by brute-force attack and suffers from extensive vulnerabilities as detailed in the security section below.MD5 was designed by Ronald Rivest in 1991 to replace an earlier hash function MD4.[3] The source code in RFC 1321 contains a &quot;by attribution&quot; RSA license. The abbreviation &quot;MD&quot; stands for &quot;Message Digest.&quot;The security of the MD5 has been severely compromised, with its weaknesses having been exploited in the field, most infamously by the Flame malware in 2012. The CMU Software Engineering Institute considers MD5 essentially &quot;cryptographically broken and unsuitable for further use&quot;.[4]easyctf&#123;1_h0p3_y0u_d1dn7_d0_7h47_by_h4nd&#125;</span><br></pre></td></tr></table></figure><blockquote><p>easyctf{1_h0p3_y0u_d1dn7_d0_7h47_by_h4nd}</p></blockquote><h3 id="Decode-Me"><a href="#Decode-Me" class="headerlink" title="Decode Me"></a>Decode Me</h3><p>base64 (手工)循环解码+去空格换行</p><blockquote><p>easyctf{what_1s_l0v3_bby_don7_hurt_m3}</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>某 CTF Group 的入群考核试题</title>
      <link href="/%E6%9F%90-CTF-Group-%E7%9A%84%E5%85%A5%E7%BE%A4%E8%80%83%E6%A0%B8%E8%AF%95%E9%A2%98/"/>
      <url>/%E6%9F%90-CTF-Group-%E7%9A%84%E5%85%A5%E7%BE%A4%E8%80%83%E6%A0%B8%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="题目由来"><a href="#题目由来" class="headerlink" title="题目由来"></a>题目由来</h2><p>看知乎CTF入门相关问题看到 <a href="https://www.zhihu.com/people/sunnyelf/answers" target="_blank" rel="noopener">sunnyelf</a> dalao的答案 <a href="http://zhihu.com/question/30505597/answer/72163029" target="_blank" rel="noopener">针对CTF，大家都是怎么训练的？</a></p><p>他的签名里有个群号</p><blockquote><p>CTF Group:473831530</p></blockquote><p>加群需要先解出Flag<br><img src="/某-CTF-Group-的入群考核试题/0-flag.png" title="加群Flag"></p><blockquote><p><a href="http://t.cn/RJgPBh4" target="_blank" rel="noopener">http://t.cn/RJgPBh4</a> -&gt; <a href="https://pan.baidu.com/s/1nv4UsyP" target="_blank" rel="noopener">https://pan.baidu.com/s/1nv4UsyP</a></p></blockquote><a id="more"></a><h2 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h2><img src="/某-CTF-Group-的入群考核试题/1-7zip.png" title="压缩包内容"><h3 id="RFC4042"><a href="#RFC4042" class="headerlink" title="RFC4042"></a>RFC4042</h3><p>google 一下发现是 <a href="https://www.ietf.org/rfc/rfc4042.txt" target="_blank" rel="noopener">UTF-9 and UTF-18</a></p><p>在 GitHub 上找到一个解码脚本 <a href="https://github.com/enricobacis/utf9" target="_blank" rel="noopener">utf9</a><br>装完了写一个解码脚本</p><figure class="highlight python"><figcaption><span>Utf-9_Decode.py </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="comment">#Utf-9.py</span></span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> utf9</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> codecs.open(<span class="string">"rfc4042"</span>) <span class="keyword">as</span> file:</span><br><span class="line">        data = file.read()</span><br><span class="line">        <span class="comment">#data = data.replace("\n", "")</span></span><br><span class="line">        <span class="comment">#print utf9.utf9decode(data)</span></span><br><span class="line">        file.close()</span><br><span class="line">        <span class="keyword">return</span> utf9.utf9decode(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> codecs.open(<span class="string">"_DecodeFile.txt"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> temp:</span><br><span class="line">    temp.write(main())</span><br><span class="line">    temp.close()</span><br></pre></td></tr></table></figure><img src="/某-CTF-Group-的入群考核试题/2-key.png" title="UTF-9解码得key"><p>key 看起来能运算的样子，先放一放。</p><p>考虑到本题有<code>.py</code>文件，又看到<code>** //</code>等Python的运算符，怀疑是Python的代码</p><h3 id="marshal"><a href="#marshal" class="headerlink" title="marshal"></a>marshal</h3><p>再看flag.py<br><img src="/某-CTF-Group-的入群考核试题/3-flag.png"></p><p>执行一下<br><img src="/某-CTF-Group-的入群考核试题/4-try1.png"></p><p>尝试依次<code>base64 zlib</code>解码无果</p><p>搜索<code>marshal</code>发现是序列化，<br>在 stackoverflow 上看到有人说这是序列化过的Python代码，有软件可以还原 —— <a href="https://github.com/Mysterie/uncompyle2" target="_blank" rel="noopener">uncompyle2</a></p><p>下载安装之，写个脚本解码<br><figure class="highlight python"><figcaption><span>FlagCodeDecrypted.py </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="comment">#flag.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> marshal, zlib, base64</span><br><span class="line"><span class="keyword">import</span> uncompyle2</span><br><span class="line"></span><br><span class="line"><span class="comment">#exec(marshal.loads(</span></span><br><span class="line">co = marshal.loads(zlib.decompress(base64.b64decode(<span class="string">'eJxtVP9r21YQvyd/ieWm66Cd03QM1B8C3pggUuzYCSWstHSFQijyoJBhhGq9OXJl2ZFeqAMOK6Q/94f9Ofvn1s+d7Lgtk/3O997du/vc584a0eqpYP2GVfwDEeOrKCU6g2LRRyiK4oooFsVVUSqkqxTX6J1F+SfSNYrrdKPorC76luhbpOEGCZNFZw2KG3Rmk26QtuXi3xTb7ND6/aVu0g2RuvhEcZNut5lAGbTvAFbyH57TkYLKy8J6xpDvQxiiiaIlcdqJxVcHbXY6bXNlZgviPCrO0+StqfKd88gzNh/qRZyMdWHE29TZZvIkG7eZFRGGRcBmsXJaUoKCQ9fWKHwSqNeKFnsM5PnwJ7q2aKk4AFhcWtQCh+ChB5+Lu/RmyYUxmtOEYxas7i/2iuR7Ti14OEOSmU0RADd4+dQzbM1FJhukAUeQ+kZROuLyioagrau76kc1slY1NNaY/y3LAxDQBrAICJisV2hMdF2lxQcyFuMoqcX3+TCl6xotqzSpkqmxYVmjXVjAXiwBsEfBrd1VvTvLCj2EXRnhoryAKdpxcIgJcowUB68yAx/tlCAuPHqDuZo0CN3CUGHwkPhGMA7aXMfphjbmQLhLhJcHa0a+mpgB191c1U1lnHJQbgkHx+WGxeJbejnpkzSavo2jkxZ7i725npGAaTc8FXmUjbUETHUmkxXN5zqL5WiWxwE7Bc11yyYzNJpN02jerq+DzNNodfxOX8kE4FcmYKscDdYD1oPGGucXYNmgs1F+NTf3GOt3Mg7b+NTVruqoQyX1hOEUacKw+AGbP38ZOq9THRXaSbL5pXGQ8bho/Z/lrzQaHxdoCrlev+t6nZ7re57r+57rHXag93Deh37k+vuw9zorO/Qj/B50cAf2oyOsvut3D+ADWxdxfN/1Drqu39mHzvcRswv/Hvz7sHeg9w8Qzy99DzuFwxhPhs6zWTbOI3OZRiaZZcVj5wVwOklx7OwVxR47PR46r/SVM8ulBJic9zku/eqY/MqJxiDj+Gd55wS3f35pbLCzHoEwzKKpDkN5i+TR+1AYCWTo5IV0Z0P9H3phDDd6lMzPdS5bbo9eJGbTsW9nbDqLL1N9Iq+rRxDbll2x67a9Lf27hw5uK1s1rZr6DOPF+FI='</span>)))</span><br><span class="line"><span class="comment">#)</span></span><br><span class="line"></span><br><span class="line">f=open(<span class="string">'./_DecryptedCode.py'</span>,<span class="string">'w'</span>)</span><br><span class="line">uncompyle2.uncompyle(<span class="string">'2.7.3'</span>,co,f)</span><br></pre></td></tr></table></figure></p><img src="/某-CTF-Group-的入群考核试题/5-py.png" title="解码得到的Python代码"><h4 id="flag-py-分析"><a href="#flag-py-分析" class="headerlink" title="flag.py 分析"></a>flag.py 分析</h4><figure class="highlight python"><figcaption><span>Flag.py </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用 hashlib 库, 计算sha1，然后转化为16进制输出</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sha1</span><span class="params">(string)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.sha1(string).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 sha1 序列逐位按16进制求校验和</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(strSHA1)</span>:</span></span><br><span class="line">    r = <span class="number">0</span> <span class="comment"># 校验和置0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> strSHA1: <span class="comment"># 循环读取 sha1 字符串的每一位</span></span><br><span class="line">        r += int(<span class="string">'0x%s'</span> % i, <span class="number">16</span>) <span class="comment"># 将读入的字符 按16进制转化为证书求和</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r <span class="comment"># 返回校验和</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注加密函数，通过 key&amp;flag 计算出 encryptText</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(plain, key)</span>:</span></span><br><span class="line">    <span class="comment"># 计算 key的sha1，及相应的校验和</span></span><br><span class="line">    keySHA1 = sha1(key)</span><br><span class="line">    intSHA1 = calc(keySHA1)</span><br><span class="line"></span><br><span class="line">    r = [] <span class="comment"># encryptText 数组置空</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 主加密循环</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plain)): <span class="comment"># 循环读取 flag 的每一位</span></span><br><span class="line">        <span class="comment"># 将计算结果添加到数组 r 内</span></span><br><span class="line">        r.append(ord(plain[i]) <span class="comment"># 将 flag[i] 转化为整数(ASCII码)</span></span><br><span class="line">                 + int(<span class="string">'0x%s'</span> % keySHA1[i % <span class="number">40</span>], <span class="number">16</span>) <span class="comment"># 加上 10进制的 sha1的第 [i % 40] 位，(16 -&gt; 10)</span></span><br><span class="line">                 - intSHA1 <span class="comment">#减去 sha1 的校验和</span></span><br><span class="line">                 )</span><br><span class="line">        <span class="comment"># 计算新的校验和</span></span><br><span class="line">        intSHA1 = calc(sha1(plain[:i + <span class="number">1</span>])[:<span class="number">20</span>] <span class="comment"># 【flag 前i位的 sha1】的 前20位</span></span><br><span class="line">                       + sha1(str(intSHA1))[:<span class="number">20</span>] <span class="comment"># 加上 【上一次校验和的字符串】的 前20位</span></span><br><span class="line">                       )</span><br><span class="line">        <span class="comment"># 继续循环</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将 r 转化为字符串并返回</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join( <span class="comment"># 将字符串拼接在一起</span></span><br><span class="line">        map( <span class="comment"># 枚举r中元素</span></span><br><span class="line">        <span class="keyword">lambda</span> x: str(x), r ) <span class="comment"># 此 lambda 表达式，将元素转化为字符串</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 输入 key&amp;flag</span></span><br><span class="line">    key = raw_input(<span class="string">'[*] Please input key:'</span>)</span><br><span class="line">    plain = raw_input(<span class="string">'[*] Please input flag:'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 调用 encrypt 函数计算 encryptText</span></span><br><span class="line">    encryptText = encrypt(plain, key)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 作为对比的 cipherText 字符串， 可用于逆推 flag</span></span><br><span class="line">    cipherText = <span class="string">'-185-147-211-221-164-217-188-169-205-174-211-225-191-234-148-199-198-253-175-157-222-135-240-229-201-154-178-187-244-183-212-222-164'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断 flag 是否正确， 正确则输出 **你输入的** flag</span></span><br><span class="line">    <span class="keyword">if</span> encryptText == cipherText:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'[&gt;] Congratulations! Flag is: %s'</span> % plain</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'[!] Key or flag is wrong, try again:)'</span></span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure><p>pycharm里单步调试一下，发现加密部分可以逐字逆推出flag</p><p>写个脚本</p><figure class="highlight python"><figcaption><span>ReDecryptedCode.py </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="comment">#ReDecryptedCode.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sha1</span><span class="params">(string)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.sha1(string).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(strSHA1)</span>:</span></span><br><span class="line">    r = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> strSHA1:</span><br><span class="line">        r += int(<span class="string">'0x%s'</span> % i, <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(flag, key, cipherText)</span>:</span></span><br><span class="line">    keySHA1 = sha1(key)</span><br><span class="line">    intSHA1 = calc(keySHA1)</span><br><span class="line">    </span><br><span class="line">    cipherTextLength=len(cipherText)/<span class="number">4</span></span><br><span class="line">    FlagASCII=[]</span><br><span class="line">    r = []</span><br><span class="line">    cipherNum=[]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(cipherTextLength):</span><br><span class="line">        <span class="comment"># 将 cipherText 转化为数字 list</span></span><br><span class="line">        cipherNum.append(int(cipherText[<span class="number">4</span>*i : <span class="number">4</span>*i+<span class="number">4</span>]))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算 plainText</span></span><br><span class="line">        <span class="comment">#         FlagASCII[i] = r[i] - int('0x%s' % keySHA1[i % 40], 16) + intSHA1</span></span><br><span class="line">        FlagASCII.append(cipherNum[i] - int(<span class="string">'0x%s'</span> % keySHA1[i % <span class="number">40</span>], <span class="number">16</span>) + intSHA1)</span><br><span class="line">        flag += chr(FlagASCII[i])</span><br><span class="line"></span><br><span class="line">        <span class="comment">#         r[i] = FlagASCII[i] + int('0x%s' % keySHA1[i % 40], 16) - intSHA1</span></span><br><span class="line">        r.append(        ord(flag[i]) + int(<span class="string">'0x%s'</span> % keySHA1[i % <span class="number">40</span>], <span class="number">16</span>) - intSHA1)</span><br><span class="line">        intSHA1 = calc(sha1(flag[:i + <span class="number">1</span>])[:<span class="number">20</span>] + sha1(str(intSHA1))[:<span class="number">20</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> FlagASCII</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(map(<span class="keyword">lambda</span> x: str(x), r)), flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    f_key = open(<span class="string">'_DecodeFile.txt'</span>, <span class="string">'r'</span>)</span><br><span class="line">    key = f_key.read().decode(<span class="string">'utf8'</span>).encode(<span class="string">'ascii'</span>,<span class="string">'ignore'</span>)</span><br><span class="line">    f_key.close()</span><br><span class="line">    <span class="comment">#key = raw_input('[*] Please input key:')</span></span><br><span class="line">    <span class="comment">#plain = raw_input('[*] Please input flag:')</span></span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    cipherText = <span class="string">'-185-147-211-221-164-217-188-169-205-174-211-225-191-234-148-199-198-253-175-157-222-135-240-229-201-154-178-187-244-183-212-222-164'</span></span><br><span class="line">    (encryptText, flag) = encrypt(flag, key, cipherText)</span><br><span class="line">    <span class="keyword">if</span> encryptText == cipherText:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'[&gt;] Congratulations! Flag is: %s'</span> % flag</span><br><span class="line"></span><br><span class="line">        <span class="comment">#with codecs.open("_Flag_res", "w", "utf-8-sig") as temp:</span></span><br><span class="line">        <span class="comment">#    temp.write(utf9.utf9decode(plain))</span></span><br><span class="line">        <span class="comment">#    temp.close()</span></span><br><span class="line"></span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'[!] Key or flag is wrong, try again:)'</span></span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure><h3 id="Capture-the-Flag"><a href="#Capture-the-Flag" class="headerlink" title="Capture the Flag"></a>Capture the Flag</h3><p>key 有了(or 部分解出)，flag 验证程序源码也有了，开始逆推Flag</p><h4 id="1-try"><a href="#1-try" class="headerlink" title="1-try"></a>1-try</h4><p>用上面的<code>.py</code>脚本+之前解出的key(那一堆下划线)，尝试尝试生成Flag<br><img src="/某-CTF-Group-的入群考核试题/6-try2.png"><br>生成的flag乱码，看ASCII码(上面的数字)发现有部分字符无法打印，怀疑key有问题<br>[2017-03-01]</p><h4 id="2-try"><a href="#2-try" class="headerlink" title="2-try"></a>2-try</h4><p>将key中的下划线<code>_</code>按数量一次用数字替代，刚好可以用1~9替代完全<br><figure class="highlight python"><figcaption><span>_DecodeFile2Num.txt </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span>*((<span class="number">2</span>//<span class="number">2</span>+<span class="number">3</span>+<span class="number">6</span><span class="number">-4</span>%<span class="number">4</span>)**((<span class="number">3</span>%(<span class="number">3</span><span class="number">-1</span>))+<span class="number">8</span>+(<span class="number">3</span>%<span class="number">3</span>+<span class="number">5</span>+<span class="number">7</span>%<span class="number">2</span>+<span class="number">6</span>-(<span class="number">6</span>//(<span class="number">5</span>%<span class="number">3</span>)))))+<span class="number">2</span>*(((<span class="number">8</span>/<span class="number">2</span>)+<span class="number">3</span>%<span class="number">2</span>+<span class="number">7</span>-(<span class="number">8</span>//<span class="number">4</span>))**(<span class="number">1</span>*(<span class="number">5</span>+<span class="number">5</span>)+<span class="number">7</span>+<span class="number">9</span>%<span class="number">3</span>))+<span class="number">8</span>*(((<span class="number">9</span>//<span class="number">2</span>+<span class="number">8</span>%<span class="number">2</span>)+(<span class="number">7</span><span class="number">-1</span>))**((<span class="number">3</span>+<span class="number">7</span>)+<span class="number">9</span>-(<span class="number">6</span>//<span class="number">2</span>)))+<span class="number">7</span>*((<span class="number">3</span>+<span class="number">9</span>-(<span class="number">6</span>//<span class="number">3</span><span class="number">-7</span>%<span class="number">2</span>%<span class="number">1</span>))**(<span class="number">5</span>+<span class="number">5</span>+<span class="number">5</span>))+<span class="number">2</span>*(<span class="number">2</span>+<span class="number">9</span>-(<span class="number">3</span>//<span class="number">3</span><span class="number">-9</span>%<span class="number">5</span>%<span class="number">2</span>))**(<span class="number">9</span><span class="number">-4</span>+<span class="number">7</span>)+(<span class="number">3</span>+<span class="number">7</span>)**(<span class="number">8</span>%<span class="number">3</span>%<span class="number">2</span>+<span class="number">5</span>+<span class="number">6</span>)+(<span class="number">5</span><span class="number">-2</span>)*((<span class="number">4</span>//<span class="number">4</span><span class="number">-5</span>%<span class="number">4</span>%<span class="number">1</span>)+<span class="number">9</span>)**(<span class="number">5</span>-(<span class="number">7</span>//<span class="number">7</span>+<span class="number">9</span>%<span class="number">3</span>)+<span class="number">6</span>)+(<span class="number">5</span>+(<span class="number">9</span>%<span class="number">7</span>)*<span class="number">2</span>+<span class="number">1</span>)**<span class="number">9</span>+<span class="number">7</span>*(((<span class="number">9</span>%<span class="number">7</span>)*<span class="number">2</span>+<span class="number">7</span>-(<span class="number">8</span>//<span class="number">8</span>))**<span class="number">7</span>)+(<span class="number">8</span>/<span class="number">2</span>)*(((<span class="number">4</span><span class="number">-1</span>+<span class="number">7</span>)*(<span class="number">6</span>+<span class="number">4</span>))**<span class="number">3</span>)+<span class="number">3</span>*((<span class="number">2</span>+<span class="number">9</span><span class="number">-1</span>)**<span class="number">5</span>)+<span class="number">3</span>*(((<span class="number">3</span>+<span class="number">7</span><span class="number">-6</span>/<span class="number">3</span>+<span class="number">2</span><span class="number">-9</span>%<span class="number">5</span>%<span class="number">2</span>)*(<span class="number">3</span><span class="number">-1</span>+<span class="number">8</span>/<span class="number">2</span>+<span class="number">9</span>%<span class="number">5</span>))**<span class="number">2</span>)+(<span class="number">1</span>//<span class="number">1</span>)*(((<span class="number">8</span>%<span class="number">3</span>%<span class="number">2</span>+<span class="number">5</span>+<span class="number">5</span>)%<span class="number">6</span>)+<span class="number">7</span><span class="number">-1</span>)**<span class="number">3</span>+<span class="number">5</span>*((<span class="number">6</span>/(<span class="number">5</span>%<span class="number">3</span>))+<span class="number">7</span>)*((<span class="number">9</span>%<span class="number">7</span>)*<span class="number">2</span>+<span class="number">5</span>+<span class="number">1</span>)+<span class="number">3</span>//<span class="number">3</span>+<span class="number">9</span>+<span class="number">9</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure></p><p>Python 命令行下执行得<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5287002131074331513L</span><br></pre></td></tr></table></figure></p><p>再次运行解密脚本(要手动输入key，可去掉注释，见下图)<br><img src="/某-CTF-Group-的入群考核试题/7-zhushi.png"><br>纯数字key<br><img src="/某-CTF-Group-的入群考核试题/8-try3.png"><br>带L的key<br><img src="/某-CTF-Group-的入群考核试题/9-try4.png"></p><p>结果依旧乱码，无果<br>[2017-03-09]</p><h4 id="final-try"><a href="#final-try" class="headerlink" title="final-try"></a>final-try</h4><p>还是Google好用 <code>CTF Python utf9</code>直接搜到了精灵[sunnyelf]大佬的writeup<br><a href="https://www.hackfun.org/CTF/you_need_python_write_up.html" target="_blank" rel="noopener">人生苦短，你需要用Python来做CTF</a></p><p>看了一眼key的部分</p><blockquote><p>得到一堆符号串，但是经常仔细观察，除了“”符号外，其他符号都是Python中的算数运算符，“(”，“)”括号表示优先级，然后开脑洞“”为数字“1”，“__”为数字“2”，依次类推“<strong><strong>_</strong></strong>”为数字“9”，在熟悉了utf9模块的使用后尝试编写转换代码，代码执行后得到数字：5287002131074331513，尝试转换为16进制然后转换为ASCII字符</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;import binascii</span><br><span class="line">&gt;&gt;&gt;print binascii.a2b_hex(hex(5287002131074331513)[2:-1])</span><br><span class="line">I_4m-k3y</span><br></pre></td></tr></table></figure><p>这样才解出了真正的key：<code>I_4m-k3y</code></p><p>输入脚本解出Flag：<br><code>flag{Lif3_i5_5h0r7_U_n33d_Py7h0n}</code></p><p>断断续续解了一个月….<br>[2017-03-31]</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>0ops 0CTF 2017</title>
      <link href="/0ops-0CTF-2017/"/>
      <url>/0ops-0CTF-2017/</url>
      
        <content type="html"><![CDATA[<h2 id="探索-http-www-0ops-net-cli-html"><a href="#探索-http-www-0ops-net-cli-html" class="headerlink" title="探索 http://www.0ops.net/cli.html"></a>探索 <a href="http://www.0ops.net/cli.html" target="_blank" rel="noopener">http://www.0ops.net/cli.html</a></h2><a id="more"></a><p>可用命令<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span></span><br><span class="line">ls</span><br><span class="line">co</span><br><span class="line">cat</span><br><span class="line">whoami</span><br><span class="line">clear</span><br><span class="line">whosyourdaddy</span><br><span class="line">sudo</span><br><span class="line">wget</span><br><span class="line">curl</span><br><span class="line">hint</span><br><span class="line">konami.</span><br></pre></td></tr></table></figure></p><h2 id="第一次-大力出奇迹"><a href="#第一次-大力出奇迹" class="headerlink" title="第一次 大力出奇迹"></a>第一次 大力出奇迹</h2><p>比较懒，直接审查元素，找到了相关的js<br><a href="http://www.0ops.net/0ops_cli_all.js" target="_blank" rel="noopener">0ops_cli_all.js</a></p><p>美化了一下js <a href="http://tool.lu/js/" target="_blank" rel="noopener">http://tool.lu/js/</a> </p><p>然后大致看了一下，发现了这个<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>[<span class="string">"\x65\x76\x61\x6c"</span>](Terminal[<span class="string">"\x72\x75\x6e\x43\x6f\x6d\x6d\x61\x6e\x64"</span>](<span class="built_in">unescape</span>(<span class="string">"%63%75\x72%6c%20%66%6c\x61%67%5f\u0069%73%5f%6e\x6f%74\u005f\u0068%65%72%65"</span>)))</span><br></pre></td></tr></table></figure></p><p>即<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>[<span class="string">"eval"</span>](Terminal[<span class="string">"runCommand"</span>](<span class="built_in">unescape</span>(<span class="string">"%63%75r%6c%20%66%6ca%67%5f\u0069%73%5f%6eo%74\u005f\u0068%65%72%65"</span>)))</span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">unescape</span>(<span class="string">"%63%75r%6c%20%66%6ca%67%5f\u0069%73%5f%6eo%74\u005f\u0068%65%72%65"</span>)</span><br><span class="line">&lt; <span class="string">"curl flag_is_not_here"</span></span><br></pre></td></tr></table></figure><p>运行 以上命令得<br><img src="/0ops-0CTF-2017/curl.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emxpYi5kZWNvbXByZXNzKCd4nLPTpgrQsyFdi50uBtDDpg63ndiMwAVwGoPFYEzNNrp6dpjOwVQIVU6WC3CZBtcPAIrcScYnKQ==</span><br></pre></td></tr></table></figure></p><p>用Python解得<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> base64</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>base64.b64decode(<span class="string">"emxpYi5kZWNvbXByZXNzKCd4nLPTpgrQsyFdi50uBtDDpg63ndiMwAVwGoPFYEzNNrp6dpjOwVQIVU6WC3CZBtcPAIrcScYnKQ=="</span>)</span><br><span class="line"><span class="string">"zlib.decompress('x\x9c\xb3\xd3\xa6\n\xd0\xb3!]\x8b\x9d.\x06\xd0\xc3\xa6\x0e\xb7\x9d\xd8\x8c\xc0\x05p\x1a\x83\xc5`L\xcd6\xbazv\x98\xce\xc1T\x08UN\x96\x0bp\x99\x06\xd7\x0f\x00\x8a\xdcI\xc6')"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> zlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zlib.decompress(<span class="string">'x\x9c\xb3\xd3\xa6\n\xd0\xb3!]\x8b\x9d.\x06\xd0\xc3\xa6\x0e\xb7\x9d\xd8\x8c\xc0\x05p\x1a\x83\xc5`L\xcd6\xbazv\x98\xce\xc1T\x08UN\x96\x0bp\x99\x06\xd7\x0f\x00\x8a\xdcI\xc6'</span>)</span><br><span class="line"><span class="string">'&gt;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.&lt;+++++++++++++++++++++++++++++++++++++++++++++++++.&gt;------------------.+++++++++++++++++++.++++++++++++++++++++++++.&lt;.&gt;------------------------------------------.++++++++++++++++++++++++++++++++++++++++++.-----------------.&lt;-.&gt;++++++.+++++++++++.-----------------------.---------------------.+++++++++++++++++++++++++++++++.-------------------------------.'</span></span><br></pre></td></tr></table></figure></p><p>目测某fuck语言 <a href="https://en.wikipedia.org/wiki/Brainfuck" target="_blank" rel="noopener">Brainfuck</a></p><p>web解释器<a href="https://copy.sh/brainfuck/" target="_blank" rel="noopener">El Brainfuck</a></p><p>得到真正的Flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F14G_15_N0T_H3R3</span><br></pre></td></tr></table></figure></p><h2 id="第二次-常规方法"><a href="#第二次-常规方法" class="headerlink" title="第二次 常规方法"></a>第二次 常规方法</h2><p>Hint：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">guest@0ops:/$ hint</span><br><span class="line">      ________________________________________________</span><br><span class="line">     &lt; Do you know konami, konami, konami and konami? &gt;</span><br><span class="line">      ------------------------------------------------</span><br><span class="line">             \   ^__^</span><br><span class="line">              \  (xx)\_______</span><br><span class="line">                 (__)\       )\/\</span><br><span class="line">                  U  ||----w |</span><br><span class="line">                     ||     ||</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">guest@0ops:/$</span><br></pre></td></tr></table></figure></p><p>在找到 hint 后，搜索一下就可知: <code>konami</code>指的是一组热键 <code>↑↑↓↓←→←→BA</code> —— <a href="https://en.wikipedia.org/wiki/Konami_Code" target="_blank" rel="noopener">Konami Code - Wikipedia</a></p><p>尝试一下<br>ori<br><img src="/0ops-0CTF-2017/1-ori.png" title="初始界面"><br>1st<br><img src="/0ops-0CTF-2017/1-konami.png"><br>2nd<br><img src="/0ops-0CTF-2017/2-KONAMI.png"><br>3rd<br><img src="/0ops-0CTF-2017/3-KONAMI.png" title="发光了"><br>4th<br><img src="/0ops-0CTF-2017/4-konami.gif" title="文字开始抖动"><br>result<br><img src="/0ops-0CTF-2017/5-konami.png" title="得到base64-code"></p><p>接下来的解密同上</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Unit I: Overview</title>
      <link href="/MIT-18-03sc-Unit-I-Overview/"/>
      <url>/MIT-18-03sc-Unit-I-Overview/</url>
      
        <content type="html"><![CDATA[<h1 id="Session-Overview"><a href="#Session-Overview" class="headerlink" title="Session Overview"></a>Session Overview</h1><p>这一节主要是回顾指数函数</p><h1 id="Session-Activities"><a href="#Session-Activities" class="headerlink" title="Session Activities"></a>Session Activities</h1><h4 id="PDF-The-Exponential-Function"><a href="#PDF-The-Exponential-Function" class="headerlink" title="[PDF]The Exponential Function"></a><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/conventions-and-preliminary-material/MIT18_03SCF11_s0_1text.pdf" target="_blank" rel="noopener">[PDF]The Exponential Function</a></h4><p>这个PDF(1p, 最后一页是版权页)回顾了指数函数的性质</p><h4 id="PDF-Variables-and-Parameters"><a href="#PDF-Variables-and-Parameters" class="headerlink" title="[PDF]Variables and Parameters"></a><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/conventions-and-preliminary-material/MIT18_03SCF11_s0_2text.pdf" target="_blank" rel="noopener">[PDF]Variables and Parameters</a></h4><p>PDF(2p)回顾了独立变量和积分常数</p><h4 id="PDF-Notations-for-Derivatives"><a href="#PDF-Notations-for-Derivatives" class="headerlink" title="[PDF]Notations for Derivatives"></a><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/conventions-and-preliminary-material/MIT18_03SCF11_s0_3text.pdf" target="_blank" rel="noopener">[PDF]Notations for Derivatives</a></h4><p>PDF(1p)回顾了倒数的几种记号</p><h4 id="PDF-Differential-Equations"><a href="#PDF-Differential-Equations" class="headerlink" title="[PDF]Differential Equations"></a><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/conventions-and-preliminary-material/MIT18_03SCF11_s0_4text.pdf" target="_blank" rel="noopener">[PDF]Differential Equations</a></h4><p>PDF(3p)一些DE相关的定义</p><p>缩写： </p><ol><li>Differential equation (DE).<br>微分方程</li><li>Ordinary differential equation (ODE).<br>常微分方程</li><li>Initial value problem (IVP).<br>初值问题</li><li>Initial conditions (IC).<br>初始条件</li></ol><h1 id="Check-Yourself"><a href="#Check-Yourself" class="headerlink" title="Check Yourself"></a>Check Yourself</h1><p>soeasy</p>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
          <category> MOOC </category>
          
          <category> MIT-OCW </category>
          
          <category> MIT-18.03sc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MIT-OCW </tag>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MIT-18.03sc Differential Equations</title>
      <link href="/MIT-18-03SC-Differential-Equations/"/>
      <url>/MIT-18-03SC-Differential-Equations/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/index.htm" target="_blank" rel="noopener">Differential Equations - ocw</a></p><h2 id="SYLLABUS"><a href="#SYLLABUS" class="headerlink" title="SYLLABUS"></a>SYLLABUS</h2><p>这个课的<br><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/Syllabus/" target="_blank" rel="noopener">课程提纲</a><br>里说有两门先修课的要求：</p><ul><li>一元函数微积分<a href="https://ocw.mit.edu/courses/mathematics/18-01-single-variable-calculus-fall-2006/index.htm" target="_blank" rel="noopener">18.01 Single Variable Calculus</a></li><li>多元函数微积分<a href="https://ocw.mit.edu/courses/mathematics/18-02sc-multivariable-calculus-fall-2010/index.htm" target="_blank" rel="noopener">18.02 Multivariable Calculus</a></li></ul><p>学过数分，勉强满足先修要求</p><p>这课其实是常微分方程</p><blockquote><p>The main equations studied in the course are driven first and second order constant coefficient linear ordinary differential equations and 2x2 systems.</p></blockquote><a id="more"></a><h2 id="Units"><a href="#Units" class="headerlink" title="Units"></a>Units</h2><p>[UNIT I: FIRST ORDER DIFFERENTIAL EQUATIONS]</p><p>[UNIT II: SECOND ORDER CONSTANT COEFFICIENT LINEAR EQUATIONS]<br>[UNIT III: FOURIER SERIES AND LAPLACE TRANSFORM]<br>[UNIT IV: FIRST-ORDER SYSTEMS]</p><h1 id="Session-Overview"><a href="#Session-Overview" class="headerlink" title="Session Overview"></a>Session Overview</h1><h1 id="Session-Activities"><a href="#Session-Activities" class="headerlink" title="Session Activities"></a>Session Activities</h1><h1 id="Check-Yourself"><a href="#Check-Yourself" class="headerlink" title="Check Yourself"></a>Check Yourself</h1>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
          <category> MOOC </category>
          
          <category> MIT-OCW </category>
          
          <category> MIT-18.03sc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MIT-OCW </tag>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Unit I: Basic DE&#39;s and Separable Equations</title>
      <link href="/MIT-18-03sc-Unit-I-Basic-DE-s-and-Separable-Equations/"/>
      <url>/MIT-18-03sc-Unit-I-Basic-DE-s-and-Separable-Equations/</url>
      
        <content type="html"><![CDATA[<h1 id="Session-Overview"><a href="#Session-Overview" class="headerlink" title="Session Overview"></a>Session Overview</h1><p>本章重点：</p><p>$$<br>y’=ay<br>$$<br>$$<br>\Updownarrow<br>$$<br>$$<br>y=Ce^{at}<br>$$</p><a id="more"></a><h1 id="Session-Activities"><a href="#Session-Activities" class="headerlink" title="Session Activities"></a>Session Activities</h1><ul><li><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/basic-de-and-separable-equations/MIT18_03SCF11_s1_0intro.pdf" target="_blank" rel="noopener">[PDF-1p]The Most Important DE</a><br> 证明了$y’=ay$的通解为$y=Ce^{at}$</li><li><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/basic-de-and-separable-equations/MIT18_03SCF11_s1_1text.pdf" target="_blank" rel="noopener">[PDF-3p]</a><br> 介绍了常见的几个常微分方程的例子</li><li><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/basic-de-and-separable-equations/MIT18_03SCF11_s1_2text.pdf" target="_blank" rel="noopener">[PDF-3p]Separation of Variables</a><br> 举例讲解了分离变量法，以及其丢根(lost solution)的特性，并重新用分离变量法证明了$y’=ay$的通解</li></ul><h1 id="Check-Yourself"><a href="#Check-Yourself" class="headerlink" title="Check Yourself"></a>Check Yourself</h1><h1 id="Session-Activities-1"><a href="#Session-Activities-1" class="headerlink" title="Session Activities"></a>Session Activities</h1><ul><li><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/basic-de-and-separable-equations/MIT18_03SCF11_s1_5text.pdf" target="_blank" rel="noopener">[PDF-2p]Solutions that Blow Up: The Domain of a Solution</a><br> 讲了有间隔定义域函数$y$组成的微分方程的解法-&gt;作图判断定义区间</li><li><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/unit-i-first-order-differential-equations/basic-de-and-separable-equations/MIT18_03SCF11_s1_6text.pdf" target="_blank" rel="noopener">[PDF-3p]Modeling by First Order Linear ODE’s</a><br> 一阶微分方程的解法</li></ul><h1 id="Check-Yourself-1"><a href="#Check-Yourself-1" class="headerlink" title="Check Yourself"></a>Check Yourself</h1>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
          <category> MOOC </category>
          
          <category> MIT-OCW </category>
          
          <category> MIT-18.03sc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MIT-OCW </tag>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo 测试页</title>
      <link href="/hexo-test/"/>
      <url>/hexo-test/</url>
      
        <content type="html"><![CDATA[<h1 id="超长-TOC-滚动"><a href="#超长-TOC-滚动" class="headerlink" title="超长 TOC 滚动"></a>超长 TOC 滚动</h1><p>[2017-04-24]</p><!-- ============================================================ --><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><h1 id="———-Day-1-———"><a href="#———-Day-1-———" class="headerlink" title="——— Day 1 ———"></a>——— Day 1 ———</h1><h1 id="Ruby’properties"><a href="#Ruby’properties" class="headerlink" title="Ruby’properties"></a>Ruby’properties</h1><h1 id="Note："><a href="#Note：" class="headerlink" title="Note："></a>Note：</h1><h1 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h1><h1 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h1><h2 id="1-“Hello-world-”"><a href="#1-“Hello-world-”" class="headerlink" title="1. “Hello, world.”"></a>1. “Hello, world.”</h2><h2 id="2-找下标"><a href="#2-找下标" class="headerlink" title="2. 找下标"></a>2. 找下标</h2><h3 id="index-方法"><a href="#index-方法" class="headerlink" title="index 方法"></a><code>index</code> 方法</h3><h3 id="方法"><a href="#方法" class="headerlink" title="=~ 方法"></a><code>=~</code> 方法</h3><h2 id="3-重复打印"><a href="#3-重复打印" class="headerlink" title="3. 重复打印"></a>3. 重复打印</h2><h3 id="each-方法"><a href="#each-方法" class="headerlink" title="each 方法"></a><code>each</code> 方法</h3><h3 id="更优雅的-方法"><a href="#更优雅的-方法" class="headerlink" title="更优雅的 *方法"></a>更优雅的 <code>*</code>方法</h3><h2 id="4-循环"><a href="#4-循环" class="headerlink" title="4. 循环"></a>4. 循环</h2><h2 id="5-amp-6-猜数字-rb"><a href="#5-amp-6-猜数字-rb" class="headerlink" title="5.&amp;6. 猜数字.rb"></a>5.&amp;6. 猜数字.rb</h2><hr><h1 id="———-Day-2-———"><a href="#———-Day-2-———" class="headerlink" title="——— Day 2 ———"></a>——— Day 2 ———</h1><h1 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h2 id="散列表"><a href="#散列表" class="headerlink" title="散列表"></a>散列表</h2><h2 id="代码块和yield"><a href="#代码块和yield" class="headerlink" title="代码块和yield"></a>代码块和yield</h2><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h1 id="summary-1"><a href="#summary-1" class="headerlink" title="summary"></a>summary</h1><h1 id="Todo-1"><a href="#Todo-1" class="headerlink" title="Todo"></a>Todo</h1><h2 id="1-each与枚举"><a href="#1-each与枚举" class="headerlink" title="1. each与枚举"></a>1. each与枚举</h2><h2 id="2-树与方法"><a href="#2-树与方法" class="headerlink" title="2. 树与方法"></a>2. 树与方法</h2><h2 id="3-grep"><a href="#3-grep" class="headerlink" title="3. grep"></a>3. grep</h2><hr><h1 id="———-Day-3-———"><a href="#———-Day-3-———" class="headerlink" title="——— Day 3 ———"></a>——— Day 3 ———</h1><h1 id="Note-1"><a href="#Note-1" class="headerlink" title="Note"></a>Note</h1><h2 id="元编程"><a href="#元编程" class="headerlink" title="元编程"></a>元编程</h2><h1 id="summary-2"><a href="#summary-2" class="headerlink" title="summary"></a>summary</h1><h1 id="Todo-2"><a href="#Todo-2" class="headerlink" title="Todo"></a>Todo</h1><h2 id="CSV程序"><a href="#CSV程序" class="headerlink" title="CSV程序"></a>CSV程序</h2><h1 id="—-More-about-Ruby-—"><a href="#—-More-about-Ruby-—" class="headerlink" title="—- More about Ruby —-"></a>—- More about Ruby —-</h1><h2 id="Ruby-的核心优势"><a href="#Ruby-的核心优势" class="headerlink" title="Ruby 的核心优势"></a>Ruby 的核心优势</h2><h2 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h2><!-- ============================================================ --><h1 id="连接符test"><a href="#连接符test" class="headerlink" title="连接符test"></a>连接符test</h1><h1 id="1"><a href="#1" class="headerlink" title="- 1"></a>- 1</h1><h1 id="–-2"><a href="#–-2" class="headerlink" title="– 2"></a>– 2</h1><h1 id="—-3"><a href="#—-3" class="headerlink" title="— 3"></a>— 3</h1><h1 id="—-4"><a href="#—-4" class="headerlink" title="—- 4"></a>—- 4</h1><h1 id="—–-5"><a href="#—–-5" class="headerlink" title="—– 5"></a>—– 5</h1><h1 id="——-6"><a href="#——-6" class="headerlink" title="—— 6"></a>—— 6</h1><h1 id="——-7"><a href="#——-7" class="headerlink" title="——- 7"></a>——- 7</h1><h1 id="——–-8"><a href="#——–-8" class="headerlink" title="——– 8"></a>——– 8</h1><h1 id="———-9"><a href="#———-9" class="headerlink" title="——— 9"></a>——— 9</h1><h1 id="highlight-test"><a href="#highlight-test" class="headerlink" title="highlight-test"></a>highlight-test</h1><figure class="highlight c"><figcaption><span>c源码 3.1.c</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hello, world\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"hello, world\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><figcaption><span>Guess_Number.rb</span><a href="https://gist.github.com/inkydragon/247dea86ec79d9d100faf930527fc515" target="_blank" rel="noopener">test.md </a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Guess num between [0..9]</span></span><br><span class="line">num = rand(<span class="number">10</span>)</span><br><span class="line">puts <span class="string">"Let's guess number !\nHave a guess!\n"</span> </span><br><span class="line">loop <span class="keyword">do</span></span><br><span class="line">    tmp = gets.to_i</span><br><span class="line">    puts <span class="string">"Too High"</span> <span class="keyword">if</span> num &lt; tmp</span><br><span class="line">    puts <span class="string">"Too Low"</span> <span class="keyword">if</span> num &gt; tmp</span><br><span class="line">    <span class="keyword">break</span> <span class="keyword">if</span> num == gets.to_i </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">puts <span class="string">"Yes! rand number is <span class="subst">#&#123;num&#125;</span>"</span></span><br></pre></td></tr></table></figure><hr><h1 id="date-amp-update-test"><a href="#date-amp-update-test" class="headerlink" title="date &amp; update test"></a>date &amp; update test</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">date: 2017-02-07 17:00:31</span><br><span class="line">updated: 1017-02-07 16:43:31</span><br></pre></td></tr></table></figure><hr><h1 id="LaTeX-Supposed-test"><a href="#LaTeX-Supposed-test" class="headerlink" title="LaTeX Supposed-test"></a>LaTeX Supposed-test</h1><p>The <strong>characteristic polynomial</strong> $\chi(\lambda)$ of the $3 \times 3$ matrix<br>$$<br>\left( \begin{array}{ccc}<br>a &amp; b &amp; c \<br>d &amp; e &amp; f \<br>g &amp; h &amp; i<br>\end{array} \right)<br>$$<br>is given by the formula<br>$$<br>\chi(\lambda) = \left| \begin{array}{ccc}<br>\lambda - a &amp; -b &amp; -c \<br>-d &amp; \lambda - e &amp; -f \<br>-g &amp; -h &amp; \lambda - i<br>\end{array} \right|.<br>$$</p><p>$$<br>y’=ay<br>$$<br>$$<br>\Updownarrow<br>$$<br>$$<br>y=Ce^{at}<br>$$</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MSVCP120D.dll is missing</title>
      <link href="/MSVCP120D-dll-is-missing/"/>
      <url>/MSVCP120D-dll-is-missing/</url>
      
        <content type="html"><![CDATA[<p>ref:    </p><ul><li><a href="http://stackoverflow.com/questions/21458908/fixing-the-msvcp110d-dll-is-missing-from-your-computer-issue" target="_blank" rel="noopener">visual studio 2010 - Fixing the &quot;MSVCP110D.dll is missing from your computer&quot; issue - Stack Overflow</a></li><li><a href="http://stackoverflow.com/questions/21707992/msvcp120d-dll-missing" target="_blank" rel="noopener">c++ - MSVCP120d.dll missing - Stack Overflow</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> MSVC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Metapost btex etex problem</title>
      <link href="/Metapost-btex-etex-problem/"/>
      <url>/Metapost-btex-etex-problem/</url>
      
        <content type="html"><![CDATA[<h3 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h3><ul><li><a href="http://bbs.ctex.org/forum.php?mod=viewthread&amp;tid=152699" target="_blank" rel="noopener">要被metapost的Unable to make mpx file 整崩溃了。 - ctex.org</a></li><li><a href="http://bbs.chinatex.org/forum.php?mod=viewthread&amp;action=printable&amp;tid=7149" target="_blank" rel="noopener">以下为什么不能编绎？ - chinatex.org</a></li><li><a href="https://www.tug.org/pipermail/metapost/2013-July/002863.html" target="_blank" rel="noopener">[metapost] Metapost btex etex problem - tug.org</a></li><li><a href="https://www.tug.org/pipermail/metapost/2010-September/002032.html" target="_blank" rel="noopener">[metapost] Unable to make mpx file. Btex and etex issue - tug.org</a></li><li><a href="https://groups.google.com/forum/#!msg/comp.text.tex/jnQDiYmqZfU/t06ah2bWOmIJ" target="_blank" rel="noopener">“! Unable to make mpx file.” - G+</a></li><li>tex.stackexchange 上搜 <code>Unable to read mpx file</code>啥都没有<br>  搜<code>Unable to make mpx file</code>有三个问题….上面都是<code>make</code><br>  以下是<strong>唯一一个</strong>与<code>Unable to read mpx file</code>相关的,是源码   </li><li>巨坑的源码 <a href="https://foundry.supelec.fr/scm/viewvc.php/trunk/source/texk/web2c/mplibdir/mp.w?root=metapost&amp;r1=2037&amp;r2=2044" target="_blank" rel="noopener">Diff of /trunk/source/texk/web2c/mplibdir/mp.w</a></li></ul><h2 id="问题简述"><a href="#问题简述" class="headerlink" title="问题简述"></a>问题简述</h2><p>mpost 编译不加任何头的mp 文件可以正常生成mps<br>但从上一级目录编译就不行</p><a id="more"></a><p>正常情况:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">I:\Desktop\Translation\TeX-doc\Metapost\Metapost-doc-CHS\source-manual&gt;cd mp</span><br><span class="line"></span><br><span class="line">I:\Desktop\Translation\TeX-doc\Metapost\Metapost-doc-CHS\source-manual\mp&gt;mpost mpgraph.mp</span><br><span class="line">This is MetaPost, version 1.9991 (TeX Live 2016/W32TeX) (kpathsea version 6.2.2)</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/mpost.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/plain.mp</span><br><span class="line">Preloading the plain mem file, version 1.005) ) (./mpgraph.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/graph.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/marith.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/string.mp))</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/format.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/string.mp)</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/texnum.mp))) [1] [2] [3] [4]</span><br><span class="line">[5] [6] (f:/study/texlive/2016/texmf-dist/metapost/base/sarith.mp) [7] [8]</span><br><span class="line">[9] [10] [11] )</span><br><span class="line">11 output files written: mpgraph-1.mps .. mpgraph-11.mps</span><br><span class="line">Transcript written on mpgraph.log.</span><br></pre></td></tr></table></figure></p><p>改为上一级目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">I:\Desktop\Translation\TeX-doc\Metapost\Metapost-doc-CHS\source-manual\mp&gt;mpost --debug ./mp/mpgraph.mp</span><br><span class="line">This is MetaPost, version 1.9991 (TeX Live 2016/W32TeX) (kpathsea version 6.2.2)</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/mpost.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/plain.mp</span><br><span class="line">Preloading the plain mem file, version 1.005) ) (./mpgraph.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/graph.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/marith.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/string.mp))</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/format.mp</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/string.mp)</span><br><span class="line">(f:/study/texlive/2016/texmf-dist/metapost/base/texnum.mp</span><br><span class="line">&gt;&gt; texnum.mp</span><br><span class="line">&gt;&gt; texnum.mpx</span><br><span class="line">! ! Unable to read mpx file.</span><br><span class="line">l.17 init_numbers(btex</span><br><span class="line">                      $-$etex, btex$1$etex, btex$&#123;\times&#125;10$etex,</span><br><span class="line">Transcript written on mpgraph.log.</span><br><span class="line"></span><br><span class="line">I:\Desktop\Translation\TeX-doc\Metapost\Metapost-doc-CHS\source-manual\mp&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> bug or typo? </tag>
            
            <tag> Metapost </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>TeXLive2016-bug or typo? list</title>
      <link href="/TeXLive2016-bug-or-typo-list/"/>
      <url>/TeXLive2016-bug-or-typo-list/</url>
      
        <content type="html"><![CDATA[<p>TeXLive 本来不坑，是很好的选择，但和其他东西混在一起后就十分的坑了。</p><h4 id="Metapost-Makefile"><a href="#Metapost-Makefile" class="headerlink" title="Metapost　+ Makefile"></a>Metapost　+ Makefile</h4><p>我只是想让src目录下看起来更顺眼而已</p><a href="/Metapost-btex-etex-problem/" title="Metapost btex etex problem">Metapost btex etex problem</a>]]></content>
      
      
      
        <tags>
            
            <tag> bug or typo? </tag>
            
            <tag> TeXLive </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WordPress漏洞环境搭建与测试——REST API 内容注入漏洞</title>
      <link href="/WordPress%E6%BC%8F%E6%B4%9E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95%E2%80%94%E2%80%94REST-API-%E5%86%85%E5%AE%B9%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
      <url>/WordPress%E6%BC%8F%E6%B4%9E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95%E2%80%94%E2%80%94REST-API-%E5%86%85%E5%AE%B9%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>研究了下翻译文章投稿的可能性，关注了一堆 <a href="http://digg.com/user/49eababd06ea463b8d564225d876621e/diggs.rss" target="_blank" rel="noopener">RSS</a>,在 paper.seebug 上看见这篇 <a href="http://paper.seebug.org/208/" target="_blank" rel="noopener">WordPress REST API 内容注入漏洞分析</a> ，刚好又有几个新搭的 WordPress 站可以测试，于是趁机熟悉下Python、学一学POC的编写。</p><a id="more"></a><h3 id="PoC规范"><a href="#PoC规范" class="headerlink" title="PoC规范"></a>PoC规范</h3><p>【Seebug】<a href="https://www.seebug.org/help/dev" target="_blank" rel="noopener">远程 PoC 开发文档</a><br>【Github】<a href="https://github.com/knownsec/Pocsuite/blob/master/docs/CODING.md" target="_blank" rel="noopener">PoC 编写规范及要求说明</a><br> <a href="https://github.com/knownsec/Pocsuite/blob/dev/docs/translations/USAGE-zh.md" target="_blank" rel="noopener">Pocsuite 框架使用方法</a></p><h3 id="Bug-参考"><a href="#Bug-参考" class="headerlink" title="Bug 参考"></a>Bug 参考</h3><p>【Seebug】<a href="https://www.seebug.org/vuldb/ssvid-92637" target="_blank" rel="noopener">WordPress REST API 内容注入漏洞</a><br>【Paper.Seebug】<a href="http://paper.seebug.org/208/" target="_blank" rel="noopener">WordPress REST API 内容注入漏洞分析</a></p><p>Bug原始出处：<br>【EN-sucuri-blog】<a href="https://blog.sucuri.net/2017/02/content-injection-vulnerability-wordpress-rest-api.html" target="_blank" rel="noopener">Content Injection Vulnerability in WordPress</a></p><blockquote><p>sucuri-blog 现已加入豪华午餐：<a href="http://digg.com/user/49eababd06ea463b8d564225d876621e/diggs.rss" target="_blank" rel="noopener">RSS订阅</a></p></blockquote><p>PoC：<br>【EN-exploit-db】<a href="https://www.exploit-db.com/exploits/41223/" target="_blank" rel="noopener">WordPress 4.7.0/4.7.1 - Unauthenticated Content Injection (Python)</a><br>【EN-exploit-db】<a href="https://www.exploit-db.com/exploits/41224/" target="_blank" rel="noopener">WordPress 4.7.0/4.7.1 - Unauthenticated Content Injection (Ruby)</a></p><p>修复/更新补丁：<br>【EN-WordPress.org】<a href="https://wordpress.org/news/2017/01/wordpress-4-7-2-security-release/" target="_blank" rel="noopener">WordPress 4.7.2 Security Release</a></p><h3 id="Bug详情"><a href="#Bug详情" class="headerlink" title="Bug详情"></a>Bug详情</h3><h3 id="Bug-利用"><a href="#Bug-利用" class="headerlink" title="Bug 利用"></a>Bug 利用</h3><h5 id="垃圾exploit-db"><a href="#垃圾exploit-db" class="headerlink" title="垃圾exploit-db"></a>垃圾exploit-db</h5><p>Python 经典Unicode大坑，PoC并没有注意到这点，代码稍作修改<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> post <span class="keyword">in</span> posts:</span><br><span class="line">    print(<span class="string">' - Post ID: &#123;&#125;, Title: &#123;&#125;, Url: &#123;&#125;'</span></span><br><span class="line">          .format(post[<span class="string">'id'</span>],</span><br><span class="line">                  post[<span class="string">'title'</span>][<span class="string">'rendered'</span>].encode(<span class="string">'gbk'</span>),</span><br><span class="line">                  post[<span class="string">'link'</span>].encode(<span class="string">'utf-8'</span>)))</span><br></pre></td></tr></table></figure></p><p>其余均可正常运行</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> WordPress </tag>
            
            <tag> PoC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>密码与 Esoteric programming languages</title>
      <link href="/%E5%AF%86%E7%A0%81%E4%B8%8E-Esoteric-programming-languages/"/>
      <url>/%E5%AF%86%E7%A0%81%E4%B8%8E-Esoteric-programming-languages/</url>
      
        <content type="html"><![CDATA[<p>在密码吧看到<a href="http://tieba.baidu.com/p/4963843005" target="_blank" rel="noopener">两张图</a>，目测是<a href="https://en.wikipedia.org/wiki/Esoteric_programming_language" target="_blank" rel="noopener">Esoteric programming language</a>(天马dalao也提示了，就想着试一试<br><img src="/密码与-Esoteric-programming-languages/Piet.jpg" title="第一张"><br><img src="/密码与-Esoteric-programming-languages/Malbolge.jpg" title="第二张"></p><p>以前也在知乎上看见过<a href="https://www.zhihu.com/question/23115824/answer/45138393" target="_blank" rel="noopener">相关的介绍</a>，找了一下，第一张是Piet-lang，第二张是 Malbolge-lang</p><p>开工！</p><a id="more"></a><h1 id="Piet-lang"><a href="#Piet-lang" class="headerlink" title="Piet-lang"></a>Piet-lang</h1><p>Google 之，找到编译器 <a href="http://www.dangermouse.net/esoteric/piet/tools.html" target="_blank" rel="noopener">Piet Interpreters and Assemblers</a></p><h2 id="Piet-lang-编译环境构建"><a href="#Piet-lang-编译环境构建" class="headerlink" title="Piet-lang 编译环境构建"></a>Piet-lang 编译环境构建</h2><h3 id="0-try-web-Piet-IDE"><a href="#0-try-web-Piet-IDE" class="headerlink" title="# 0 try: web Piet IDE"></a># 0 try: <a href="http://zobier.net/piet/" target="_blank" rel="noopener">web Piet IDE</a></h3><p>格子太少，需要手工输入，虽然有<a href="http://www.rapapaing.com/blog/?page_id=6" target="_blank" rel="noopener">源码</a>，但目测改起来麻烦，遂放弃</p><h3 id="1st-try-py-脚本"><a href="#1st-try-py-脚本" class="headerlink" title="# 1st try: .py 脚本"></a># 1st try: .py 脚本</h3><p>另存为.py运行，需要 Python Imaging Library 库</p><p>在<a href="http://www.pythonware.com/products/pil/" target="_blank" rel="noopener">官网</a>下载的安装包不能用，<code>easy_install PIL</code>无果</p><p>遂手动编译 PIL</p><p>下载源码 ，cd到源代码根目录<code>python setup.py install</code></p><p>报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">running build_ext</span><br><span class="line">building &apos;_imaging&apos; extension</span><br><span class="line">error: Unable to find vcvarsall.bat</span><br><span class="line"></span><br><span class="line">I:\Desktop\Imaging-1.1.7&gt;</span><br></pre></td></tr></table></figure></p><p>google 得知是少Python的C++编译器<br><blockquote><p>Update: Comments point out that the instructions here may be dangerous. Consider using the Visual C++ 2008 Express edition or the purpose-built <a href="http://www.microsoft.com/en-us/download/details.aspx?id=44266" target="_blank" rel="noopener">Microsoft Visual C++ Compiler for Python</a> <a href="http://stackoverflow.com/a/26127562/2778484" target="_blank" rel="noopener">(details)</a> and NOT using the original answer below. Original error message means the required version of Visual C++ is not installed.</p><footer><strong>Ross Rogers</strong><cite><a href="http://stackoverflow.com/a/10558328" target="_blank" rel="noopener">hexo error: Unable to find vcvarsall.bat</a></cite></footer></blockquote></p><p>安装以上提到的.msi包，发现已经装过了</p><p>DEAD</p><h3 id="2nd-try-C-编译器"><a href="#2nd-try-C-编译器" class="headerlink" title="# 2nd try: C 编译器"></a># 2nd try: <a href="https://github.com/ducin/piet" target="_blank" rel="noopener">C 编译器</a></h3><p>需要<code>cmake</code>，下载cmake(网速感人，安装完，编译</p><p>报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CMake Error at C:/Program Files/CMake/share/cmake-3.8/Modules/FindQt4.cmake:1318 (message):</span><br><span class="line">  Found unsuitable Qt version &quot;&quot; from NOTFOUND, this code requires Qt 4.x</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  CMakeLists.txt:5 (FIND_PACKAGE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- Configuring incomplete, errors occurred!</span><br><span class="line">See also &quot;I:/Desktop/piet-master/build/CMakeFiles/CMakeOutput.log&quot;.</span><br><span class="line"></span><br><span class="line">I:\Desktop\piet-master\build&gt;</span><br></pre></td></tr></table></figure></p><p>DEAD</p><h3 id="3rd-try-成品编译器-npiet-1-3a"><a href="#3rd-try-成品编译器-npiet-1-3a" class="headerlink" title="# 3rd try: 成品编译器 npiet-1.3a"></a># 3rd try: 成品编译器 npiet-1.3a</h3><p><a href="http://www.bertnase.de/npiet/" target="_blank" rel="noopener">npiet-1.3a-win32 </a><br>只支持 .gif .png .ppm<br>自带的例子可以正常运行，</p><figure class="highlight plain"><figcaption><span>npiet-help</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">I:\Downloads\npiet-1.3a-win32&gt;npiet.exe -h</span><br><span class="line">npiet v1.3  (with GD support, with GIF support, with PNG support)</span><br><span class="line"></span><br><span class="line">use: npiet [&lt;options&gt;] &lt;filename&gt;</span><br><span class="line">options:</span><br><span class="line">        -v         - be verbose (default: off)</span><br><span class="line">        -q         - be quiet (default: off)</span><br><span class="line">        -e &lt;n&gt;     - execution steps (default: unlimited)</span><br><span class="line">        -t         - trace (default: off)</span><br><span class="line">        -ub        - unknown colors are black (default: white)</span><br><span class="line">        -uu        - unknown colors give error (default: white)</span><br><span class="line">        -cs &lt;n&gt;    - codelsize of the input (default: guess)</span><br><span class="line">        -tpic      - create trace picture  (default: do not)</span><br><span class="line">        -tpf &lt;n&gt;   - trace pixelzoom  (default: 48 or so)</span><br><span class="line">        -tps       - simple trace pic w/o dp/cc info  (default: sho dp/cc info)</span><br><span class="line">        -ts &lt;n&gt;    - graphic trace start (default: 0)</span><br><span class="line">        -te &lt;n&gt;    - graphic trace end (default: unlimited)</span><br><span class="line">        -n-str &lt;s&gt; - nase stuff: string-to-command</span><br><span class="line">        -d         - debug (default: off)</span><br><span class="line">        -dpbug     - model the perl piet interpreter (default: off)</span><br><span class="line">        -v11       - model the npiet v1.1 interpreter (default: off)</span><br></pre></td></tr></table></figure><p>不带参数运行题目，听见风扇声，CPU占用率升高，怀疑死循环，加上参数<code>-t</code>确认是死循环</p><p>怀疑是图片非原图质量不高且经过放大所致.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">I:\Downloads\npiet-1.3a-win32&gt;npiet.exe -t Piet.png</span><br><span class="line">trace: special case: we at a white codel - continuing</span><br><span class="line">trace: entering white block at 471,0 (like the perl interpreter would)...</span><br><span class="line"></span><br><span class="line">trace: step 0  (0,0/r,l WW -&gt; 471,0/r,l WW):</span><br><span class="line">trace: special case: we at a white codel - continuing</span><br><span class="line">trace: entering white block at 471,2 (like the perl interpreter would)...</span><br><span class="line"></span><br><span class="line">trace: step 1  (471,0/r,l WW -&gt; 471,2/d,r WW):</span><br><span class="line">trace: special case: we at a white codel - continuing</span><br><span class="line">trace: entering white block at 464,2 (like the perl interpreter would)...</span><br><span class="line"></span><br><span class="line">trace: step 2  (471,2/d,r WW -&gt; 464,2/l,l WW):</span><br><span class="line">trace: special case: we at a white codel - continuing</span><br><span class="line">trace: entering white block at 464,0 (like the perl interpreter would)...</span><br><span class="line"></span><br><span class="line">trace: step 3  (464,2/l,l WW -&gt; 464,0/u,r WW):</span><br><span class="line">trace: special case: we at a white codel - continuing</span><br><span class="line">trace: entering white block at 471,0 (like the perl interpreter would)...</span><br><span class="line"></span><br><span class="line">trace: step 4  (464,0/u,r WW -&gt; 471,0/r,l WW):</span><br><span class="line">trace: special case: we at a white codel - continuing</span><br><span class="line">trace: entering white block at 471,2 (like the perl interpreter would)...</span><br><span class="line"></span><br><span class="line">trace: step 5  (471,0/r,l WW -&gt; 471,2/d,r WW):</span><br><span class="line">trace: special case: we at a white codel - continuing</span><br><span class="line">trace: entering white block at 464,2 (like the perl interpreter would)...</span><br><span class="line"></span><br><span class="line">.....</span><br></pre></td></tr></table></figure></p><p>带参数<code>-ub</code>无果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">I:\Downloads\npiet-1.3a-win32&gt;npiet.exe -ub -t Piet.png</span><br><span class="line">trace: special case: we started at a black cell - exiting...</span><br><span class="line"></span><br><span class="line">I:\Downloads\npiet-1.3a-win32&gt;</span><br></pre></td></tr></table></figure></p><p>用老版的解释器进一步确认是死循环：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">I:\Downloads\npiet-1.3a-win32&gt;npiet.exe -v11 -t Piet.png</span><br><span class="line">trace: special case: we at a white codel - continuing</span><br><span class="line">trace: hitting black block when sliding at 471,0 l r</span><br><span class="line">trace: hitting black block when sliding at 471,2 r d</span><br><span class="line">trace: hitting black block when sliding at 464,2 l l</span><br><span class="line">trace: hitting black block when sliding at 464,0 r u</span><br><span class="line">trace: hitting black block when sliding at 471,0 l r</span><br><span class="line"></span><br><span class="line">I:\Downloads\npiet-1.3a-win32&gt;</span><br></pre></td></tr></table></figure></p><p>遂放弃</p><p>DEAD</p><hr><h1 id="Malbolge-lang"><a href="#Malbolge-lang" class="headerlink" title="Malbolge-lang"></a>Malbolge-lang</h1><p>找到疑似<a href="http://www.lscheffer.com/malbolge.shtml" target="_blank" rel="noopener">官网</a></p><h2 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h2><p><a href="http://www.lscheffer.com/malbolge_interp.html" target="_blank" rel="noopener">编译器源码</a><br><strong><em>记得把第一句话删掉！！</em></strong></p><p>Hello World测试代码<br><figure class="highlight plain"><figcaption><span>Malbolge-lang Hello World.mal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(&apos;&amp;%:9]!~&#125;|z2Vxwv-,POqponl$Hjig%eB@@&gt;&#125;=&lt;M:9wv6WsU2T|nm-,jcL(I&amp;%$#&quot;</span><br><span class="line"> `CB]V?Tx&lt;uVtT`Rpo3NlF.Jh++FdbCBA@?]!~|4XzyTT43Qsqq(Lnmkj&quot;Fhg$&#123;z@&gt;</span><br></pre></td></tr></table></figure><br>一般都能正常运行</p><p>然后手工识别源码：<br><figure class="highlight plain"><figcaption><span>Malbolge-lang Job.mal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(&apos;&amp;$:^&quot;!&#125;54Xzyw5.Rtrrp(&apos;Kml)j!Eg</span><br><span class="line">f&#123;&quot;cx&gt;_u::[q7554E~10A.-+M*uK&apos;_^]</span><br><span class="line">\&quot;ZY&#125;j/zxw;;:Ur7q44</span><br></pre></td></tr></table></figure></p><p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">I:\Desktop\malbolge_interp&gt;malbolge.exe Hello_World.mal</span><br><span class="line">Hello World!</span><br><span class="line">I:\Desktop\malbolge_interp&gt;malbolge.exe job.mal</span><br><span class="line">g@v-io.co</span><br><span class="line">I:\Desktop\malbolge_interp&gt;</span><br></pre></td></tr></table></figure></p><p>FIN</p>]]></content>
      
      
      
        <tags>
            
            <tag> Cipher &amp; Code </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Private Github repo &amp; Public Github Pages</title>
      <link href="/Private-Github-repo-Public-Github-Pages/"/>
      <url>/Private-Github-repo-Public-Github-Pages/</url>
      
        <content type="html"><![CDATA[<p>弄了个 Student Developer Pack 可以使用 Private repo ，我就想，如果把 Github Pages 设为 Private 会怎么样。</p><p>Google 一下，发现设为私有后 Github Pages 仍然可用<br><blockquote><p>I had raised a support ticket against Github and got a response confirming the fact that ALL pages are public. I’ve now requested them to add a note to help.github.com/pages.</p><footer><strong>kashyap</strong><cite><a href="http://stackoverflow.com/a/11007746" target="_blank" rel="noopener">Private pages for a private Github repo</a></cite></footer></blockquote></p><blockquote><p>All project repositories are ready to use the generator for publishing. <strong>However, please note that private repositories will publish pages that are public.</strong></p><footer><strong>Joel Glovier</strong><cite><a href="http://stackoverflow.com/a/19058071" target="_blank" rel="noopener">Private pages for a private Github repo</a></cite></footer></blockquote><p>于是索性把repo 设为私有，这样还可以把源md文件传上去备份，挺好的。</p><h3 id="关于付费账户到期时私有项目问题"><a href="#关于付费账户到期时私有项目问题" class="headerlink" title="关于付费账户到期时私有项目问题"></a>关于付费账户到期时私有项目问题</h3><p><del>只是需要注意repo公开时，源md文件泄露的问题。</del><br><blockquote><p>停止付费后，私有项目会继续出现在”Your repositories”的”Private”选项卡中，前面显示一个lock的图标。<br>此时你无法进入或操作此项目，除非你重新付费。</p><footer><strong>VinkyQ</strong><cite><a href="https://www.zhihu.com/question/23200523/answer/23899098" target="_blank" rel="noopener">github停止付费后，对私有项目如何处理？</a></cite></footer></blockquote></p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo 发布时间显示问题</title>
      <link href="/Hexo-%E5%8F%91%E5%B8%83%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
      <url>/Hexo-%E5%8F%91%E5%B8%83%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="问题概述"><a href="#问题概述" class="headerlink" title="问题概述"></a>问题概述</h1><p><code>hexo new post</code>后在<code>Front-matter</code>里用<code>date:</code>指定时间，但<code>generate</code>后，页面显示的的时间为当天时间。</p><p><code>_config.yml</code>日期格式是正确的，<code>post</code>里<code>date</code>的格式也是正确的。<code>hexo clean</code>后重新生成文章仍然出现此问题。以前写文章都是直接<code>post</code>很少用<code>draft</code>，所以未遇到过同样的问题。</p><a id="more"></a><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hexo: 3.2.2</span><br><span class="line">hexo-cli: 1.0.2</span><br><span class="line">os: Windows_NT 10.0.14393 win32 x64</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">node: 4.5.0</span><br><span class="line">v8: 4.5.103.37</span><br><span class="line">uv: 1.9.1</span><br><span class="line">zlib: 1.2.8</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">icu: 56.1</span><br><span class="line">modules: 46</span><br><span class="line">openssl: 1.0.2h</span><br></pre></td></tr></table></figure><p>这个是所用的<code>_config.yml</code>配置<br><script src="//gist.github.com/1b1015ab4c642ca1d225a6e3d7703de8.js"></script></p><h1 id="初步尝试"><a href="#初步尝试" class="headerlink" title="初步尝试"></a>初步尝试</h1><h2 id="搜索同类问题"><a href="#搜索同类问题" class="headerlink" title="搜索同类问题"></a>搜索同类问题</h2><blockquote><p><a href="https://www.zhihu.com/question/24166345/answer/26906184" target="_blank" rel="noopener">@曹楠</a><br>请先尝试将日期格式设为初始值，如果显示无误，再行尝试。</p><blockquote><h1 id="Date-Time-format"><a href="#Date-Time-format" class="headerlink" title="Date / Time format"></a>Date / Time format</h1><p>## Hexo uses Moment.js to parse and display date<br>## You can customize the date format as defined in<br>## <a href="http://momentjs.com/docs/#/displaying/format/" target="_blank" rel="noopener">http://momentjs.com/docs/#/displaying/format/</a><br>date_format: MMM D YYYY<br>time_format: H:mm:ss</p></blockquote><footer><strong>zhihu</strong><cite><a href="https://www.zhihu.com/question/24166345" target="_blank" rel="noopener">hexo文章发表日期怎么设置?</a></cite></footer></blockquote><blockquote><p>@i36lib<br>@guoer 说的对，就是在文章的 md 文档前面加 date: ，这个时间的格式可以在你 blog 目录下的_config.yml 中通过 date_format: YYYY-MM-DD HH:mm:ss 来指定。</p><footer><strong>V2EX › 程序员</strong><cite><a href="https://www.v2ex.com/t/231549" target="_blank" rel="noopener">hexo 文章生成时间问题</a></cite></footer></blockquote><blockquote><p><a href="http://stackoverflow.com/a/32975241" target="_blank" rel="noopener">@blueberryfields</a><br>hexo controls the publish date (and other config options) in the source .md files. just add a date tag to the top of the file, for example:</p><blockquote><p>title: page title<br>tags:<br>  - aTag<br>  - anotherTag<br>id: 418<br>categories:<br>  - aCategory<br>  - anotherCategory</p></blockquote><h2 id="date-2013-11-06-06-40-12"><a href="#date-2013-11-06-06-40-12" class="headerlink" title="date: 2013-11-06 06:40:12"></a>date: 2013-11-06 06:40:12</h2><p>Some text i’d like to have in the body of this post</p><footer><strong>stackoverflow</strong><cite><a href="http://stackoverflow.com/questions/32974409/how-do-i-control-post-publish-dates-with-hexo" target="_blank" rel="noopener">How do i control post publish dates with hexo?</a></cite></footer></blockquote><h2 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h2><p>检查过<code>_config.yml</code>以及<code>post</code>里的<code>date</code></p><ol><li>【无效】<code>hexo clean</code> +　<code>hexo g</code></li><li>【无效】<code>hexo clean</code> +　<code>hexo g --safe</code></li><li>【无效】换为原版皮肤 <code>hexo clean</code> +　<code>hexo g</code></li><li>【无效】把<code>date_format</code>的值从<code>null</code>改为<code>&#39;YYYY-MM-DD HH:mm:ss&#39;</code> + #1 <figure class="highlight html"><figcaption><span>date_format</span><a href="https://github.com/xiangming/landscape-plus/blob/master/layout/_partial/article.ejs" target="_blank" rel="noopener">article.ejs</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">id</span>=<span class="string">"&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;"</span> <span class="attr">class</span>=<span class="string">"article article-type-&lt;%= post.layout %&gt;"</span> <span class="attr">itemscope</span> <span class="attr">itemprop</span>=<span class="string">"blogPost"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-meta"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">date</span>', &#123;<span class="attr">class_name:</span> '<span class="attr">article-date</span>', <span class="attr">date_format:</span> '<span class="attr">YYYY-MM-DD</span> <span class="attr">HH:mm:ss</span>'&#125;) %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">category</span>') %&gt;</span></span><br><span class="line">    .....</span><br></pre></td></tr></table></figure></li><li>#4 + 重新手打一遍 <code>date</code> 的值</li></ol><p>用新的post测试#4时有效，但出问题的那篇文章发布后的日期与.md里的日期不一致，#5手工重新输入日期后问题发布日期显示正确。</p><ol start="6"><li>尝试将<code>article.ejs</code>还原，并用新的post测试</li></ol><p>事实证明date字段可以正常工作。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>从结果来看，date字段不生效的主因是他自己‘不正常’、不符合格式。那一片出问题文章的date字段是我从Windows资源管理器里直接复制出来的，复制到atom里时间部分(HH-mm-ss)就不能正常编辑,折腾了半天删掉了时间部分，然后手打了一遍。结果还是有问题.</p><h2 id="问题溯源"><a href="#问题溯源" class="headerlink" title="问题溯源"></a>问题溯源</h2><p>直接从Windows资源管理器里直接复制到Atom里的时间如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2016‎年‎7‎月‎6‎日 ‎星期三，‏‎19:35:00</span><br></pre></td></tr></table></figure></p><p>在浏览器中产看源代码<br><img src="/Hexo-发布时间显示问题/xiaojie1.png"></p><p>可以看见有坑爹的<code>&amp;rlm;</code>，维基称之为 Right-to-left mark，说明锅是微软的。</p><p><del>以上</del></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>为什么要翻译英文文章</title>
      <link href="/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%BF%BB%E8%AF%91%E8%8B%B1%E6%96%87%E6%96%87%E7%AB%A0/"/>
      <url>/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%BF%BB%E8%AF%91%E8%8B%B1%E6%96%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不少人问《物理化学》教科书是不是用英文写。答案自然是中文。科学思想如此之深刻、科学智慧如此之美妙。我以为，用母语能展现给读者科学的真貌已经是大功一件。是的，现代科学传入中国也就100年左右的时光，科学还没有进入到中国文化的核心。经过几代人（尤其是第一代留学生）的不懈努力，中国的科学教育完成了扫盲的任务，但离神形兼备还颇有距离。</p><p>时至今日，国人对科学与科学教育的信心颇足，恐怕没有太多的人会叫喊着要回复到“一心只读圣贤书”的时代了。我们相信，中国需要科学，中国的前途—无论是四十年前的四个现代化还是今天的产业升级—在于科学。无疑，科学教科书承担着提升中国科学教育的中心任务。作为一个大国，难以想象，我们必须依靠英文科学教科书来承载国家和民族的前途。</p><p>因此，无论是否可以写好，用中文写这本书的念头从未动摇过。科学是欧美人发明的实践人生的新路子、认识自然的美妙法门，但谁也不能阻拦我们用鲁迅先生的拿来主义把它中国化。</p><p>更加重要的是，科学教育的首要目的不是知识的灌输、不是技能的培训、不是经验的积累，甚至不是兴趣的培养也不是方法的传承，而是弘扬科学精神、让年轻人愉快而自愿地选择与真理同在的人生。任务艰巨，用母语做好已颇不易。难以想象英文教材、英文授课能达目的。在美国滞留十五载、教书十年，用英文写书、用英文讲课对我不是太大的问题。但是，我不想看到我的学生把物理化学当做英文课来听，把教育（包括自我教育）的第一要务抛到九霄云外。</p><footer><strong>彭笑刚</strong><cite><a href="https://www.zhihu.com/question/53375808/answer/144011374" target="_blank" rel="noopener">《物理化学讲义》后记</a></cite></footer></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Translation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OmegaT翻译环境安装与配置</title>
      <link href="/OmegaT%E7%BF%BB%E8%AF%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/OmegaT%E7%BF%BB%E8%AF%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>又想填坑了，所以找了个开源的辅助翻译软件，记录下配置过程</p><a id="more"></a><h1 id="0x00-词典、术语集管理"><a href="#0x00-词典、术语集管理" class="headerlink" title="0x00 词典、术语集管理"></a><em>0x00</em> 词典、术语集管理</h1><p><a href="http://termbox.lingosail.com/console/extract" target="_blank" rel="noopener">语帆术语宝</a><br>双语对照 –&gt; 术语表<br>即从中英对照的整段翻译中提取词汇对照表，可在线保存 or 导出为 Excel(.xls)或(.tbx)</p><p><a href="http://www.tmxmall.com/aligner" target="_blank" rel="noopener">在线对齐-Tmxmall</a><br>对齐后可导出为 .tmx \ .xlsx \ .txt</p><h2 id="术语下载"><a href="#术语下载" class="headerlink" title="术语下载"></a>术语下载</h2><p><a href="https://www.microsoft.com/Language/zh-cn/Terminology.aspx" target="_blank" rel="noopener">下载 Microsoft 术语</a></p><h2 id="词典下载"><a href="#词典下载" class="headerlink" title="词典下载"></a>词典下载</h2><p><a href="http://download.huzheng.org/zh_CN/" target="_blank" rel="noopener">zh_CN 简体中文词典 - StarDict Dictionaries – 星际译王词库 词典下载</a></p><h1 id="0x01-OmegaT-ini-的配置"><a href="#0x01-OmegaT-ini-的配置" class="headerlink" title="0x01 OmegaT.ini 的配置"></a><em>0x01</em> OmegaT.ini 的配置</h1><figure class="highlight plain"><figcaption><span>OmegaT.l4J.ini</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># OmegaT.exe runtime configuration</span><br><span class="line">#</span><br><span class="line"># To use a parameter, remove the &apos;#&apos; before the &apos;-&apos;</span><br><span class="line"></span><br><span class="line"># Memory</span><br><span class="line">-Xmx512M</span><br><span class="line"># Language</span><br><span class="line">-Duser.language=zh</span><br><span class="line"># Country</span><br><span class="line">-Duser.country=CN</span><br><span class="line"># Settings to access the Internet behind a proxy</span><br><span class="line">-Dhttp.proxyHost=127.0.0.1</span><br><span class="line">-Dhttp.proxyPort=1080</span><br><span class="line"># Google Translate v2 API key</span><br><span class="line">#-Dgoogle.api.key=xxxxx</span><br><span class="line"># Microsoft Translator credentials</span><br><span class="line">#-Dmicrosoft.api.client_id=xxxxx</span><br><span class="line">#-Dmicrosoft.api.client_secret=xxxxx</span><br><span class="line"># MyMemory email</span><br><span class="line">#-Dmymemory.api.email=xxxxx@xxxxx.xx</span><br><span class="line"># TaaS user key</span><br><span class="line">#-Dtaas.user.key=xxxxx</span><br><span class="line">#-Dyandex.api.key=xxxxx</span><br></pre></td></tr></table></figure><h2 id="Microsoft-Translator-的配置"><a href="#Microsoft-Translator-的配置" class="headerlink" title="Microsoft Translator 的配置"></a>Microsoft Translator 的配置</h2><p>参考<a href="https://www.microsoft.com/en-us/translator/getstarted.aspx" target="_blank" rel="noopener">Getting started using the Translator API</a></p><p>国内需要在 azure.cn 上登录\注册账号</p>]]></content>
      
      
      
        <tags>
            
            <tag> Translation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lecture 2 - Core Elements of Programs</title>
      <link href="/Lecture-2-Core-Elements-of-Programs/"/>
      <url>/Lecture-2-Core-Elements-of-Programs/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
          <category> MOOC </category>
          
          <category> edX </category>
          
          <category> MIT-6.00.1sp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lecture 1 - Introduction to Computation</title>
      <link href="/Lecture-1-Introduction-to-Computation/"/>
      <url>/Lecture-1-Introduction-to-Computation/</url>
      
        <content type="html"><![CDATA[<h1 id="Lecture-1-Introduction"><a href="#Lecture-1-Introduction" class="headerlink" title="Lecture 1 Introduction"></a><em>Lecture 1 Introduction</em></h1><p>Lecture 1将介绍：计算方法和计算思维的一些基本原则：     </p><ol><li>计算机到底干了什么？</li></ol><ul><li>计算机最基本的操作(元指令)是什么？</li><li>这些元指令怎样构成我们所说的程序性知识(imperative knowledge)或操作方法？</li><li>算法中，让计算机能够完成计算的最基本的元素、原则是什么？</li><li>我们应该怎样用一门编程语言来描述上述的方法、原则？</li></ul><a id="more"></a><h2 id="Section1-Introduction-to-Computer-Science-and-Programming"><a href="#Section1-Introduction-to-Computer-Science-and-Programming" class="headerlink" title="Section1 Introduction to Computer Science and Programming"></a>Section1 Introduction to Computer Science and Programming</h2><ul><li>Goal<ul><li>Become skillful at making a computer do what you want it to do</li><li>Learn computational modes of thinking</li><li>Master the art of computational problem solving</li></ul></li></ul><h2 id="Section2-Basics-Of-Computation"><a href="#Section2-Basics-Of-Computation" class="headerlink" title="Section2 Basics Of Computation"></a>Section2 Basics Of Computation</h2><h3 id="计算机能干什么"><a href="#计算机能干什么" class="headerlink" title="计算机能干什么?"></a>计算机能干什么?</h3><ul><li>计算机的基本功能:<ul><li>计算 (Performs calculations)</li><li>存储 (Remembers the results)</li></ul></li><li>计算机能够做什么计算什么?<ul><li>内置的基本运算</li><li>我们自己所创造的计算方法</li></ul></li></ul><h3 id="计算机的运算速度"><a href="#计算机的运算速度" class="headerlink" title="计算机的运算速度"></a>计算机的运算速度</h3><p>计算机速度很快</p><ul><li>在光走完 1feet 所用的时间内，可以完成2次元指令</li><li>在小球自由落体 下落 1m 所用的时间内，可以完成 1,000,000,000 次元指令</li></ul><h3 id="计算机的存储空间"><a href="#计算机的存储空间" class="headerlink" title="计算机的存储空间"></a>计算机的存储空间</h3><p>计算机的存储空间很大：假设 1 byte=1 ounce, 通常一个计算机有 100G 的存储空间，则等同于 300,,000,000 tons</p><h3 id="计算机-现有的-计算能力足够了么？"><a href="#计算机-现有的-计算能力足够了么？" class="headerlink" title="计算机(现有的)计算能力足够了么？"></a>计算机(现有的)计算能力足够了么？</h3><p>其实并不是,在以下方面都不够好</p><ul><li>搜索万维网(World Wild Web)</li><li>下国际象棋</li><li>算法设计</li></ul><h3 id="计算机的限制"><a href="#计算机的限制" class="headerlink" title="计算机的限制"></a>计算机的限制</h3><ul><li>虽然计算机已经足够快了，但仍有限制<ul><li>有些过于复杂的问题难于计算<ul><li>天气预测</li><li>破解现代密码</li></ul></li><li>另有一些基本的问题无法计算<ul><li>停机问题</li></ul></li></ul></li></ul><h2 id="Section3-Types-of-Knowledge"><a href="#Section3-Types-of-Knowledge" class="headerlink" title="Section3 Types of Knowledge"></a>Section3 Types of Knowledge</h2><h3 id="解决计算问题"><a href="#解决计算问题" class="headerlink" title="解决计算问题"></a>解决计算问题</h3><ul><li>什么是计算<ul><li>什么是知识</li><li>陈述性知识 (Declarative knowledge)<ul><li>事实的陈述</li><li>y是x的平方根 –&gt; y*y=x</li></ul></li><li>方法性知识 (Imperative knowledge)<ul><li>做事的方法、工序 (方法学)</li><li>迭代求平方根<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while(g*g - x &gt; erf):</span><br><span class="line">    g = g + x/g</span><br><span class="line">return g</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><p>算法是方法学的一种</p><h2 id="Section4-Basic-Machine-Architecture"><a href="#Section4-Basic-Machine-Architecture" class="headerlink" title="Section4 Basic Machine Architecture"></a>Section4 Basic Machine Architecture</h2><h3 id="我们怎样才能在机械的-运算-过程中找到一个通用的方法"><a href="#我们怎样才能在机械的-运算-过程中找到一个通用的方法" class="headerlink" title="我们怎样才能在机械的(运算)过程中找到一个通用的方法"></a>我们怎样才能在机械的(运算)过程中找到一个通用的方法</h3><ul><li>固定程序的计算机(Fixed Program Computers)<ul><li>计算器</li><li>1941年，Atanasoff and Berry’s (1941) computer for systems of linear equations</li><li>1940年，图灵’炸弹’(Alan Turing’s bombe) —— 解密德军的Enigma密码</li></ul></li><li>使用一个储存了可变指令的计算机<ul><li>存储程序计算机(Stored Program Computer)</li></ul></li></ul><h3 id="Stored-program-computer"><a href="#Stored-program-computer" class="headerlink" title="Stored program computer"></a>Stored program computer</h3><p>储存程序计算机的组成：</p><ul><li>储存在计算机内部的一系列指令(程序)<ul><li>由预定义的元指令组成<ul><li>算法和逻辑</li><li>简单的测试(条件判断)</li><li>移动数据</li></ul></li></ul></li><li>能够以一定顺序执行语句的特殊程序(解释器)<ul><li>用测试(判断条件)去改变语句流，或者在必要的时候停下来</li></ul></li></ul><h3 id="什么是元指令？"><a href="#什么是元指令？" class="headerlink" title="什么是元指令？"></a>什么是元指令？</h3><ul><li>图灵证明了用6个元指令就能计算一切<ul><li>图灵完备性 (Turing complete)</li></ul></li><li>幸运的是，现代编程语言有一系列方便的元指令</li><li>可以通过一些特殊的方法来构建元指令</li><li>在任何一中编程语言中能够计算的东西，在另一种编程语言中都同样能够计算</li></ul><h2 id="Section5-Programming-Language-Characteristics"><a href="#Section5-Programming-Language-Characteristics" class="headerlink" title="Section5 Programming Language Characteristics"></a>Section5 Programming Language Characteristics</h2><h3 id="创造“方法”"><a href="#创造“方法”" class="headerlink" title="创造“方法”"></a>创造“方法”</h3><p>每一种编程语言都提供了：</p><ul><li>一系列的元操作</li><li>一种将元操作组合起来形成更复杂但是合法的表达式的方法</li><li>一种能够推导或计算表达式的值或含义的方法</li></ul><h3 id="语言的几个方面"><a href="#语言的几个方面" class="headerlink" title="语言的几个方面"></a>语言的几个方面</h3><ul><li>基本结构 (Primitive constructs)<ul><li>编程语言：数字，字符串，简单操作符</li><li>英语：单词</li></ul></li><li>句法 (Syntax) —— 规定了字母和符号怎样组合才是符合文法的<ul><li>编程语言：在Python中 <code>3 + 3</code> 是合法的</li><li>英语：“cat dog boy” 是不合法的</li></ul></li><li>静态语义 (Static semantics) —— 判断哪些符合句法的字符串有意义<ul><li>英语：“I are big” 符合 <code>&lt;noun&gt; &lt;intransitive verb&gt; &lt;noun&gt;</code> 的句法形式，他是符合句法的。但是在英语中 i 应该和 am 组合，所以这句话违反了自然语言的静态语义。</li><li>编程语言：<code>&lt;literal&gt; &lt;operator&gt; &lt;literal&gt;</code> 是一种有效的句法，但是 <code>2.3/&#39;abc&#39;</code> 不符合Python的静态语义。</li></ul></li><li>语义 (Semantics) —— 判断符合句法并且没有静态语义错误的字符串的意义<ul><li>英语：可能有歧义<br>“I cannot praise this student too highly”</li><li>编程语言：只有一种确定的意义</li></ul></li></ul><h3 id="字符串可能有哪些错误？"><a href="#字符串可能有哪些错误？" class="headerlink" title="字符串可能有哪些错误？"></a>字符串可能有哪些错误？</h3><ul><li>语义错误<ul><li>常见，但很容易必被编译器发现</li></ul></li><li>静态语义错误<ul><li>一些语言能在编译时发现这些错误；<br>另一些会在运行时检查这些错误</li><li>如果没有检查出错误，程序的行为可能无法预测</li></ul></li><li>程序没有静态语义错误，但其意义可能不是我们想要的<ul><li>程序崩溃</li><li>死循环</li><li>程序给出意料之外的结果</li></ul></li></ul><h3 id="我们的目标"><a href="#我们的目标" class="headerlink" title="我们的目标"></a>我们的目标</h3><ul><li>学习一种编程语言的句法和语义</li><li>学习怎样用编程语言将“方法”(算法)表述成，计算机能够执行的代码</li><li>学会将问题分解为一步步的计算的思维模式</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
          <category> MOOC </category>
          
          <category> edX </category>
          
          <category> MIT-6.00.1sp </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>edX-计算机科学和Python编程导论学习笔记</title>
      <link href="/edX-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%92%8CPython%E7%BC%96%E7%A8%8B%E5%AF%BC%E8%AE%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/edX-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%92%8CPython%E7%BC%96%E7%A8%8B%E5%AF%BC%E8%AE%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>开坑了，这里用作目录。</p><a id="more"></a><h1 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h1><h1 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h1><h1 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h1><h1 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h1><h1 id="Week5"><a href="#Week5" class="headerlink" title="Week5"></a>Week5</h1><h1 id="Week6"><a href="#Week6" class="headerlink" title="Week6"></a>Week6</h1><h1 id="Week7"><a href="#Week7" class="headerlink" title="Week7"></a>Week7</h1><h1 id="Week8"><a href="#Week8" class="headerlink" title="Week8"></a>Week8</h1>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
          <category> MOOC </category>
          
          <category> edX </category>
          
          <category> MIT-6.00.1sp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> edX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>x64下的Python与HANDLE</title>
      <link href="/x64%E4%B8%8B%E7%9A%84Python%E4%B8%8EHANDLE/"/>
      <url>/x64%E4%B8%8B%E7%9A%84Python%E4%B8%8EHANDLE/</url>
      
        <content type="html"><![CDATA[<p>我又默默地开了<a href="https://github.com/inkydragon/GHP-PyDbg" target="_blank" rel="noopener">新坑</a>.</p><p>这篇文章是填坑中坑有感</p><h1 id="坑的起源及发展"><a href="#坑的起源及发展" class="headerlink" title="坑的起源及发展"></a>坑的起源及发展</h1><p>我尝试在x64下跑GHP-PyDbg(实际上和PyDbg是一个东西)</p><p>然后遇到获取DLL中函数句柄的问题。本来很简单，Python有ctype写起来也很好。</p><figure class="highlight python"><figcaption><span>func_resolve()</span><a href="https://github.com/OpenRCE/pydbg/blob/master/pydbg.py#L1735" target="_blank" rel="noopener">pydbg.py</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_resolve</span> <span class="params">(self, dll, function)</span>:</span></span><br><span class="line">    handle  = kernel32.LoadLibraryA(dll)</span><br><span class="line">    address = kernel32.GetProcAddress(handle, function)</span><br><span class="line"></span><br><span class="line">    kernel32.FreeLibrary(handle)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> address</span><br></pre></td></tr></table></figure><p>然后就报错，调试一下，发现是<code>handle</code>溢出了。</p><p>坑中坑就开始了。</p><a id="more"></a><h1 id="坑中坑"><a href="#坑中坑" class="headerlink" title="坑中坑"></a>坑中坑</h1><p>讲道理：<br>python是超出int自动转换为long<br>GetModuleHandleA返回值是HMODULE跟系统有关，x64就是long</p><p>都不应该有问题，但是就是溢出了。</p><img src="/x64下的Python与HANDLE/code.png" width="500" height="225" title="坑中的代码"><img src="/x64下的Python与HANDLE/windbg.png" width="500" height="225" title="用WinDbg查看真实的函数地址"><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在折腾了一天后…..</p><p>我绕了一圈，又绕回到原来的问题上了，不过有少许进步</p><p>我让GetProcAddress已经成功的取到printf的地址，之后就溢出了，还是不知道锅是谁的<br><img src="/x64下的Python与HANDLE/code2.png" width="500" height="225" title="略微修改的代码"><br><img src="/x64下的Python与HANDLE/stack.png" width="415" height="225"></p><p>然后我感觉Microsoft什么溢出没见过，在Windows上WINAPI那是最吼地.这个锅一定是Python的。</p><p>本着”我遇到的问题，别人一定遇到并解决过了”的信念。<br>又经过一番查找，终于发现函数如果不指定返回的类型，Python默认用int去接收。<br><blockquote><p>四、c 类型与 Python 类型， 参数类型、返回类型</p><p>之所以会调用 addf 函数“失败”倒不是 Python 出了问题。原因是你没有“告诉” Python 这个函数的“容貌”（更正式的说法是“描述”）——函数的形参类型和返回类型。那么为什么我们调用 add 成功了呢？因为 Python 默认函数的参数类型和返回类型为 int 型。理所当然地 Python 以为 addf 返回了一个 int 类型的值。</p><footer><strong>无尽的数字眩晕症</strong><cite><a href="http://www.cnblogs.com/night-ride-depart/p/4907613.html" target="_blank" rel="noopener">python 与 c 的交互</a></cite></footer></blockquote></p><p>然后我就改代码了,然后就好使了。</p><figure class="highlight python"><figcaption><span>func_resolve()</span><a href="https://github.com/inkydragon/GHP-PyDbg/commit/015b1eacd0d02db1e71cd20d5be88a76dee1af05#diff-32ef09858fe30f6d1098ead3ffdbb7b2R238" target="_blank" rel="noopener">pydbg.py</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_resolve</span><span class="params">(self,dll,function)</span>:</span></span><br><span class="line">    <span class="comment"># 不指定返回值，python会将返回值默认当做int处理，导致溢出</span></span><br><span class="line">    kernel32.GetModuleHandleA.restype = c_ulonglong</span><br><span class="line">    kernel32.GetProcAddress.restype = c_longlong</span><br><span class="line"></span><br><span class="line">    handle  = c_longlong(kernel32.GetModuleHandleA(dll))</span><br><span class="line">    <span class="comment"># 此时handle的实际类型为long，需要再次转换成 longlong，否则会报错 long int too long to convert</span></span><br><span class="line">    address = kernel32.GetProcAddress(handle, function)</span><br><span class="line"></span><br><span class="line">    kernel32.CloseHandle(handle)</span><br><span class="line">    <span class="keyword">return</span> address</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> PyDbg </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Win10 x64 WinDbg JIT调试设置</title>
      <link href="/Win10-x64-WinDbg-JIT%E8%B0%83%E8%AF%95%E8%AE%BE%E7%BD%AE/"/>
      <url>/Win10-x64-WinDbg-JIT%E8%B0%83%E8%AF%95%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>《格蠹汇编》中第四章有关于如何把WinDbg设为Windows的JIT调试器方法。  </p><blockquote><p>打开一个以管理员身份运行的控制台窗口，切换到WinDbg躲在的目录。然后执行<code>WinDbg -I</code>,将WinDbg注册成为JIT调试器，如果执行成功，那么WinDbg会弹出对话框。——《格蠹汇编》P28</p></blockquote><a id="more"></a><p>按照书中的方法，用书中的例子初步试了一下，发现系统还是用MSVC作为默认的调试器。<br><img src="/Win10-x64-WinDbg-JIT调试设置/vs.png" title="MSVC调试器"></p><p>在经过一番尝试后，终于找到了解决方案。</p><p>我的系统是Win10 x64,在注册表中有两个控制JIT的项。分别控制x86和x64程序的默认调制器。最开始我尝试时注册了x64的WinDbg为默认调试器，而我调试的程序是x86的，而我又安装了MSVC,所以还是以MSVC为x86程序的默认调试器。</p><p>【解决方案】先清理了一遍注册表，然后再分别注册x86和x64的WinDbg就可以用了。</p><ol><li><p><strong>清理注册表</strong><br><strong><em>x86部分</em></strong><br>删除<code>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows NT\CurrentVersion\AeDebug</code>中的<code>Auto</code>和<code>Debugger</code>两项。<br><strong><em>x64部分</em></strong>   </p><img src="/Win10-x64-WinDbg-JIT调试设置/regedit_x86.png" title="AeDebug">     <p>删除<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AeDebug</code>中的<code>Auto</code>和<code>Debugger</code>两项。   </p><img src="/Win10-x64-WinDbg-JIT调试设置/regedit_x64.png" title="AeDebug"></li><li><p><strong>注册WinDbg为默认的JIT调试器</strong><br>在管理员模式下的CMD中输入<br>【注：下面的地址为WinDbg的根目录，请根据实际情况进行修改】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Program Files (x86)\Windows Kits\10\Debuggers\x86</span><br><span class="line">windbg -I</span><br><span class="line">cd C:\Program Files (x86)\Windows Kits\10\Debuggers\x64</span><br><span class="line">windbg -I</span><br></pre></td></tr></table></figure></li></ol><p>出现弹窗说明注册成功，这样x86和x64和JIT一时期就都注册为WinDbg了。<br><img src="/Win10-x64-WinDbg-JIT调试设置/windbg_1.png" title="WinDbg注册成功"></p><ol start="3"><li><p><strong>JIT参数微调</strong><br>1.中注册表项<code>Auto</code>可取值<code>0</code> or <code>1</code>。<br>取<code>0</code>，代表不自动启动调试器，会显示一个对话框，询问你是否启动调试器。<br>取<code>1</code>，则自动打开默认的调试器。   </p><img src="/Win10-x64-WinDbg-JIT调试设置/shut.png" title="程序崩溃"><img src="/Win10-x64-WinDbg-JIT调试设置/choose.png" title="选择是否调试"></li><li><p><strong>调试符号设置</strong><br>为了方便调试，在WinDbg中按<code>Ctrl+S</code>打开将符号路径设置<br>输入<code>cache*c:\mysymbol;srv*https://msdl.microsoft.com/download/symbols</code>这样WinDbg就可以自动从微软的符号服务器下载符号文件并缓存在<code>c:\mysymbol</code>文件夹下。     </p><img src="/Win10-x64-WinDbg-JIT调试设置/windbg_symbol.png" title="WinDbg 符号设置"><img src="/Win10-x64-WinDbg-JIT调试设置/c_symbol.png" title="C盘的符号缓存">    <p>设置好后，WinDbg会自动加载下载/加载符号文件       </p><img src="/Win10-x64-WinDbg-JIT调试设置/symbols.png" title="WinDbg成功加载符号文件">  </li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> WinDbg </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Excel 度分秒表示</title>
      <link href="/Excel-%E5%BA%A6%E5%88%86%E7%A7%92%E8%A1%A8%E7%A4%BA/"/>
      <url>/Excel-%E5%BA%A6%E5%88%86%E7%A7%92%E8%A1%A8%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>做光学实验需要处理数据，原始数据是以度分秒为单位的。但excel并不支持这种格式。需要改进表示和计算方法。</p><a id="more"></a><h1 id="度分秒的表示"><a href="#度分秒的表示" class="headerlink" title="度分秒的表示"></a>度分秒的表示</h1><p>以时间形式式输入角度<br>即 <code>310°28&#39;30&quot; -&gt; 310:28:30</code><br><img src="/Excel-度分秒表示/0-格式.png"></p><p>选中单元格<br>改单元格为 其他数字格式<br><img src="/Excel-度分秒表示/1-格式.png"></p><p>选数字-&gt;自定义<br><img src="/Excel-度分秒表示/2-格式.png"></p><p>找到时分秒<br><img src="/Excel-度分秒表示/3-格式.png"></p><p>改为 [h]”°”mm”‘“ss”“”<br><img src="/Excel-度分秒表示/4-格式.png"></p><p>点确定<br>即可正常显示<br><img src="/Excel-度分秒表示/5-结果.png"></p><p>这样单元格的格式就设定好了<br><img src="/Excel-度分秒表示/6-结果.png"></p><h1 id="探究"><a href="#探究" class="headerlink" title="探究"></a>探究</h1><p>从公式栏可以看出，数据其实是以日期的形式表示的。<br>当我们在做运算时要注意:<br>单元格+1 = 原始数据+24°<br>eg: <code>310°28&#39;30&quot; + 1 = 334°28&#39;30&quot;</code><br><img src="/Excel-度分秒表示/7-演示.png"><br><img src="/Excel-度分秒表示/8-演示.png"><br>即 把日期增加了一天</p><p>故要加上360° 应加上15</p><p>角度相加时可以对15 取模，让结果在[0°,360°)之内</p>]]></content>
      
      
      
        <tags>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Legal High 第一季观后感</title>
      <link href="/Legal-High-%E7%AC%AC%E4%B8%80%E5%AD%A3%E8%A7%82%E5%90%8E%E6%84%9F/"/>
      <url>/Legal-High-%E7%AC%AC%E4%B8%80%E5%AD%A3%E8%A7%82%E5%90%8E%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>化学狗莫名中枪<br><img src="/Legal-High-第一季观后感/ligohi1.png" title="又黑化学狗"></p><a id="more"></a><p>欲扬先抑<br><img src="/Legal-High-第一季观后感/ligohi2.png" title="美好的理想"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 日剧 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello Hexo</title>
      <link href="/Hello-Hexo/"/>
      <url>/Hello-Hexo/</url>
      
        <content type="html"><![CDATA[<p>Hexo搭起来了，又可以折腾好一阵子了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>波利亚计数定理的简单应用</title>
      <link href="/%E6%B3%A2%E5%88%A9%E4%BA%9A%E8%AE%A1%E6%95%B0%E5%AE%9A%E7%90%86%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/"/>
      <url>/%E6%B3%A2%E5%88%A9%E4%BA%9A%E8%AE%A1%E6%95%B0%E5%AE%9A%E7%90%86%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="问题的提出"><a href="#问题的提出" class="headerlink" title="问题的提出"></a>问题的提出</h1><p>原题目：用二十种氨基酸取代立方烷，产物有多少种（不考虑手性异构）？</p><p>【注】：原题目改编自<br><a href="http://wenku.baidu.com/view/1db8792c6bd97f192279e9ec.html" target="_blank" rel="noopener">1997年国初题</a>。</p><img src="/波利亚计数定理的简单应用/gc.jpg" title="1997年国初题"><a id="more"></a><h1 id="思路及文献"><a href="#思路及文献" class="headerlink" title="思路及文献"></a>思路及文献</h1><p>经大神指点应用<a href="http://baike.baidu.com/item/%E6%B3%A2%E5%88%A9%E4%BA%9A%E5%AE%9A%E7%90%86" target="_blank" rel="noopener">波利亚计数定理</a>解题。</p><p>找到文献：<a href="https://pan.baidu.com/s/1i4w2qlZ" target="_blank" rel="noopener">走向数学丛书01-波利亚计数定理-萧文强.pdf</a></p><h1 id="步骤及过程"><a href="#步骤及过程" class="headerlink" title="步骤及过程"></a>步骤及过程</h1><p>按书中步骤写出了S4的<a href="http://baike.baidu.com/view/1879054.htm" target="_blank" rel="noopener">置换群</a></p><p>图3-1<br><img src="/波利亚计数定理的简单应用/3.1.jpg" title="S4的置换群"></p><p> 以此作参照算出出立方体的圈分解</p><p>【注】：下图中的a,b,c,d为线段，定义见图3-1。<br>        面ab,ac,ad….为两条线段所在的平面。<br>        XYZ直角坐标系原点在立方体中心，即a,b,c,d的交点。</p><p>图3-2<br><img src="/波利亚计数定理的简单应用/3.2.jpg" title="圈分解"></p><p>图3-3<br><img src="/波利亚计数定理的简单应用/3.3.jpg" title="圈分解"></p><p>图3-4<br><img src="/波利亚计数定理的简单应用/3.4.jpg" title="圈分解"></p><h2 id="圈分解小结"><a href="#圈分解小结" class="headerlink" title="圈分解小结"></a>圈分解小结</h2><p>图3-5<br><img src="/波利亚计数定理的简单应用/3.5.jpg" title="圈分解小结"></p><hr><p>验证，验证公式中的式子能否被24整除来验证计算是否有误。</p><p>根据同余定理可知只需将1~12带入计算，若都为整数则原式可被24整除。</p><p>计算结果<br><img src="/波利亚计数定理的简单应用/res.jpg" title="MOD24"></p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>将21（20种氨基酸+氢元素）带入公式计算可得<br><img src="/波利亚计数定理的简单应用/res2.jpg" title="最终结果"></p><p>结果中含立方烷本身，故最终结果为15,7609,0340种。</p>]]></content>
      
      
      <categories>
          
          <category> 代数学 </category>
          
          <category> 群论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组合数学 </tag>
            
            <tag> 波利亚计数定理 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
  
</search>
